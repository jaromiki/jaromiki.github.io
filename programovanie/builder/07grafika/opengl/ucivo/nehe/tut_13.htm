<?xml version="1.0" encoding="ISO-8859-2"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="cs" lang="CS">
<head>

<meta http-equiv="content-type" content="text/html; charset=ISO-8859-2" />
<meta http-equiv="content-language" content="cs" />
<meta http-equiv="content-script-type" content="text/javascript" />
<meta http-equiv="content-style-type" content="text/css" />

<meta name="robots" content="all, follow" />
<meta name="resource-type" content="document" />

<meta name="description" content="NeHe OpenGL Tutoriály v èe¹tinì, programování 3D grafiky, èlánky, programy se zdrojovými kódy..." />
<meta name="keywords" content="opengl, nehe, tutoriály, woq, programování, 3D" />
<meta name="author" content="all: Michal Turek - Woq; woq (zavináè) seznam.cz" />
<meta name="copyright" content="Copyright (c) 2002, 2003, 2004 Michal Turek - Woq" />

<title>CZ NeHe OpenGL - Lekce 13 - Bitmapové fonty</title>

<link rel="shortcut icon" href="skin/default/web.ico" type="image/x-icon" />
<link href="skin/default.css" rel="stylesheet" type="text/css" media="all" />
<link href="skin/print.css" rel="stylesheet" type="text/css" media="print" />

</head>

<body>

<!-- Levý sloupec -->
<div class="levy">
<div id="main_menu">
<a href="http://nehe.ceske-hry.cz/"><img src="skin/default/web_logo.gif" width="135" height="135" style="margin-left: 5px;" alt="CZ NeHe OpenGL" /></a>

<div class="main_menu_bez_loga">

<ul class="text_main_menu">
<li><a href="my.php" title="Pøekladatelé NeHe Tutoriálù a autoøi èlánkù">My</a></li>
<li><a href="novinky.php" title="Co je nového">Novinky</a></li>
<li><a href="navigacni_mapa.php" title="Pøehledná navigace na jednotlivé stránky, které dohromady tvoøí tento web">Navigaèní mapa</a></li>
<li><a href="kontakt.php" title="Kontakt na správce tohoto webu">Kontakt</a></li>
<li><a href="http://forum.programovani.com/" title="Diskusní fórum">Fórum</a></li>
</ul>

<ul class="text_main_menu">
<li><a href="clanky.php" title="Obsah èlánkù">Èlánky</a></li>
<li><a href="tut_obsah.php" title="Obsah NeHe OpenGL Tutoriálù">NeHe Tutoriály</a></li>
<li><a href="33D_index.php" title="Obsah Free3D (33D) Basecode">33D Basecode</a></li>
<li><a href="programy.php" title="Programy od èeských autorù">Èeské programy</a></li>
<li><a href="cl_gl_zacinam.php" title="Kde zaèít pøi uèení OpenGL">Pomoc, zaèínám</a></li>
<li><a href="odkazy.php" title="Jiné zdroje informací">Odkazy</a></li>
<li><a href="cl_gl_faq.php" title="FAQ: Èasto kladené dotazy">FAQ</a></li>
</ul>

<ul class="text_main_menu">
<li><a href="spoluprace.php" title="Nechcete se podílet na tvorbì tìchto webových stránek?">Spolupráce...?</a></li>
<li><a href="download.php" title="Stahujte">Download</a></li>
<li><a href="skiny.php" title="Nastavte si jiný layout a design stránek">Skiny</a></li>
<li><a href="javascript:window.print();" title="Vytiskne tuto stránku">Tisk</a></li>
</ul>

<ul class="text_main_menu">
<li>
<form action="p_fulltext.php" method="post" onsubmit="if(!this.najit.value || this.najit.value=='výraz ...') { alert('Byl zadán prázdný øetìzec!'); this.najit.focus(); return false; }">
<input type="text" name="najit" size="12" value="výraz ..." onclick="this.value=''" /><br />
<input type="submit" value="Najít" />
</form>
</li>
</ul>

<ul class="text_main_menu">
<li>Online ètenáøù: 2</li>
</ul>

</div>

</div>
</div>
<!-- Levý sloupec (konec) -->

<!-- Pravý sloupec -->
<div class="pravy">
<div id="tut_menu">

<ul class="text_tut_menu">
<li class="li_tut"><a href="tut_00.php" title="Lekce 0 - Pøedmluva k NeHe Tutoriálùm">00</a></li>
<li class="li_tut"><a href="tut_01.php" title="Lekce 1 - Vytvoøení OpenGL okna ve Windows">01</a></li>
<li class="li_tut"><a href="tut_02.php" title="Lekce 2 - Vytváøení trojúhelníkù a ètyøúhelníkù">02</a></li>
<li class="li_tut"><a href="tut_03.php" title="Lekce 3 - Barvy">03</a></li>
<li class="li_tut"><a href="tut_04.php" title="Lekce 4 - Rotace">04</a></li>
<li class="li_tut"><a href="tut_05.php" title="Lekce 5 - Pevné objekty">05</a></li>
<li class="li_tut"><a href="tut_06.php" title="Lekce 6 - Textury">06</a></li>
<li class="li_tut"><a href="tut_07.php" title="Lekce 7 - Texturové filtry, osvìtlení, ovládání pomocí klávesnice">07</a></li>
<li class="li_tut"><a href="tut_08.php" title="Lekce 8 - Blending">08</a></li>
<li class="li_tut"><a href="tut_09.php" title="Lekce 9 - Pohyb bitmap ve 3D prostoru">09</a></li>
<li class="li_tut"><a href="tut_10.php" title="Lekce 10 - Vytvoøení 3D svìta a pohyb v nìm">10</a></li>
<li class="li_tut"><a href="tut_11.php" title="Lekce 11 - Efekt vlnící se vlajky">11</a></li>
<li class="li_tut"><a href="tut_12.php" title="Lekce 12 - Display list">12</a></li>
<li class="li_tut"><a href="tut_13.php" title="Lekce 13 - Bitmapové fonty">13</a></li>
<li class="li_tut"><a href="tut_14.php" title="Lekce 14 - Outline fonty">14</a></li>
<li class="li_tut"><a href="tut_15.php" title="Lekce 15 - Mapování textur na fonty">15</a></li>
<li class="li_tut"><a href="tut_16.php" title="Lekce 16 - Mlha">16</a></li>
<li class="li_tut"><a href="tut_17.php" title="Lekce 17 - 2D fonty z textur">17</a></li>
<li class="li_tut"><a href="tut_18.php" title="Lekce 18 - Kvadriky">18</a></li>
<li class="li_tut"><a href="tut_19.php" title="Lekce 19 - Èásticové systémy">19</a></li>
<li class="li_tut"><a href="tut_20.php" title="Lekce 20 - Maskování">20</a></li>
<li class="li_tut"><a href="tut_21.php" title="Lekce 21 - Pøímky, antialiasing, èasování, pravoúhlá projekce, základní zvuky a jednoduchá herní logika">21</a></li>
<li class="li_tut"><a href="tut_22.php" title="Lekce 22 - Bump Mapping &amp; Multi Texturing">22</a></li>
<li class="li_tut"><a href="tut_23.php" title="Lekce 23 - Mapování textur na kulové kvadriky">23</a></li>
<li class="li_tut"><a href="tut_24.php" title="Lekce 24 - Výpis OpenGL roz¹íøení, oøezávací testy a textury z TGA obrázkù">24</a></li>
<li class="li_tut"><a href="tut_25.php" title="Lekce 25 - Morfování objektù a jejich nahrávání z textového souboru">25</a></li>
<li class="li_tut"><a href="tut_26.php" title="Lekce 26 - Odrazy a jejich oøezávání za pou¾ití stencil bufferu">26</a></li>
<li class="li_tut"><a href="tut_27.php" title="Lekce 27 - Stíny">27</a></li>
<li class="li_tut"><a href="tut_28.php" title="Lekce 28 - Bezierovy køivky a povrchy, fullscreen fix">28</a></li>
<li class="li_tut"><a href="tut_29.php" title="Lekce 29 - Blitter, nahrávání .RAW textur">29</a></li>
<li class="li_tut"><a href="tut_30.php" title="Lekce 30 - Detekce kolizí">30</a></li>
<li class="li_tut"><a href="tut_31.php" title="Lekce 31 - Nahrávání a renderování modelù">31</a></li>
<li class="li_tut"><a href="tut_32.php" title="Lekce 32 - Picking, alfa blending, alfa testing, sorting">32</a></li>
<li class="li_tut"><a href="tut_33.php" title="Lekce 33 - Nahrávání komprimovaných i nekomprimovaných obrázkù TGA">33</a></li>
<li class="li_tut"><a href="tut_34.php" title="Lekce 34 - Generování terénù a krajin za pou¾ití vý¹kového mapování textur">34</a></li>
<li class="li_tut"><a href="tut_35.php" title="Lekce 35 - Pøehrávání videa ve formátu AVI">35</a></li>
<li class="li_tut"><a href="tut_36.php" title="Lekce 36 - Radial Blur, renderování do textury">36</a></li>
<li class="li_tut"><a href="tut_37.php" title="Lekce 37 - Cel-Shading">37</a></li>
<li class="li_tut"><a href="tut_38.php" title="Lekce 38 - Nahrávání textur z resource souboru &amp; texturování trojúhelníkù">38</a></li>
<li class="li_tut"><a href="tut_39.php" title="Lekce 39 - Úvod do fyzikálních simulací">39</a></li>
<li class="li_tut"><a href="tut_40.php" title="Lekce 40 - Fyzikální simulace lana">40</a></li>
<li class="li_tut"><a href="tut_41.php" title="Lekce 41 - Volumetrická mlha a nahrávání obrázkù pomocí IPicture">41</a></li>
<li class="li_tut"><a href="tut_42.php" title="Lekce 42 - Více viewportù">42</a></li>
<li class="li_tut"><a href="tut_43.php" title="Lekce 43 - FreeType Fonty v OpenGL">43</a></li>
<li class="li_tut"><a href="tut_44.php" title="Lekce 44 - Èoèkové efekty">44</a></li>
<li class="li_tut"><a href="tut_45.php" title="Lekce 45 - Vertex Buffer Object (VBO)">45</a></li>
<li class="li_tut"><a href="tut_46.php" title="Lekce 46 - Fullscreenový antialiasing">46</a></li>
<li class="li_tut"><a href="tut_47.php" title="Lekce 47 - CG vertex shader">47</a></li>
<li class="li_tut"><a href="tut_48.php" title="Lekce 48 - ArcBall rotace">48</a></li>
</ul>

</div>
</div>
<!-- Pravý sloupec (konec) -->

<!-- Vlastní obsah stránky -->
<div class="stred">

<!--[if IE ]>
<div style="text-align: center;">
<a href="http://firefox.czilla.cz/"><img alt="Mozilla Firefox: Objevte znovu web" title="Mozilla Firefox: Objevte znovu web" style="border:none; width:468px;height:60px" src="http://firefox.czilla.cz/img/p/cz-ff-468x60-w-objevte.png" /></a>
</div>
<![endif]-->

<img src="images/nehe_tut/tut_13.jpg" class="nehe_maly" alt="Lekce 13" />

<h1>Lekce 13 - Bitmapové fonty</h1>

<p class="nadpis_clanku">Èasto kladená otázka týkající se OpenGL zní: "Jak zobrazit text?". V¾dycky jde namapovat texturu textu. Bohu¾el nad ním máte velmi malou kontrolu. A pokud nejste dobøí v blendingu, vìt¹inou skonèíte smixováním s ostatními obrázky. Pokud byste chtìli znát lehèí cestu k výstupu textu na jakékoli místo s libovolnou barvou nebo fontem, potom je tato lekce urèitì pro vás. Bitmapové fonty jsou 2D písma, které nemohou být rotovány. V¾dy je uvidíte zepøedu.</p>

<p>Mo¾ná si øeknete co je tak tì¾kého na výstupu textu. Mù¾ete spustit grafický editor,  vepsat text do obrázku, nahrát ho jako texturu, zapnout blending a poté namapovat na polygon. Ale tím uberete èas procesoru. V závislosti na typu filtrování mù¾e výsledek vypadat rozmazanì nebo jako poskládaný z kostièek. Pokud by mìl alfa kanál, skonèí smíchaný s objekty na obrazovce. Jistì víte kolik rùzných fontù je dostupných v systému. V tomto tutoriálu se nauèíte jak je pou¾ívat. Nejen, ¾e bitmapové fonty vypadají stokrát lépe ne¾ text na textuøe, ale mù¾ete je jednodu¹e mìnit za bìhu programu. Není tøeba dìlat texturu pro ka¾dé slovo nebo nápis, který chcete vypsat. Staèí jen jeden pøíkaz. Sna¾il jsem se vytvoøit tuto funkci co nejjednodu¹¹í. V¹echno co musíte udìlat je napsat glPrint("Hello, world!"). Podle dlouhého úvodu mù¾ete øíci, ¾e jsem s tímto tutoriálem dost spokojený. Trvalo mi pøibli¾nì hodinu a pùl napsat tento program. Proè tak dlouho? Proto¾e ve skuteènosti nejsou dostupné ¾ádné informace o pou¾ívání bitmapových fontù, pokud samozøejmì nemáte rádi MFC. Abych udr¾el v¹e jednoduché, rozhodl jsem se, ¾e by bylo pìkné napsat jej v k pochopení jednoduchém C kódu.</p>

<p>Malá poznámka: Tento kód je specifický pro Windows. Pou¾ívá wgl funkce Windows pro vytvoøení fontu. Apple má pravdìpodobnì agl podporu, která by mìla dìlat tu samou vìc a X má glx. Nane¹tìstí nemohu zaruèit, ¾e tento kód je pøenositelný. Pokud má nìkdo na platformì nezávislý kód pro kreslení fontù na obrazovku, po¹lete mi jej a já napí¹i jiný tutoriál o fontech:</p>

<p>Zaèneme typickým kódem z lekce 1. Pøidáme hlavièkový soubor stdio.h pro vstupnì výstupní operace, stdarg.h pro rozbor textu a konvertování promìnných do textu a koneènì math.h, tak¾e mù¾eme pohybovat textem po obrazovce s pou¾itím funkcí SIN a COS.</p>

<p class="src0">#include &lt;windows.h&gt;<span class="kom">// Hlavièkový soubor pro Windows</span></p>
<p></p>
<p class="src0">#include &lt;math.h&gt;<span class="kom">// Hlavièkový soubor pro matematickou knihovnu</span></p>
<p class="src0">#include &lt;stdio.h&gt;<span class="kom">// Hlavièkový soubor pro standartní vstup/výstup</span></p>
<p class="src0">#include &lt;stdarg.h&gt;<span class="kom">// Hlavièkový soubor pro funkce s promìnným poètem parametrù</span></p>
<p></p>
<p class="src0">#include &lt;gl\gl.h&gt;<span class="kom">// Hlavièkový soubor pro OpenGL32 knihovnu</span></p>
<p class="src0">#include &lt;gl\glu.h&gt;<span class="kom">// Hlavièkový soubor pro Glu32 knihovnu</span></p>
<p class="src0">#include &lt;gl\glaux.h&gt;<span class="kom">// Hlavièkový soubor pro Glaux knihovnu</span></p>
<p></p>
<p class="src0">HDC hDC = NULL;<span class="kom">// Privátní GDI Device Context</span></p>
<p class="src0">HGLRC hRC = NULL;<span class="kom">// Trvalý Rendering Context</span></p>
<p class="src0">HWND hWnd = NULL;<span class="kom">// Obsahuje Handle na¹eho okna</span></p>
<p class="src0">HINSTANCE hInstance;<span class="kom">// Obsahuje instanci aplikace</span></p>
<p></p>
<p class="src0">bool keys[256];<span class="kom">// Pole pro ukládání vstupu z klávesnice</span></p>
<p class="src0">bool active = TRUE;<span class="kom">// Ponese informaci o tom, zda je okno aktivní</span></p>
<p class="src0">bool fullscreen = TRUE;<span class="kom">// Ponese informaci o tom, zda je program ve fullscreenu</span></p>

<p>Pøidáme 3 nové promìnné. V base ulo¾íme èíslo prvního vytvoøeného display listu. Ka¾dý znak bude potøebovat vlastní, tak¾e jich bude relativnì dost. Znaku 'A' pøiøadíme èíslo 65, 'B' 66, 'C' 67 atd. Lehce usoudíte, ¾e 'A' bude ulo¾eno v base + 65 ('A' je 65 znak Ascii tabulky). Dále pøidáme 2 èítaèe, které pou¾ijeme k pohybu textu po obrazovce s pou¾itím sinù a kosinù. Budou slou¾it i ke generování barvy znakù (více dále).</p>

<p class="src0">GLuint base;<span class="kom">// Èíslo základního display listu znakù</span></p>
<p class="src0">GLfloat cnt1;<span class="kom">// Pro pohyb a barvu textu</span></p>
<p class="src0">GLfloat cnt2;<span class="kom">// Pro pohyb a barvu textu</span></p>

<p>Následující funkce vytvoøí font - asi nejtì¾¹í èást. "HFONT font" øekne Windows, ¾e budeme manipulovat s fonty Windows. Vytvoøením 96 display listù definujeme base. Po skonèení této operace v ní bude ulo¾eno èíslo prvního listu.</p>

<p class="src0">GLvoid BuildFont(GLvoid)<span class="kom">// Vytvoøení fontu</span></p>
<p class="src0">{</p>
<p class="src1">HFONT font;<span class="kom">// Promìnná fontu</span></p>
<p class="src1">base = glGenLists(96);<span class="kom">// 96 znakù</span></p>

<p>Vytvoøíme font. První parametr specifikuje velikost. V¹imnìte si, ¾e je to záporné èíslo. Vlo¾ením znaménka mínus øekneme Windows, aby na¹lo písmo podle vý¹ky ZNAKU. Pokud bychom pou¾ili kladné, hledalo by se podle vý¹ky BUÒKY.</p>

<p class="src1">font = CreateFont(-24,<span class="kom">// Vý¹ka</span></p>

<p>Urèíme ¹íøku buòky. Zadáním nuly Windows pou¾ije implicitní hodnotu. Konkrétní hodnotou vytvoøíme font ¹ir¹í.</p>

<p class="src2">0,<span class="kom">// ©íøka</span></p>

<p>Úhel escapement natoèí font. Není to zrovna nejlep¹í vlastnost. Kdybyste nepou¾ili 0, 90, 180 nebo 270 stupòù, font by se pravdìpodobnì oøezal rámeèkem.</p>

<p class="src2">0,<span class="kom">// Úhel escapement</span></p>
<p class="src2">0,<span class="kom">// Úhel orientace</span></p>

<p>Tuènost fontu je u¾iteèný parametr. Lze pou¾ít èísla 0 a¾ 1000 nebo nìkterou z pøeddefinovaných hodnot. FW_DONTCARE (0), FW_NORMAL (400), FW_BOLD (700) a FW_BLACK (900). Je jich samozøejmì více, ale myslím si, ¾e tyto ètyøi bohatì staèí (popø. pou¾ijte nápovìdu MSDN). Èím vìt¹í hodnotu pou¾ijete, tím bude tuènìj¹í.</p>

<p class="src2">FW_BOLD,<span class="kom">// Tuènost</span></p>
<p class="src2">FALSE,<span class="kom">// Kurzíva</span></p>
<p class="src2">FALSE,<span class="kom">// Podtr¾ení</span></p>
<p class="src2">FALSE,<span class="kom">// Pøe¹krtnutí</span></p>

<p>Znaková sada popisuje typ znakù, které chcete pou¾ít. Napø. CHINESEBIG5_CHARSET, GREEK_CHARSET, RUSSIAN_CHARSET, DEFAULT_CHARSET atd. ANSI je jediná, kterou pou¾ívám, nicménì DEFAULT by koneckoncù mohlo pracovat také. (Pokud rádi pou¾íváte fonty Webdings nebo Wingdings pou¾ijte SYMBOL_CHARSET.).</p>

<p class="src2">ANSI_CHARSET,<span class="kom">// Znaková sada</span></p>

<p>Pøesnost výstupu øíká Windows jakou znakovou sadu pou¾ít, mají-li dvì stejná jména. Je-li více mo¾ných fontù OUT_TT_PRECIS vybere TRUETYPE verzi, která vypadá mnohem lépe - pøedev¹ím, kdy¾ se zvìt¹í. Zadat mù¾ete také OUT_TT_ONLY_PRECIS, která v¾dy pou¾ije TrueType font.</p>

<p class="src2">OUT_TT_PRECIS,<span class="kom">// Pøesnost výstupu (TrueType)</span></p>

<p>Pøesnost oøezání je typ oøezání, který se pou¾ije, kdy¾ se font dostane ven z oøezávacího regionu.</p>

<p class="src2">CLIP_DEFAULT_PRECIS,<span class="kom">// Pøesnost oøezání</span></p>

<p>Do výstupní kvality mù¾ete zadat PROOF, DRAFT, NONANTIALIASED, DEFAULT nebo ANTIALIASED (ménì hranaté).</p>

<p class="src2">ANTIALIASED_QUALITY,<span class="kom">// Výstupní kvalita</span></p>

<p>Nastavíme rodinu a pitch. Do pitch lze zadat DEFAULT_PITCH, FIXED_PITCH a VARIABLE_PITCH. Do rodiny FF_DECORATIVE, FF_MODERN, FF_ROMAN, FF_SCRIPT, FF_SWISS, FF_DONTCARE. Zkuste si s nimi pohrát.</p>

<p class="src2">FF_DONTCARE | DEFAULT_PITCH,<span class="kom">// Rodina a pitch</span></p>

<p>Nakonec zadáme jméno fontu. Spus»te MS Word nebo jiný textový editor a najdìte si jméno písma, které se vám líbí.</p>

<p class="src2">&quot;Courier New&quot;);<span class="kom">// Jméno fontu</span></p>

<p>Vybereme font do DC (device context - kontext zaøízení) a vytvoøíme 96 display listù poèínajíce 32 (v Ascii tabulce jsou pøed 32 neti¹titelné znaky, 32 - mezera). Mù¾ete sestavit v¹ech 256 zadáním èísla 256 do glGenList() (vý¹e - na zaèátku této funkce). Ujistìte se, ¾e sma¾ete v¹ech 256 listù po skonèení programu (funkce KillFont(GLvoid)) a samozøejmì musíte napsat v následujícím pøíkazu místo 32 -> 0 a místo 96 -> 255 (viz. dal¹í lekce o fontech).</p>

<p class="src1">SelectObject(hDC, font);<span class="kom">// Výbìr fontu do DC</span></p>
<p></p>
<p class="src1">wglUseFontBitmaps(hDC, 32, 96, base);<span class="kom">// Vytvoøí 96 znakù, poèínaje 32 v Ascii
</span></p>
<p class="src0">}</p>

<p>Následující kód je krásnì jednoduchý. Sma¾e 96 vytvoøených display listù z pamìti poèínaje prvním, který je urèen v "base". Nejsem si jistý, jestli by to Windows udìlali automaticky. Jeden øádek za jistotu stojí.</p>

<p class="src0">GLvoid KillFont(GLvoid)<span class="kom">// Sma¾e font</span></p>
<p class="src0">{</p>
<p class="src1">glDeleteLists(base, 96);<span class="kom">// Sma¾e v¹ech 96 znakù (display listù)</span></p>
<p class="src0">}</p>

<p>A teï pøichází na øadu funkce, kvùli ní¾ je napsána tato lekce. Volá se úplnì stejnì jako klasická printf("Hello, world!"); s tím rozdílem, ¾e na zaèátek pøidáte gl a pøed závorkou uberete f :-]</p>

<p class="src0">GLvoid glPrint(const char *fmt, ...)<span class="kom">// Klon printf() pro OpenGL</span></p>
<p class="src0">{</p>

<p>První øádek alokuje pamì» pro 256 znakù. Jakýsi øetìzec, který nakonec vypí¹eme na obrazovku. Druhou promìnnou tvoøí ukazatel do argumentù funkce, který jsme pøi volání zadali s øetìzcem kód této lekce. ( printf("%d %d", i,  j) - to znáte, ne?)</p>

<p class="src1">char text[256];<span class="kom">// Ukládá øetìzec</span></p>
<p class="src1">va_list ap;<span class="kom">// Pointer do argumentù funkce</span></p>

<p>Dal¹í dva øádky zkou¹ejí, jestli byl zadán text. Pokud ne fmt ukazuje na nic (NULL) a tudí¾ se nic nevypí¹e.</p>

<p class="src1">if (fmt == NULL)<span class="kom">// Byl pøedán text?</span></p>
<p class="src2">return;<span class="kom">// Konec</span></p>

<p>Následující kód konvertuje ve¹keré symboly  (%d, %f...) v øetìzci na konkrétní hodnoty. Po úpravì bude v¹e ulo¾eno v text.</p>

<p class="src1">va_start(ap, fmt);<span class="kom">// Rozbor øetìzce</span></p>
<p class="src1">vsprintf(text, fmt, ap);<span class="kom">// Zamìní symboly za konkrétní èísla</span></p>
<p class="src1">va_end(ap);<span class="kom">// Výsledek je ulo¾en v text</span></p>

<p>Pøíkaz glListBase(base-32) je na vysvìtlení trochu obtí¾nìj¹í. Øeknìme, ¾e vykreslujeme znak 'A', který je reprezentován 65 (v Ascii). Bez glListBase(base-32) OpenGL neví, kde má najít tento znak. Mohlo by vyhledat display list 65, ale pokud by se base rovnalo 1000, tak by 'A' bylo ulo¾eno v display listu 1065. Tak¾e nastavením base na poèáteèní bod, OpenGL bude vìdìt, odkud vzít ten správný display list. Odeèítáme 32, proto¾e jsme nevytvoøili prvních 32 display listù, tudí¾ je pøeskoèíme.</p>

<p class="src1">glPushAttrib(GL_LIST_BIT);<span class="kom">// Ulo¾í souèasný stav display listù</span></p>
<p class="src1">glListBase(base - 32);<span class="kom">// Nastaví základní znak na 32</span></p>

<p>Zavoláme funkci glCallLists(), která najednou zobrazuje více display listù. strlen(text) vrátí poèet znakù v øetìzci a tím i poèet k zobrazení. Dále potøebujeme znát typ pøedávaného parametru (poslední). Ani teï nebudeme vkládat více ne¾ 256 znakù, tak¾e pou¾ijeme GL_UNSIGNED_BYTE (byte mù¾e nabývat hodnot 0-255, co¾ je pøesnì to, co potøebujeme). V posledním parametru pøedáme text. Ka¾dý display list ví, kde je pravá hrana toho pøedchozího, èím¾ zamezíme nakupení znakù na sebe, na jedno místo. Pøed zaèátkem kreslení následující znaku se pøesune o tuto hodnotu doprava (glTranslatef()). Nakonec nastavíme GL_LIST_BIT zpìt na hodnotu mající pøed voláním glListBase().</p>

<p class="src1">glCallLists(strlen(text), GL_UNSIGNED_BYTE, text);<span class="kom">// Vykreslí display listy</span></p>
<p class="src1">glPopAttrib();<span class="kom">// Obnoví pùvodní stav display listù</span></p>
<p class="src0">}</p>

<p>Jediná zmìna v inicializaèním kódu je pøíkaz volající BuildFont().</p>

<p class="src0">int InitGL(GLvoid)<span class="kom">// V¹echna nastavení OpenGL</span></p>
<p class="src0">{</p>
<p class="src1">glShadeModel(GL_SMOOTH);<span class="kom">// Povolí jemné stínování</span></p>
<p class="src1">glClearColor(0.0f, 0.0f, 0.0f, 0.5f);<span class="kom">// Èerné pozadí</span></p>
<p class="src1">glClearDepth(1.0f);<span class="kom">// Nastavení hloubkového bufferu</span></p>
<p class="src1">glEnable(GL_DEPTH_TEST);<span class="kom">// Povolí hloubkové testování</span></p>
<p class="src1">glDepthFunc(GL_LEQUAL);<span class="kom">// Typ hloubkového testování</span></p>
<p class="src1">glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);<span class="kom">// Nejlep¹í perspektivní korekce</span></p>
<p></p>
<p class="src1">BuildFont();<span class="kom">// Vytvoøí font</span></p>
<p></p>
<p class="src1">return TRUE;</p>
<p class="src0">}</p>

<p>Pøejdeme k vykreslování. Po obvyklých inicializacích se pøesuneme o 1 jednotku do obrazovky. Bitmapové fonty pracují lépe pøi pou¾ití kolmé (ortho) projekce ne¾ pøi perspektivní. Nicménì kolmá vypadá hùøe, tudí¾ provedeme translaci do obrazovky. Po pøesunu o 1 jednotku dovnitø, budeme moci umístit text kamkoli od -0.5 do +0.5 na ose x. Po pøesunu o 10 bychom mohli vykreslovat na pozice od -5.0 do +5.0. Nikdy nemìòte velikost textu a naprosto nikdy nepou¾ívejte zmìnu mìøítka glScale(x,y,z). Chcete-li mít font vìt¹í èi men¹í musíte na to myslet pøi vytváøení.</p>

<p class="src0">int DrawGLScene(GLvoid)<span class="kom">// Vykreslování</span></p>
<p class="src0">{</p>
<p class="src1">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);<span class="kom">// Sma¾e obrazovku a hloubkový buffer</span></p>
<p class="src1">glLoadIdentity();<span class="kom">// Reset matice</span></p>
<p></p>
<p class="src1">glTranslatef(0.0f,0.0f,-1.0f);<span class="kom">// Pøesun o 1 do obrazovky</span></p>

<p>Dále nastavíme barvu textu. V tomto pøípadì pou¾ívám dva èítaèe. Èervená slo¾ka se urèuje podle kosinu prvního èítaèe. Hodnoty se mìní od -1.0 do +1.0. Zelená slo¾ku vypoèítáme podle sinu druhého èítaèe. Rozsahy jsou stejné jako v pøedchozím pøípadì. K modré barvì jsou pou¾ity oba èítaèe s kosinem. Hodnoty nále¾ejí od 0.5 do 1.5, tedy výsledek operace nebude nikdy 0 a text bude v¾dy viditelný.</p>

<p class="src1"><span class="kom">// Pulzování barev závislé na pozici</span></p>
<p class="src1">glColor3f(1.0f*float(cos(cnt1)),1.0f*float(sin(cnt2)),1.0f-0.5f*float(cos(cnt1+cnt2)));</p>

<p>K urèení pozice pou¾ijeme nový pøíkaz. Støed zùstal na 0.0, ale asi jste si v¹imli, ¾e schází pozice osy z. Po pøesunu o jednotku do obrazovky je levý nejvzdálenìj¹í viditelný bod -0.5 a pravý +0.5. Proto¾e se v¾dy text vykresluje zleva doprava, pøesuneme o 0.45 doleva. Tím bude vycentrován na støed. Pou¾itá matematika vykonává stejnou funkci jako pøi nastavování barvy. Na ose x se text pohybuje od -0.5 do -0.4 (odeèetli jsme 0.45). Tím udr¾íme text v¾dy viditelný. Na ose y se hranice nacházejí na -0.35 a +0.35.</p>

<p class="src1">glRasterPos2f(-0.45f+0.05f*float(cos(cnt1)), 0.32f*float(sin(cnt2)));<span class="kom">// Pozice textu</span></p>

<p>Vypí¹eme text. Tuto funkci jsem navrhl jako super snadnou a u¾ivatelsky pøíjemnou. Vypadá jako volání printf() ze stdio.h zkøí¾ené s OpenGL. Text se vykreslí na pozici, kam jsme pøesunuli pøed chvílí. Podøetìzec %7.2f oznamuje vypisování obsahu promìnné. Sedmièka urèuje, maximální délku èísla a dvojka upøesòuje poèet desetinných míst. f znaèí desetinné èíslo (float). Je mi samozøejmì jasné, ¾e pokud ovládáte jazyk C, tak je to pro vás hraèka. Konvence jsou stejné jako u klasické printf(). Pokud to bude nutné mù¾ete se podívat do nápovìdy MSDN.</p>

<p class="src1">glPrint(&quot;Active OpenGL Text With NeHe - %7.2f&quot;, cnt1);<span class="kom">// Výpis textu</span></p>

<p>Nakonec zbývá inkrementování èítaèe, aby se mìnila pozice a barva.</p>

<p class="src1">cnt1+=0.051f;</p>
<p class="src1">cnt2+=0.005f;</p>
<p class="src1">return TRUE;</p>
<p class="src0">}</p>

<p>Poslední kód, který se provede pøed opu¹tìním programu je smazání fontu voláním KillFont().</p>

<p class="src0"><span class="kom">//Konec funkce KillGLWindow(GLvoid)</span></p>
<p class="src1">if(!UnregisterClass("OpenGL",hInstance))</p>
<p class="src1">{</p>
<p class="src2">MessageBox(NULL,"Could Not Unregister Class.","SHUTDOWN ERROR",MB_OK | MB_ICONINFORMATION);</p>
<p class="src2">hInstance=NULL;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">KillFont();<span class="kom">//Smazání fontu</span></p>
<p class="src0">}</p>

<p>Hotovo... Na internetu jsem hledal podobný tutoriál, ale nic jsem nena¹el. Mo¾ná jsem první, který pí¹e na podobné téma. V¹e je mo¾né. U¾ijte si výpis textu a ¹»astné kódování.</p>

<p class="autor">napsal: Jeff Molofee - NeHe <span class="transform_email">&lt;nehe (zavináè) connect.ab.ca&gt;</span><br />
pøelo¾il: Michal Turek - Woq <span class="transform_email">&lt;WOQ (zavináè) seznam.cz&gt;</span></p>

<h3 class="zdroj_kody_nadpis">Zdrojové kódy</h3>

<ul class="zdroj_kody">
<li><a href="http://nehe.gamedev.net/data/lessons/vc/lesson13.zip">Visual C++</a> kód této lekce.</li>
<li><a href="http://nehe.gamedev.net/data/lessons/bcb6/lesson13_bcb6.zip">Borland C++ Builder 6</a> kód této lekce. ( <a href="mailto:christian@tugzip.com">Christian Kindahl</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/cwarrior/lesson13.zip">Code Warrior 5.3</a> kód této lekce. ( <a href="mailto:DelusionalBeing@hotmail.com">Scott Lupton</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/delphi/lesson13.zip">Delphi</a> kód této lekce. ( <a href="mailto:marca@stack.nl">Marc Aarts</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/devc/lesson13.zip">Dev C++</a> kód této lekce. ( <a href="mailto:danprogram@hotmail.com">Dan</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/euphoria/lesson13.zip">Euphoria</a> kód této lekce. ( <a href="mailto:1evan@sbcglobal.net">Evan Marshall</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/gameglut/lesson13.zip">Game GLUT</a> kód této lekce. ( <a href="mailto:milix_gr@hotmail.com">Milikas Anastasios</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/irix/lesson13.tar.gz">Irix / GLUT</a> kód této lekce. ( <a href="mailto:rpf1@york.ac.uk">Rob Fletcher</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/java/lesson13.zip">Java</a> kód této lekce. ( <a href="mailto:jeff@consunet.com.au">Jeff Kirby</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/jogl/lesson13.jar">JoGL</a> kód této lekce. ( <a href="mailto:ncb000gt65@hotmail.com">Nicholas Campbell</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/lccwin32/lccwin32_lesson13.zip">LCC Win32</a> kód této lekce. ( <a href="mailto:rwishlaw@shaw.ca">Robert Wishlaw</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/linux/lesson13.tar.gz">Linux</a> kód této lekce. ( <a href="mailto:ulmont@bellsouth.net">Richard Campbell</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/linuxglx/lesson13.tar.gz">Linux/GLX</a> kód této lekce. ( <a href="mailto:Mihael.Vrbanec@stud.uni-karlsruhe.de">Mihael Vrbanec</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/linuxsdl/lesson13.tar.gz">Linux/SDL</a> kód této lekce. ( <a href="mailto:leggett@eecs.tulane.edu">Ti Leggett</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/mac/lesson13.sit">Mac OS</a> kód této lekce. ( <a href="mailto:asp@usc.edu">Anthony Parker</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/macosxcocoa/lesson13.zip">Mac OS X/Cocoa</a> kód této lekce. ( <a href="mailto:blb@pobox.com">Bryan Blackburn</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/masm/lesson13.zip">MASM</a> kód této lekce. ( <a href="mailto:andras.kobor@wanadoo.fr">Andras Kobor</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/vb/lesson13.zip">Visual Basic</a> kód této lekce. ( <a href="mailto:rosscogl@email.com">Ross Dawson</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/vb/lesson13-2.zip">Visual Basic</a> kód této lekce. ( <a href="mailto:fredo@studenten.net">Edo</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/vs_net/lesson13.zip">Visual Studio .NET</a> kód této lekce. ( <a href="mailto:ultimatezeus@hotmail.com">Grant James</a> )</li>
</ul>

<div class="okolo_img"><img src="images/nehe_tut/tut_13_big.jpg" class="nehe_velky" alt="Lekce 13" /></div>
<p class="okolni_lekce"><a href="tut_12.php">&lt;&lt;&lt; Lekce 12</a> | <a href="tut_14.php">Lekce 14 &gt;&gt;&gt;</a></p>


<div class="netisk">
<h3 class="d_nadpis">Diskuze ke èlánku</h3>

<form action="d_view.php" method="post" class="d_o_obsah">

<div class="d_o_zprava">
<div class="d_o_jmeno">M4D C4T</div>
<div class="d_o_datumcas">18.06.2005 - 17:10:49</div>
<div>
<input type="checkbox" name="id_0" id="id_0" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_13.php&j=0">barva</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">momo</div>
<div class="d_o_datumcas">17.09.2005 - 12:30:06</div>
<div>
<input type="checkbox" name="id_1" id="id_1" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_13.php&j=1">vstup</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Ammon</div>
<div class="d_o_datumcas">22.12.2005 - 07:57:08</div>
<div>
<input type="checkbox" name="id_4" id="id_4" value="1" />
<span class="d_o_nadpis" style="margin-left: 20px;"><a href="d_view.php?f=tut_13.php&j=4">Re: vstup</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">dr.eamer</div>
<div class="d_o_datumcas">24.09.2005 - 13:01:22</div>
<div>
<input type="checkbox" name="id_2" id="id_2" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_13.php&j=2">fonty + 3D scena</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">dr.eamer</div>
<div class="d_o_datumcas">24.09.2005 - 13:53:04</div>
<div>
<input type="checkbox" name="id_3" id="id_3" value="1" />
<span class="d_o_nadpis" style="margin-left: 20px;"><a href="d_view.php?f=tut_13.php&j=3">Re: fonty   3D scena</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Kartmen</div>
<div class="d_o_datumcas">10.07.2006 - 11:19:40</div>
<div>
<input type="checkbox" name="id_5" id="id_5" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_13.php&j=5">Moc Tmave</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Dimi3</div>
<div class="d_o_datumcas">26.08.2006 - 20:37:55</div>
<div>
<input type="checkbox" name="id_6" id="id_6" value="1" />
<span class="d_o_nadpis" style="margin-left: 20px;"><a href="d_view.php?f=tut_13.php&j=6">Re: Moc Tmave</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Xennus</div>
<div class="d_o_datumcas">15.10.2006 - 21:05:19</div>
<div>
<input type="checkbox" name="id_7" id="id_7" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_13.php&j=7">problem z textom</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Xennus</div>
<div class="d_o_datumcas">15.10.2006 - 21:26:47</div>
<div>
<input type="checkbox" name="id_8" id="id_8" value="1" />
<span class="d_o_nadpis" style="margin-left: 20px;"><a href="d_view.php?f=tut_13.php&j=8">Re: problem z textom</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Mulan</div>
<div class="d_o_datumcas">14.04.2007 - 19:55:13</div>
<div>
<input type="checkbox" name="id_9" id="id_9" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_13.php&j=9">font &amp; pohyb v priestore</a></span>
</div>
</div>

<div class="okolo_img" style="margin-top: 20px;">
<input type="submit" name="zobrazit_vybrane" id="zobrazit_vybrane" value="Zobrazit vybrané" class="tlacitko" />
<input type="submit" name="zobrazit_vse" id="zobrazit_vse" value="Zobrazit v¹e" class="tlacitko" />
<input type="submit" name="vlozit_novy" id="vlozit_novy" value="Vlo¾it nový" class="tlacitko" />
<input type="hidden" name="f" id="f" value="tut_13.php" />
</div>
</form>
</div>
<!-- Informace o webu -->
<center><div id="informace">
<img src="images/my/woq.gif" width="60" height="60" align="left" alt="Woq logo" />
<div style="margin-left: 70px">
<div><strong>CZ NeHe OpenGL, v¹e o programování 3D grafiky</strong></div>
<div>Copyright &copy; 2002-2007 Michal Turek <span class="transform_email">&lt;WOQ (zavináè) seznam.cz&gt;</span></div>
<div style="margin-top: 5px">Komerèní publikování v ti¹tìné, elektronické nebo jiné podobì je bez výslovného souhlasu zakázáno. Redistribuce pro výukové úèely nebo osobní pou¾ití je v¹ak povolena.</div>
</div>
</div></center>
<!-- Informace o webu (konec) -->

</div>
<!-- Vlastní obsah stránky (konec) -->

<script src="http://c1.navrcholu.cz/code?site=56575;t=b14"
type="text/javascript"></script><noscript><div><a
href="http://navrcholu.cz/"><img
src="http://c1.navrcholu.cz/hit?site=56575;t=b14;ref=;jss=0"
width="14" height="14" alt="NAVRCHOLU.cz"
style="border:none" /></a></div></noscript>

</body>
</html>
