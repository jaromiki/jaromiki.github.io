<?xml version="1.0" encoding="ISO-8859-2"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="cs" lang="CS">
<head>

<meta http-equiv="content-type" content="text/html; charset=ISO-8859-2" />
<meta http-equiv="content-language" content="cs" />
<meta http-equiv="content-script-type" content="text/javascript" />
<meta http-equiv="content-style-type" content="text/css" />

<meta name="robots" content="all, follow" />
<meta name="resource-type" content="document" />

<meta name="description" content="NeHe OpenGL Tutoriály v èe¹tinì, programování 3D grafiky, èlánky, programy se zdrojovými kódy..." />
<meta name="keywords" content="opengl, nehe, tutoriály, woq, programování, 3D" />
<meta name="author" content="all: Michal Turek - Woq; woq (zavináè) seznam.cz" />
<meta name="copyright" content="Copyright (c) 2002, 2003, 2004 Michal Turek - Woq" />

<title>CZ NeHe OpenGL - Lekce 46 - Fullscreenový antialiasing</title>

<link rel="shortcut icon" href="skin/default/web.ico" type="image/x-icon" />
<link href="skin/default.css" rel="stylesheet" type="text/css" media="all" />
<link href="skin/print.css" rel="stylesheet" type="text/css" media="print" />

</head>

<body>

<!-- Levý sloupec -->
<div class="levy">
<div id="main_menu">
<a href="http://nehe.ceske-hry.cz/"><img src="skin/default/web_logo.gif" width="135" height="135" style="margin-left: 5px;" alt="CZ NeHe OpenGL" /></a>

<div class="main_menu_bez_loga">

<ul class="text_main_menu">
<li><a href="my.php" title="Pøekladatelé NeHe Tutoriálù a autoøi èlánkù">My</a></li>
<li><a href="novinky.php" title="Co je nového">Novinky</a></li>
<li><a href="navigacni_mapa.php" title="Pøehledná navigace na jednotlivé stránky, které dohromady tvoøí tento web">Navigaèní mapa</a></li>
<li><a href="kontakt.php" title="Kontakt na správce tohoto webu">Kontakt</a></li>
<li><a href="http://forum.programovani.com/" title="Diskusní fórum">Fórum</a></li>
</ul>

<ul class="text_main_menu">
<li><a href="clanky.php" title="Obsah èlánkù">Èlánky</a></li>
<li><a href="tut_obsah.php" title="Obsah NeHe OpenGL Tutoriálù">NeHe Tutoriály</a></li>
<li><a href="33D_index.php" title="Obsah Free3D (33D) Basecode">33D Basecode</a></li>
<li><a href="programy.php" title="Programy od èeských autorù">Èeské programy</a></li>
<li><a href="cl_gl_zacinam.php" title="Kde zaèít pøi uèení OpenGL">Pomoc, zaèínám</a></li>
<li><a href="odkazy.php" title="Jiné zdroje informací">Odkazy</a></li>
<li><a href="cl_gl_faq.php" title="FAQ: Èasto kladené dotazy">FAQ</a></li>
</ul>

<ul class="text_main_menu">
<li><a href="spoluprace.php" title="Nechcete se podílet na tvorbì tìchto webových stránek?">Spolupráce...?</a></li>
<li><a href="download.php" title="Stahujte">Download</a></li>
<li><a href="skiny.php" title="Nastavte si jiný layout a design stránek">Skiny</a></li>
<li><a href="javascript:window.print();" title="Vytiskne tuto stránku">Tisk</a></li>
</ul>

<ul class="text_main_menu">
<li>
<form action="p_fulltext.php" method="post" onsubmit="if(!this.najit.value || this.najit.value=='výraz ...') { alert('Byl zadán prázdný øetìzec!'); this.najit.focus(); return false; }">
<input type="text" name="najit" size="12" value="výraz ..." onclick="this.value=''" /><br />
<input type="submit" value="Najít" />
</form>
</li>
</ul>

<ul class="text_main_menu">
<li>Online ètenáøù: 3</li>
</ul>

</div>

</div>
</div>
<!-- Levý sloupec (konec) -->

<!-- Pravý sloupec -->
<div class="pravy">
<div id="tut_menu">

<ul class="text_tut_menu">
<li class="li_tut"><a href="tut_00.php" title="Lekce 0 - Pøedmluva k NeHe Tutoriálùm">00</a></li>
<li class="li_tut"><a href="tut_01.php" title="Lekce 1 - Vytvoøení OpenGL okna ve Windows">01</a></li>
<li class="li_tut"><a href="tut_02.php" title="Lekce 2 - Vytváøení trojúhelníkù a ètyøúhelníkù">02</a></li>
<li class="li_tut"><a href="tut_03.php" title="Lekce 3 - Barvy">03</a></li>
<li class="li_tut"><a href="tut_04.php" title="Lekce 4 - Rotace">04</a></li>
<li class="li_tut"><a href="tut_05.php" title="Lekce 5 - Pevné objekty">05</a></li>
<li class="li_tut"><a href="tut_06.php" title="Lekce 6 - Textury">06</a></li>
<li class="li_tut"><a href="tut_07.php" title="Lekce 7 - Texturové filtry, osvìtlení, ovládání pomocí klávesnice">07</a></li>
<li class="li_tut"><a href="tut_08.php" title="Lekce 8 - Blending">08</a></li>
<li class="li_tut"><a href="tut_09.php" title="Lekce 9 - Pohyb bitmap ve 3D prostoru">09</a></li>
<li class="li_tut"><a href="tut_10.php" title="Lekce 10 - Vytvoøení 3D svìta a pohyb v nìm">10</a></li>
<li class="li_tut"><a href="tut_11.php" title="Lekce 11 - Efekt vlnící se vlajky">11</a></li>
<li class="li_tut"><a href="tut_12.php" title="Lekce 12 - Display list">12</a></li>
<li class="li_tut"><a href="tut_13.php" title="Lekce 13 - Bitmapové fonty">13</a></li>
<li class="li_tut"><a href="tut_14.php" title="Lekce 14 - Outline fonty">14</a></li>
<li class="li_tut"><a href="tut_15.php" title="Lekce 15 - Mapování textur na fonty">15</a></li>
<li class="li_tut"><a href="tut_16.php" title="Lekce 16 - Mlha">16</a></li>
<li class="li_tut"><a href="tut_17.php" title="Lekce 17 - 2D fonty z textur">17</a></li>
<li class="li_tut"><a href="tut_18.php" title="Lekce 18 - Kvadriky">18</a></li>
<li class="li_tut"><a href="tut_19.php" title="Lekce 19 - Èásticové systémy">19</a></li>
<li class="li_tut"><a href="tut_20.php" title="Lekce 20 - Maskování">20</a></li>
<li class="li_tut"><a href="tut_21.php" title="Lekce 21 - Pøímky, antialiasing, èasování, pravoúhlá projekce, základní zvuky a jednoduchá herní logika">21</a></li>
<li class="li_tut"><a href="tut_22.php" title="Lekce 22 - Bump Mapping &amp; Multi Texturing">22</a></li>
<li class="li_tut"><a href="tut_23.php" title="Lekce 23 - Mapování textur na kulové kvadriky">23</a></li>
<li class="li_tut"><a href="tut_24.php" title="Lekce 24 - Výpis OpenGL roz¹íøení, oøezávací testy a textury z TGA obrázkù">24</a></li>
<li class="li_tut"><a href="tut_25.php" title="Lekce 25 - Morfování objektù a jejich nahrávání z textového souboru">25</a></li>
<li class="li_tut"><a href="tut_26.php" title="Lekce 26 - Odrazy a jejich oøezávání za pou¾ití stencil bufferu">26</a></li>
<li class="li_tut"><a href="tut_27.php" title="Lekce 27 - Stíny">27</a></li>
<li class="li_tut"><a href="tut_28.php" title="Lekce 28 - Bezierovy køivky a povrchy, fullscreen fix">28</a></li>
<li class="li_tut"><a href="tut_29.php" title="Lekce 29 - Blitter, nahrávání .RAW textur">29</a></li>
<li class="li_tut"><a href="tut_30.php" title="Lekce 30 - Detekce kolizí">30</a></li>
<li class="li_tut"><a href="tut_31.php" title="Lekce 31 - Nahrávání a renderování modelù">31</a></li>
<li class="li_tut"><a href="tut_32.php" title="Lekce 32 - Picking, alfa blending, alfa testing, sorting">32</a></li>
<li class="li_tut"><a href="tut_33.php" title="Lekce 33 - Nahrávání komprimovaných i nekomprimovaných obrázkù TGA">33</a></li>
<li class="li_tut"><a href="tut_34.php" title="Lekce 34 - Generování terénù a krajin za pou¾ití vý¹kového mapování textur">34</a></li>
<li class="li_tut"><a href="tut_35.php" title="Lekce 35 - Pøehrávání videa ve formátu AVI">35</a></li>
<li class="li_tut"><a href="tut_36.php" title="Lekce 36 - Radial Blur, renderování do textury">36</a></li>
<li class="li_tut"><a href="tut_37.php" title="Lekce 37 - Cel-Shading">37</a></li>
<li class="li_tut"><a href="tut_38.php" title="Lekce 38 - Nahrávání textur z resource souboru &amp; texturování trojúhelníkù">38</a></li>
<li class="li_tut"><a href="tut_39.php" title="Lekce 39 - Úvod do fyzikálních simulací">39</a></li>
<li class="li_tut"><a href="tut_40.php" title="Lekce 40 - Fyzikální simulace lana">40</a></li>
<li class="li_tut"><a href="tut_41.php" title="Lekce 41 - Volumetrická mlha a nahrávání obrázkù pomocí IPicture">41</a></li>
<li class="li_tut"><a href="tut_42.php" title="Lekce 42 - Více viewportù">42</a></li>
<li class="li_tut"><a href="tut_43.php" title="Lekce 43 - FreeType Fonty v OpenGL">43</a></li>
<li class="li_tut"><a href="tut_44.php" title="Lekce 44 - Èoèkové efekty">44</a></li>
<li class="li_tut"><a href="tut_45.php" title="Lekce 45 - Vertex Buffer Object (VBO)">45</a></li>
<li class="li_tut"><a href="tut_46.php" title="Lekce 46 - Fullscreenový antialiasing">46</a></li>
<li class="li_tut"><a href="tut_47.php" title="Lekce 47 - CG vertex shader">47</a></li>
<li class="li_tut"><a href="tut_48.php" title="Lekce 48 - ArcBall rotace">48</a></li>
</ul>

</div>
</div>
<!-- Pravý sloupec (konec) -->

<!-- Vlastní obsah stránky -->
<div class="stred">

<!--[if IE ]>
<div style="text-align: center;">
<a href="http://firefox.czilla.cz/"><img alt="Mozilla Firefox: Objevte znovu web" title="Mozilla Firefox: Objevte znovu web" style="border:none; width:468px;height:60px" src="http://firefox.czilla.cz/img/p/cz-ff-468x60-w-objevte.png" /></a>
</div>
<![endif]-->

<img src="images/nehe_tut/tut_46.jpg" class="nehe_maly" alt="Lekce 46" />

<h1>Lekce 46 - Fullscreenový antialiasing</h1>

<p class="nadpis_clanku">Chtìli byste, aby va¹e aplikace vypadaly je¹tì lépe ne¾ doposud? Fullscreenové vyhlazování, nazývané té¾ multisampling, by vám mohlo pomoci. S výhodou ho pou¾ívají ne-realtimové renderovací programy, nicménì s dne¹ním hardwarem ho mù¾eme dosáhnout i v reálném èase. Bohu¾el je implementováno pouze jako roz¹íøení ARB_MULTISAMPLE, které nebude pracovat, pokud ho grafická karta nepodporuje.</p>

<p>V tomto zajímavém tutoriálu zkusíme posunout grafický vzhled aplikací je¹tì dále. O antialiasingu jste u¾ èetli v minulých tutoriálech, multisampling, narozdíl od nìj, neoperuje s jednotlivými objekty zvlá¹», ale pracuje a¾ s vykreslovanými pixely. Ve výsledném obrázku se pokou¹í najít a odstranit ostré hrany. Proto¾e se musí vzít v úvahu ka¾dý zobrazovaný pixel, bez hardwarové akcelerace grafické karty by velice sní¾il výkon aplikace.</p>

<p class="src0"><span class="kom">Vid_mem = sizeof(Front_buffer) + sizeof(Back_buffer) + num_samples * (sizeof(Front_buffer) + sizeof(ZS_buffer))</span></p>

<p>Pro více informací prosím zkuste tyto odkazy:</p>

<div><a href="http://developer.nvidia.com/attach/3464" target="_blank" title="http://developer.nvidia.com/attach/3464">GDC2002 - OpenGL Multisample</a></div>
<div><a href="http://developer.nvidia.com/attach/2064" target="_blank" title="http://developer.nvidia.com/attach/2064">OpenGL Pixel Formats and Multisample Antialiasing</a></div>

<p>Po tomto nutném úvodu se koneènì mù¾eme pustit do práce. Narozdíl od jiných roz¹íøení, která OpenGL pøi renderingu vyu¾ívá, musíme s ARB_MULTISAMPLE poèítat u¾ pøi vytváøení okna. Postupujeme tedy následovnì:</p>

<ul>
<li>Vytvoøíme okno úplnì stejnì jako obyèejnì</li>
<li>Dotá¾eme se, jestli mù¾eme vyhlazovat pixely</li>
<li>Pokud je multisampling dostupný, zru¹íme okno a vytvoøíme ho s novým pixel formátem</li>
<li>Pro èásti, které chceme vyhlazovat, jednodu¹e zavoláme glEnable(GL_ARB_MULTISAMPLE)</li>
</ul>

<p>Zaèneme v souboru arb_multisample.cpp. Jako v¾dy inkludujeme hlavièkové soubory pro OpenGL a knihovnu GLU. O arb_multisample.h se budeme bavit pozdìji.</p>

<p class="src0">#include &lt;windows.h&gt;</p>
<p class="src0">#include &lt;gl/gl.h&gt;</p>
<p class="src0">#include &lt;gl/glu.h&gt;</p>
<p></p>
<p class="src0">#include &quot;arb_multisample.h&quot;</p>

<p>Symbolické konstanty pou¾ijeme pøi definování atributù pixel formátu. Podporuje-li grafická karta multisampling, bude logická promìnná arbMultisampleSupported obsahovat true.</p>

<p class="src0">#define WGL_SAMPLE_BUFFERS_ARB 0x2041<span class="kom">// Symbolické konstanty pro multisampling</span></p>
<p class="src0">#define WGL_SAMPLES_ARB 0x2042</p>
<p></p>
<p class="src0">bool arbMultisampleSupported = false;<span class="kom">// Je multisampling dostupný?</span></p>
<p class="src0">int arbMultisampleFormat = 0;<span class="kom">// Formát multisamplingu</span></p>

<p>Následující funkce testuje, zda je WGL OpenGL roz¹íøení na systému dostupné v daném formátu.</p>

<p class="src0">bool WGLisExtensionSupported(const char *extension)<span class="kom">// Je roz¹íøení podporováno?</span></p>
<p class="src0">{</p>
<p class="src1">const size_t extlen = strlen(extension);</p>
<p class="src1">const char *supported = NULL;</p>
<p></p>
<p class="src1"><span class="kom">// Pokud je to mo¾né, pokusí se wglGetExtensionStringARB pou¾ít na aktuální DC</span></p>
<p class="src1">PROC wglGetExtString = wglGetProcAddress(&quot;wglGetExtensionsStringARB&quot;);</p>
<p></p>
<p class="src1">if (wglGetExtString)<span class="kom">// WGL OpenGL roz¹íøení</span></p>
<p class="src1">{</p>
<p class="src2">supported = ((char*(__stdcall*)(HDC))wglGetExtString)(wglGetCurrentDC());</p>
<p class="src1">}</p>
<p></p>
<p class="src1">if (supported == NULL)<span class="kom">// Zkusí je¹tì standardní OpenGL øetìzec s roz¹íøeními</span></p>
<p class="src1">{</p>
<p class="src2">supported = (char*)glGetString(GL_EXTENSIONS);</p>
<p class="src1">}</p>
<p></p>
<p class="src1">if (supported == NULL)<span class="kom">// Pokud sel¾e i toto, není øetìzec dostupný</span></p>
<p class="src1">{</p>
<p class="src2">return false;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">for (const char* p = supported; ; p++)<span class="kom">// Testování obsahu øetìzce</span></p>
<p class="src1">{</p>
<p class="src2">p = strstr(p, extension);<span class="kom">// Hledá podøetìzec</span></p>
<p></p>
<p class="src2">if (p == NULL)<span class="kom">// Podøetìzec není v øetìzci</span></p>
<p class="src2">{</p>
<p class="src3">return false;<span class="kom">// Roz¹íøení nebylo nalezeno</span></p>
<p class="src2">}</p>
<p></p>
<p class="src2"><span class="kom">// Okolo podøetìzce se musí vyskytovat oddìlovaè (mezera nebo NULL)</span></p>
<p class="src2">if ((p == supported || p[-1] == ' ') &amp;&amp; (p[extlen] == '\0' || p[extlen] == ' '))</p>
<p class="src2">{</p>
<p class="src3">return true;<span class="kom">// Roz¹íøení bylo nalezeno</span></p>
<p class="src2">}</p>
<p class="src1">}</p>
<p class="src0">}</p>

<p>Funkce InitMultisample() je svým zpùsobem jádrem programu. Dotá¾eme se na podporu potøebného roz¹íøení a pokud ji máme, získáme po¾adovaný pixel formát.</p>

<p class="src0">bool InitMultisample(HINSTANCE hInstance, HWND hWnd, PIXELFORMATDESCRIPTOR pfd)<span class="kom">// Inicializace multisamplingu</span></p>
<p class="src0">{</p>
<p class="src1">if (!WGLisExtensionSupported(&quot;WGL_ARB_multisample&quot;))<span class="kom">// Existuje øetìzec ve WGL</span></p>
<p class="src1">{</p>
<p class="src2">arbMultisampleSupported = false;</p>
<p class="src2">return false;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">PFNWGLCHOOSEPIXELFORMATARBPROC wglChoosePixelFormatARB = (PFNWGLCHOOSEPIXELFORMATARBPROC)wglGetProcAddress(&quot;wglChoosePixelFormatARB&quot;);<span class="kom">// Získání pixel formátu</span></p>
<p></p>
<p class="src1">if (!wglChoosePixelFormatARB)<span class="kom">// Daný pixel formát není dostupný</span></p>
<p class="src1">{</p>
<p class="src2">arbMultisampleSupported = false;</p>
<p class="src2">return false;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">HDC hDC = GetDC(hWnd);<span class="kom">// Získání kontextu zaøízení</span></p>
<p></p>
<p class="src1">int pixelFormat;</p>
<p class="src1">int valid;</p>
<p class="src1">UINT numFormats;</p>
<p class="src1">float fAttributes[] = {0, 0};</p>

<p>Následující pole atributù slou¾í pro definování vlastností pixel formátu. V¹echny polo¾ky kromì WGL_SAMPLE_BUFFERS_ARB a WGL_SAMPLE_ARB jsou standardní, a proto by nám nemìly èinit potí¾e. Pokud uspìje hlavní test podpory multisamplingu, který reprezentuje wglChoosePixelFormatARB(), máme vyhráno.</p>

<p class="src1">int iAttributes[] =<span class="kom">// Atributy</span></p>
<p class="src1">{</p>
<p class="src2">WGL_DRAW_TO_WINDOW_ARB, GL_TRUE,</p>
<p class="src2">WGL_SUPPORT_OPENGL_ARB, GL_TRUE,</p>
<p class="src2">WGL_ACCELERATION_ARB, WGL_FULL_ACCELERATION_ARB,</p>
<p class="src2">WGL_COLOR_BITS_ARB, 24,</p>
<p class="src2">WGL_ALPHA_BITS_ARB, 8,</p>
<p class="src2">WGL_DEPTH_BITS_ARB, 16,</p>
<p class="src2">WGL_STENCIL_BITS_ARB, 0,</p>
<p class="src2">WGL_DOUBLE_BUFFER_ARB, GL_TRUE,</p>
<p class="src2">WGL_SAMPLE_BUFFERS_ARB, GL_TRUE,</p>
<p class="src2">WGL_SAMPLES_ARB, 4,</p>
<p class="src2">0, 0</p>
<p class="src1">};</p>
<p></p>
<p class="src1">valid = wglChoosePixelFormatARB(hDC, iAttributes, fAttributes, 1, &amp;pixelFormat, &amp;numFormats);<span class="kom">// Pixel formát pro ètyøi vzorkování</span></p>
<p></p>
<p class="src1">if (valid &amp;&amp; numFormats &gt;= 1)<span class="kom">// Vráceno true a poèet formátù je vìt¹í ne¾ jedna</span></p>
<p class="src1">{</p>
<p class="src2">arbMultisampleSupported = true;</p>
<p class="src2">arbMultisampleFormat = pixelFormat;</p>
<p class="src2">return arbMultisampleSupported;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">iAttributes[19] = 2;<span class="kom">// Ètyøi vzorkování nejsou dostupná, test dvou</span></p>
<p></p>
<p class="src1">valid = wglChoosePixelFormatARB(hDC, iAttributes, fAttributes, 1, &amp;pixelFormat, &amp;numFormats);</p>
<p></p>
<p class="src1">if (valid &amp;&amp; numFormats &gt;= 1)</p>
<p class="src1">{</p>
<p class="src2">arbMultisampleSupported = true;</p>
<p class="src2">arbMultisampleFormat = pixelFormat; </p>
<p class="src2">return arbMultisampleSupported;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">return arbMultisampleSupported;<span class="kom">// Vrácení validního formátu</span></p>
<p class="src0">}</p>

<p>Kód pro detekci multisamplingu máme hotov, teï modifikujeme vytváøení okna. Inkludujeme hlavièkový soubor arb_multisample.h a vytvoøíme funkèní prototypy.</p>

<p class="src0">#include &quot;arb_multisample.h&quot;<span class="kom">// Hlavièkový soubor pro multisampling</span></p>
<p></p>
<p class="src0">BOOL DestroyWindowGL(GL_Window* window);<span class="kom">// Funkèní prototypy</span></p>
<p class="src0">BOOL CreateWindowGL(GL_Window* window);</p>

<p>Následující výpis kódu patøí do funkce CreateWindowGL(). Pùvodní kód povìt¹inou zùstane, ale udìláme v nìm nìkolik zmìn. V základu potøebujeme vyøe¹it problém, který spoèívá v tom, ¾e nemù¾eme polo¾it dotaz na pixel formát (detekovat pøítomnost multisamplingu), dokud není vytvoøeno okno. Nicménì naproti tomu nemù¾eme vytvoøit okno s vyhlazováním, dokud nemáme pixel formát, který ho podporuje. Trochu se to podobá otázce, zda bylo první vejce nebo slepice. Implementujeme dvouprùchodový systém - nejprve vytvoøíme obyèejné okno, dotá¾eme se na pixel formát a pokud je multisampling podporován, zru¹íme okno a vytvoøíme správné. Trochu tì¾kopádné, ale neznám jiný zpùsob.</p>

<p class="src0"><span class="kom">// Funkce CreateWindowGL()</span></p>
<p class="src1">window-&gt;hDC = GetDC(window-&gt;hWnd);<span class="kom">// Grabování kontextu zaøízení</span></p>
<p></p>
<p class="src1">if (window-&gt;hDC == 0)<span class="kom">// Podaøilo se ho získat?</span></p>
<p class="src1">{</p>
<p class="src2">DestroyWindow(window-&gt;hWnd);<span class="kom">// Zru¹ení okna</span></p>
<p class="src2">window-&gt;hWnd = 0;<span class="kom">// Nulování handle</span></p>
<p></p>
<p class="src2">return FALSE;<span class="kom">// Neúspìch</span></p>
<p class="src1">}</p>

<p>Pøi prvním prùchodu touto funkcí (dal¹í prùchody napø. pøi pøepínání do/z fullscreenu) není mo¾né multisampling natvrdo zapnout, tak¾e jsme vytvoøili pouze obyèejné okno. Pokud máme jistotu, ¾e ho mù¾eme pou¾ít, nastavíme pixel formát na arbMultiSampleFormat.</p>

<p class="src1">if(!arbMultisampleSupported)<span class="kom">// Multisampling není podporován</span></p>
<p class="src1">{</p>
<p class="src2"><span class="kom">// Vytvoøení normálního okna</span></p>
<p class="src2">PixelFormat = ChoosePixelFormat(window-&gt;hDC, &amp;pfd);<span class="kom">// Získá kompatibilní pixel formát</span></p>
<p></p>
<p class="src2">if (PixelFormat == 0)<span class="kom">// Podaøilo se ho získat?</span></p>
<p class="src2">{</p>
<p class="src3">ReleaseDC(window-&gt;hWnd, window-&gt;hDC);<span class="kom">// Uvolnìní kontextu zaøízení</span></p>
<p class="src3">window-&gt;hDC = 0;<span class="kom">// Nulování promìnné</span></p>
<p class="src3">DestroyWindow(window-&gt;hWnd);<span class="kom">// Zru¹ení okna</span></p>
<p class="src3">window-&gt;hWnd = 0;<span class="kom">// Nulování handle</span></p>
<p></p>
<p class="src3">return FALSE;<span class="kom">// Neúspìch</span></p>
<p class="src2">}</p>
<p class="src1">}</p>
<p class="src1">else<span class="kom">// Multisampling je podporován</span></p>
<p class="src1">{</p>
<p class="src2">PixelFormat = arbMultisampleFormat;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">if (SetPixelFormat(window-&gt;hDC, PixelFormat, &amp;pfd) == FALSE)<span class="kom">// Zkusí nastavit pixel formát</span></p>
<p class="src1">{</p>
<p class="src2">ReleaseDC(window-&gt;hWnd, window-&gt;hDC);</p>
<p class="src2">window-&gt;hDC = 0;</p>
<p class="src2">DestroyWindow(window-&gt;hWnd);</p>
<p class="src2">window-&gt;hWnd = 0;</p>
<p></p>
<p class="src2">return FALSE;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">window-&gt;hRC = wglCreateContext(window-&gt;hDC);<span class="kom">// Zkusí získat rendering kontext</span></p>
<p></p>
<p class="src1">if (window-&gt;hRC == 0)<span class="kom">// Podaøilo se ho získat?</span></p>
<p class="src1">{</p>
<p class="src2">ReleaseDC(window-&gt;hWnd, window-&gt;hDC);</p>
<p class="src2">window-&gt;hDC = 0;</p>
<p class="src2">DestroyWindow(window-&gt;hWnd);</p>
<p class="src2">window-&gt;hWnd = 0;</p>
<p></p>
<p class="src2">return FALSE;</p>
<p class="src1">}</p>
<p></p>
<p class="src1">if (wglMakeCurrent(window-&gt;hDC, window-&gt;hRC) == FALSE)<span class="kom">// Aktivuje rendering kontext</span></p>
<p class="src1">{</p>
<p class="src2">wglDeleteContext(window-&gt;hRC);</p>
<p class="src2">window-&gt;hRC = 0;</p>
<p class="src2">ReleaseDC(window-&gt;hWnd, window-&gt;hDC);</p>
<p class="src2">window-&gt;hDC = 0;</p>
<p class="src2">DestroyWindow(window-&gt;hWnd);</p>
<p class="src2">window-&gt;hWnd = 0;</p>
<p></p>
<p class="src2">return FALSE;</p>
<p class="src1">}</p>

<p>Okno bylo vytvoøeno, tak¾e máme k dispozici handle pro dotaz na multisampling. Pokud je podporován, zru¹íme okno a vytvoøíme ho s novým pixel formátem.</p>

<p class="src1">if(!arbMultisampleSupported &amp;&amp; CHECK_FOR_MULTISAMPLE)<span class="kom">// Je multisampling dostupný?</span></p>
<p class="src1">{</p>
<p class="src2"></p>
<p class="src2">if(InitMultisample(window-&gt;init.application-&gt;hInstance, window-&gt;hWnd, pfd))<span class="kom">// Inicializace multisamplingu</span></p>
<p class="src2">{</p>
<p class="src3">DestroyWindowGL(window);</p>
<p class="src3">return CreateWindowGL(window);</p>
<p class="src2">}</p>
<p class="src1">}</p>
<p></p>
<p class="src1">ShowWindow(window-&gt;hWnd, SW_NORMAL);<span class="kom">// Zobrazí okno</span></p>
<p class="src1">window-&gt;isVisible = TRUE;</p>
<p></p>
<p class="src1">ReshapeGL(window-&gt;init.width, window-&gt;init.height);<span class="kom">// Oznámí rozmìry okna OpenGL</span></p>
<p class="src1">ZeroMemory(window-&gt;keys, sizeof(Keys));<span class="kom">// Nulování pole indikující stisk kláves</span></p>
<p class="src1">window-&gt;lastTickCount = GetTickCount();<span class="kom">// Inicializuje èasovou promìnnou</span></p>
<p></p>
<p class="src1">return TRUE;<span class="kom">// V¹e v poøádku</span></p>
<p class="src0">}</p>

<p>OK, nastavování je kompletní, dostáváme se k zábavnìj¹í èásti, pro kterou jsme se tak sna¾ili. Na¹tìstí se sdru¾ení ARB rozhodlo uèinit multisampling dynamickým, co¾ nám ho umo¾òuje kdykoli zapnout nebo vypnout. Staèí jednoduché glEnable() a glDisable().</p>

<p class="src0">glEnable(GL_MULTISAMPLE_ARB);</p>
<p class="src1"><span class="kom">// Vykreslení vyhlazovaných objektù</span></p>
<p class="src0">glDisable(GL_MULTISAMPLE_ARB);</p>

<p>A to je v¹e. A¾ spustíte ukázkové demo, uvidíte, jak kvalitnì vyhlazování zlep¹uje celkový vzhled scény.</p>

<p class="autor">napsal: Colt McAnlis - MainRoach <span class="transform_email">&lt;duhroach (zavináè) hotmail.com&gt;</span><br />
pøelo¾il: Michal Turek - Woq <span class="transform_email">&lt;WOQ (zavináè) seznam.cz&gt;</span></p>

<h3 class="zdroj_kody_nadpis">Zdrojové kódy</h3>

<ul class="zdroj_kody">
<li><a href="http://nehe.gamedev.net/data/lessons/vc/lesson46.zip">Visual C++</a> kód této lekce.</li>
<li><a href="http://nehe.gamedev.net/data/lessons/bcb6/lesson46_bcb6.zip">Borland C++ Builder 6</a> kód této lekce. ( <a href="mailto:conglth@hotmail.com">Le Thanh Cong</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/cwarrior/lesson46.zip">Code Warrior 5.3</a> kód této lekce. ( <a href="mailto:DelusionalBeing@hotmail.com">Scott Lupton</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/vs_net/lesson46.zip">Visual Studio .NET</a> kód této lekce. ( <a href="mailto:webmaster@joachimrohde.de">Joachim Rohde</a> )</li>
</ul>

<div class="okolo_img"><img src="images/nehe_tut/tut_46_big.jpg" class="nehe_velky" alt="Lekce 46" /></div>
<p class="okolni_lekce"><a href="tut_45.php">&lt;&lt;&lt; Lekce 45</a> | <a href="tut_47.php">Lekce 47 &gt;&gt;&gt;</a></p>


<div class="netisk">
<h3 class="d_nadpis">Diskuze ke èlánku</h3>

<form action="d_view.php" method="post" class="d_o_obsah">

<div class="d_o_zprava">
<div class="d_o_jmeno">technická</div>
<div class="d_o_datumcas">10.04.2005 - 18:28:28</div>
<div>
<input type="checkbox" name="id_0" id="id_0" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_46.php&j=0">technická</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Millhouse</div>
<div class="d_o_datumcas">08.01.2007 - 21:39:59</div>
<div>
<input type="checkbox" name="id_1" id="id_1" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_46.php&j=1">Co znamená...</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Kasom</div>
<div class="d_o_datumcas">13.05.2007 - 05:49:48</div>
<div>
<input type="checkbox" name="id_2" id="id_2" value="1" />
<span class="d_o_nadpis" style="margin-left: 20px;"><a href="d_view.php?f=tut_46.php&j=2">Re: Co znamená...</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Kasom</div>
<div class="d_o_datumcas">13.05.2007 - 05:57:51</div>
<div>
<input type="checkbox" name="id_3" id="id_3" value="1" />
<span class="d_o_nadpis" style="margin-left: 20px;"><a href="d_view.php?f=tut_46.php&j=3">Re: Co znamená...</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Millhouse</div>
<div class="d_o_datumcas">16.07.2007 - 16:25:28</div>
<div>
<input type="checkbox" name="id_4" id="id_4" value="1" />
<span class="d_o_nadpis" style="margin-left: 40px;"><a href="d_view.php?f=tut_46.php&j=4">Re: Co znamená...</a></span>
</div>
</div>

<div class="okolo_img" style="margin-top: 20px;">
<input type="submit" name="zobrazit_vybrane" id="zobrazit_vybrane" value="Zobrazit vybrané" class="tlacitko" />
<input type="submit" name="zobrazit_vse" id="zobrazit_vse" value="Zobrazit v¹e" class="tlacitko" />
<input type="submit" name="vlozit_novy" id="vlozit_novy" value="Vlo¾it nový" class="tlacitko" />
<input type="hidden" name="f" id="f" value="tut_46.php" />
</div>
</form>
</div>
<!-- Informace o webu -->
<center><div id="informace">
<img src="images/my/woq.gif" width="60" height="60" align="left" alt="Woq logo" />
<div style="margin-left: 70px">
<div><strong>CZ NeHe OpenGL, v¹e o programování 3D grafiky</strong></div>
<div>Copyright &copy; 2002-2007 Michal Turek <span class="transform_email">&lt;WOQ (zavináè) seznam.cz&gt;</span></div>
<div style="margin-top: 5px">Komerèní publikování v ti¹tìné, elektronické nebo jiné podobì je bez výslovného souhlasu zakázáno. Redistribuce pro výukové úèely nebo osobní pou¾ití je v¹ak povolena.</div>
</div>
</div></center>
<!-- Informace o webu (konec) -->

</div>
<!-- Vlastní obsah stránky (konec) -->

<script src="http://c1.navrcholu.cz/code?site=56575;t=b14"
type="text/javascript"></script><noscript><div><a
href="http://navrcholu.cz/"><img
src="http://c1.navrcholu.cz/hit?site=56575;t=b14;ref=;jss=0"
width="14" height="14" alt="NAVRCHOLU.cz"
style="border:none" /></a></div></noscript>

</body>
</html>
