<?xml version="1.0" encoding="ISO-8859-2"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="cs" lang="CS">
<head>

<meta http-equiv="content-type" content="text/html; charset=ISO-8859-2" />
<meta http-equiv="content-language" content="cs" />
<meta http-equiv="content-script-type" content="text/javascript" />
<meta http-equiv="content-style-type" content="text/css" />

<meta name="robots" content="all, follow" />
<meta name="resource-type" content="document" />

<meta name="description" content="NeHe OpenGL Tutoriály v èe¹tinì, programování 3D grafiky, èlánky, programy se zdrojovými kódy..." />
<meta name="keywords" content="opengl, nehe, tutoriály, woq, programování, 3D" />
<meta name="author" content="all: Michal Turek - Woq; woq (zavináè) seznam.cz" />
<meta name="copyright" content="Copyright (c) 2002, 2003, 2004 Michal Turek - Woq" />

<title>CZ NeHe OpenGL - Lekce 34 - Generování terénù a krajin za pou¾ití vý¹kového mapování textur</title>

<link rel="shortcut icon" href="skin/default/web.ico" type="image/x-icon" />
<link href="skin/default.css" rel="stylesheet" type="text/css" media="all" />
<link href="skin/print.css" rel="stylesheet" type="text/css" media="print" />

</head>

<body>

<!-- Levý sloupec -->
<div class="levy">
<div id="main_menu">
<a href="http://nehe.ceske-hry.cz/"><img src="skin/default/web_logo.gif" width="135" height="135" style="margin-left: 5px;" alt="CZ NeHe OpenGL" /></a>

<div class="main_menu_bez_loga">

<ul class="text_main_menu">
<li><a href="my.php" title="Pøekladatelé NeHe Tutoriálù a autoøi èlánkù">My</a></li>
<li><a href="novinky.php" title="Co je nového">Novinky</a></li>
<li><a href="navigacni_mapa.php" title="Pøehledná navigace na jednotlivé stránky, které dohromady tvoøí tento web">Navigaèní mapa</a></li>
<li><a href="kontakt.php" title="Kontakt na správce tohoto webu">Kontakt</a></li>
<li><a href="http://forum.programovani.com/" title="Diskusní fórum">Fórum</a></li>
</ul>

<ul class="text_main_menu">
<li><a href="clanky.php" title="Obsah èlánkù">Èlánky</a></li>
<li><a href="tut_obsah.php" title="Obsah NeHe OpenGL Tutoriálù">NeHe Tutoriály</a></li>
<li><a href="33D_index.php" title="Obsah Free3D (33D) Basecode">33D Basecode</a></li>
<li><a href="programy.php" title="Programy od èeských autorù">Èeské programy</a></li>
<li><a href="cl_gl_zacinam.php" title="Kde zaèít pøi uèení OpenGL">Pomoc, zaèínám</a></li>
<li><a href="odkazy.php" title="Jiné zdroje informací">Odkazy</a></li>
<li><a href="cl_gl_faq.php" title="FAQ: Èasto kladené dotazy">FAQ</a></li>
</ul>

<ul class="text_main_menu">
<li><a href="spoluprace.php" title="Nechcete se podílet na tvorbì tìchto webových stránek?">Spolupráce...?</a></li>
<li><a href="download.php" title="Stahujte">Download</a></li>
<li><a href="skiny.php" title="Nastavte si jiný layout a design stránek">Skiny</a></li>
<li><a href="javascript:window.print();" title="Vytiskne tuto stránku">Tisk</a></li>
</ul>

<ul class="text_main_menu">
<li>
<form action="p_fulltext.php" method="post" onsubmit="if(!this.najit.value || this.najit.value=='výraz ...') { alert('Byl zadán prázdný øetìzec!'); this.najit.focus(); return false; }">
<input type="text" name="najit" size="12" value="výraz ..." onclick="this.value=''" /><br />
<input type="submit" value="Najít" />
</form>
</li>
</ul>

<ul class="text_main_menu">
<li>Online ètenáøù: 2</li>
</ul>

</div>

</div>
</div>
<!-- Levý sloupec (konec) -->

<!-- Pravý sloupec -->
<div class="pravy">
<div id="tut_menu">

<ul class="text_tut_menu">
<li class="li_tut"><a href="tut_00.php" title="Lekce 0 - Pøedmluva k NeHe Tutoriálùm">00</a></li>
<li class="li_tut"><a href="tut_01.php" title="Lekce 1 - Vytvoøení OpenGL okna ve Windows">01</a></li>
<li class="li_tut"><a href="tut_02.php" title="Lekce 2 - Vytváøení trojúhelníkù a ètyøúhelníkù">02</a></li>
<li class="li_tut"><a href="tut_03.php" title="Lekce 3 - Barvy">03</a></li>
<li class="li_tut"><a href="tut_04.php" title="Lekce 4 - Rotace">04</a></li>
<li class="li_tut"><a href="tut_05.php" title="Lekce 5 - Pevné objekty">05</a></li>
<li class="li_tut"><a href="tut_06.php" title="Lekce 6 - Textury">06</a></li>
<li class="li_tut"><a href="tut_07.php" title="Lekce 7 - Texturové filtry, osvìtlení, ovládání pomocí klávesnice">07</a></li>
<li class="li_tut"><a href="tut_08.php" title="Lekce 8 - Blending">08</a></li>
<li class="li_tut"><a href="tut_09.php" title="Lekce 9 - Pohyb bitmap ve 3D prostoru">09</a></li>
<li class="li_tut"><a href="tut_10.php" title="Lekce 10 - Vytvoøení 3D svìta a pohyb v nìm">10</a></li>
<li class="li_tut"><a href="tut_11.php" title="Lekce 11 - Efekt vlnící se vlajky">11</a></li>
<li class="li_tut"><a href="tut_12.php" title="Lekce 12 - Display list">12</a></li>
<li class="li_tut"><a href="tut_13.php" title="Lekce 13 - Bitmapové fonty">13</a></li>
<li class="li_tut"><a href="tut_14.php" title="Lekce 14 - Outline fonty">14</a></li>
<li class="li_tut"><a href="tut_15.php" title="Lekce 15 - Mapování textur na fonty">15</a></li>
<li class="li_tut"><a href="tut_16.php" title="Lekce 16 - Mlha">16</a></li>
<li class="li_tut"><a href="tut_17.php" title="Lekce 17 - 2D fonty z textur">17</a></li>
<li class="li_tut"><a href="tut_18.php" title="Lekce 18 - Kvadriky">18</a></li>
<li class="li_tut"><a href="tut_19.php" title="Lekce 19 - Èásticové systémy">19</a></li>
<li class="li_tut"><a href="tut_20.php" title="Lekce 20 - Maskování">20</a></li>
<li class="li_tut"><a href="tut_21.php" title="Lekce 21 - Pøímky, antialiasing, èasování, pravoúhlá projekce, základní zvuky a jednoduchá herní logika">21</a></li>
<li class="li_tut"><a href="tut_22.php" title="Lekce 22 - Bump Mapping &amp; Multi Texturing">22</a></li>
<li class="li_tut"><a href="tut_23.php" title="Lekce 23 - Mapování textur na kulové kvadriky">23</a></li>
<li class="li_tut"><a href="tut_24.php" title="Lekce 24 - Výpis OpenGL roz¹íøení, oøezávací testy a textury z TGA obrázkù">24</a></li>
<li class="li_tut"><a href="tut_25.php" title="Lekce 25 - Morfování objektù a jejich nahrávání z textového souboru">25</a></li>
<li class="li_tut"><a href="tut_26.php" title="Lekce 26 - Odrazy a jejich oøezávání za pou¾ití stencil bufferu">26</a></li>
<li class="li_tut"><a href="tut_27.php" title="Lekce 27 - Stíny">27</a></li>
<li class="li_tut"><a href="tut_28.php" title="Lekce 28 - Bezierovy køivky a povrchy, fullscreen fix">28</a></li>
<li class="li_tut"><a href="tut_29.php" title="Lekce 29 - Blitter, nahrávání .RAW textur">29</a></li>
<li class="li_tut"><a href="tut_30.php" title="Lekce 30 - Detekce kolizí">30</a></li>
<li class="li_tut"><a href="tut_31.php" title="Lekce 31 - Nahrávání a renderování modelù">31</a></li>
<li class="li_tut"><a href="tut_32.php" title="Lekce 32 - Picking, alfa blending, alfa testing, sorting">32</a></li>
<li class="li_tut"><a href="tut_33.php" title="Lekce 33 - Nahrávání komprimovaných i nekomprimovaných obrázkù TGA">33</a></li>
<li class="li_tut"><a href="tut_34.php" title="Lekce 34 - Generování terénù a krajin za pou¾ití vý¹kového mapování textur">34</a></li>
<li class="li_tut"><a href="tut_35.php" title="Lekce 35 - Pøehrávání videa ve formátu AVI">35</a></li>
<li class="li_tut"><a href="tut_36.php" title="Lekce 36 - Radial Blur, renderování do textury">36</a></li>
<li class="li_tut"><a href="tut_37.php" title="Lekce 37 - Cel-Shading">37</a></li>
<li class="li_tut"><a href="tut_38.php" title="Lekce 38 - Nahrávání textur z resource souboru &amp; texturování trojúhelníkù">38</a></li>
<li class="li_tut"><a href="tut_39.php" title="Lekce 39 - Úvod do fyzikálních simulací">39</a></li>
<li class="li_tut"><a href="tut_40.php" title="Lekce 40 - Fyzikální simulace lana">40</a></li>
<li class="li_tut"><a href="tut_41.php" title="Lekce 41 - Volumetrická mlha a nahrávání obrázkù pomocí IPicture">41</a></li>
<li class="li_tut"><a href="tut_42.php" title="Lekce 42 - Více viewportù">42</a></li>
<li class="li_tut"><a href="tut_43.php" title="Lekce 43 - FreeType Fonty v OpenGL">43</a></li>
<li class="li_tut"><a href="tut_44.php" title="Lekce 44 - Èoèkové efekty">44</a></li>
<li class="li_tut"><a href="tut_45.php" title="Lekce 45 - Vertex Buffer Object (VBO)">45</a></li>
<li class="li_tut"><a href="tut_46.php" title="Lekce 46 - Fullscreenový antialiasing">46</a></li>
<li class="li_tut"><a href="tut_47.php" title="Lekce 47 - CG vertex shader">47</a></li>
<li class="li_tut"><a href="tut_48.php" title="Lekce 48 - ArcBall rotace">48</a></li>
</ul>

</div>
</div>
<!-- Pravý sloupec (konec) -->

<!-- Vlastní obsah stránky -->
<div class="stred">

<!--[if IE ]>
<div style="text-align: center;">
<a href="http://firefox.czilla.cz/"><img alt="Mozilla Firefox: Objevte znovu web" title="Mozilla Firefox: Objevte znovu web" style="border:none; width:468px;height:60px" src="http://firefox.czilla.cz/img/p/cz-ff-468x60-w-objevte.png" /></a>
</div>
<![endif]-->

<img src="images/nehe_tut/tut_34.jpg" class="nehe_maly" alt="Lekce 34" />

<h1>Lekce 34 - Generování terénù a krajin za pou¾ití vý¹kového mapování textur</h1>

<p class="nadpis_clanku">Chtìli byste vytvoøit vìrnou simulaci krajiny, ale nevíte, jak na to? Bude nám staèit obyèejný 2D obrázek ve stupních ¹edi, pomocí kterého deformujeme rovinu do tøetího rozmìru. Na první pohled tì¾ko øe¹itelné problémy bývají èastokrát velice jednoduché.</p>

<p>Nyní byste u¾ mìli být opravdovými experty na OpenGL, ale mo¾ná nevíte, co to je vý¹kové mapování (height mapping). Pøedstavte si rovinu, vytlaèenou podle nìjaké formy do 3D prostoru. Této formì se øíká vý¹ková mapa, kterou mù¾e být defakto jakýkoli typ dat. Obrázky, textové soubory nebo tøeba datový proud zvuku - zále¾í jen na vás. My budeme pou¾ívat .RAW obrázek ve stupních ¹edi.</p>

<p>Definujeme tøi opravdu dùle¾ité symbolické konstanty. MAP_SIZE pøedstavuje rozmìr mapy, v na¹em pøípadì se jedná o ¹íøku/vý¹ku obrázku (1024x1024). Konstanta STEP_SIZE urèuje velikost krokù pøi grabování hodnot z obrázku. V souèasné chvíli bereme v úvahu ka¾dý ¹estnáctý pixel. Zmen¹ením èísla pøidáváme do výsledného povrchu polygony, tak¾e vypadá ménì hranatì, ale zároveò zvy¹ujeme nároènost na rendering. HEIGHT_RATIO slou¾í jako mìøítko vý¹ky na ose y. Malé èíslo zredukuje vysoké hory s údolími na plochou rovinu.</p>

<p class="src0">#define MAP_SIZE 1024<span class="kom">// Velikost .RAW obrázku vý¹kové mapy</span></p>
<p class="src0">#define STEP_SIZE 16<span class="kom">// Hustota grabování pixelù</span></p>
<p class="src0">#define HEIGHT_RATIO 1.5f<span class="kom">// Zoom vý¹ky terénu na ose y</span></p>

<p>Promìnná bRender pøedstavuje pøepínaè mezi pevnými polygony a drátìným modelem, scaleValue urèuje zoom scény na v¹ech tøech osách.</p>

<p class="src0">bool bRender = TRUE;<span class="kom">// Polygony - true, drátìný model - false</span></p>
<p class="src0">float scaleValue = 0.15f;<span class="kom">// Mìøítko velikosti terénu (v¹echny osy)</span></p>

<p>Deklarujeme jednorozmìrné pole pro ulo¾ení v¹ech dat vý¹kové mapy. Pou¾ívaný .RAW obrázek neobsahuje RGB slo¾ky barvy, ale ka¾dý pixel je tvoøen jedním bytem, který specifikuje jeho odstín. Nicménì o barvu se starat nebudeme, jde nám pøedev¹ím o hodnoty. Èíslo 255 bude pøedstavovat nejvy¹¹í mo¾ný bod povrchu a nula nejni¾¹í.</p>

<p class="src0">BYTE g_HeightMap[MAP_SIZE * MAP_SIZE];<span class="kom">// Ukládá data vý¹kové mapy</span></p>

<p>Funkce LoadRawFile() nahrává RAW soubor s obrázkem. Nic komplexního! V parametrech se jí pøedává øetìzec diskové cesty, velikost dat obrázku a ukazatel na pamì», do které se ukládá. Otevøeme soubor pro ètení v binárním módu a o¹etøíme situaci, kdy neexistuje.</p>

<p class="src0">void LoadRawFile(LPSTR strName, int nSize, BYTE* pHeightMap)<span class="kom">// Nahraje .RAW soubor</span></p>
<p class="src0">{</p>
<p class="src1">FILE *pFile = NULL;<span class="kom">// Handle souboru</span></p>
<p></p>
<p class="src1">pFile = fopen(strName, &quot;rb&quot;);<span class="kom">// Otevøení souboru pro ètení v binárním módu</span></p>
<p></p>
<p class="src1">if (pFile == NULL)<span class="kom">// Otevøení v poøádku?</span></p>
<p class="src1">{</p>
<p class="src2">MessageBox(NULL, &quot;Can't Find The Height Map!&quot;, &quot;Error&quot;, MB_OK);</p>
<p class="src2">return;</p>
<p class="src1">}</p>

<p>Pomocí fread() naèteme po jednom bytu ze souboru pFile data o velikosti nSize a ulo¾íme je do pamìti na lokaci pHeightMap. Vyskytne-li se chyba, vypí¹eme varovnou zprávu.</p>

<p class="src1">fread(pHeightMap, 1, nSize, pFile);<span class="kom">// Naète soubor do pamìti</span></p>
<p></p>
<p class="src1">int result = ferror(pFile);<span class="kom">// Výsledek naèítání dat</span></p>
<p></p>
<p class="src1">if (result)<span class="kom">// Nastala chyba?</span></p>
<p class="src1">{</p>
<p class="src2">MessageBox(NULL, &quot;Failed To Get Data!&quot;, &quot;Error&quot;, MB_OK);</p>
<p class="src1">}</p>

<p>Na konci zbývá u¾ jenom zavøít soubor.</p>

<p class="src1">fclose(pFile);<span class="kom">// Zavøení souboru</span></p>
<p class="src0">}</p>

<p>Kód pro inicializaci OpenGL byste mìli bez problémù pochopit sami.</p>

<p class="src0">int InitGL(GLvoid)<span class="kom">// Inicializace OpenGL</span></p>
<p class="src0">{</p>
<p class="src1">glShadeModel(GL_SMOOTH);<span class="kom">// Jemné stínování</span></p>
<p class="src1">glClearColor(0.0f, 0.0f, 0.0f, 0.5f);<span class="kom">// Èerné pozadí</span></p>
<p class="src1">glClearDepth(1.0f);<span class="kom">// Nastavení hloubkového bufferu</span></p>
<p class="src1">glEnable(GL_DEPTH_TEST);<span class="kom">// Zapne testování hloubky</span></p>
<p class="src1">glDepthFunc(GL_LEQUAL);<span class="kom">// Typ testování hloubky</span></p>
<p class="src1">glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);<span class="kom">// Perspektivní korekce</span></p>

<p>Pøed vrácením true je¹tì do g_HeightMap nahrajeme .RAW obrázek.</p>

<p class="src1">LoadRawFile(&quot;Data/Terrain.raw&quot;, MAP_SIZE * MAP_SIZE, g_HeightMap);<span class="kom">// Naètení dat vý¹kové mapy</span></p>
<p></p>
<p class="src1">return TRUE;<span class="kom">// V¹e v poøádku</span></p>
<p class="src0">}</p>

<p>Máme zde jeden problém - ulo¾ili jsme dvourozmìrný obrázek do jednorozmìrného pole. Co s tím? Funkce Height() provede výpoèet pro transformaci x, y souøadnic na index do tohoto pole a vrátí hodnotu, která je na nìm ulo¾ená. Pøi práci s poli bychom se v¾dy mìli start o mo¾nost pøeteèení pamìti. Jednoduchým trikem zmen¹íme vysoké hodnoty tak, aby byly v¾dy platné. Pokud nìkterá z hodnot pøesáhne daný index, zbytek po dìlení ji zmen¹í do rozmezí, které mù¾eme bez obav pou¾ít. Dále otestujeme, jestli se v poli opravdu nacházejí data.</p>

<p class="src0">int Height(BYTE *pHeightMap, int X, int Y)<span class="kom">// Pøepoèítá 2D souøadnice na 1D a vrátí ulo¾enou hodnotu</span></p>
<p class="src0">{</p>
<p class="src1">int x = X % MAP_SIZE;<span class="kom">// Proti pøeteèení pamìti</span></p>
<p class="src1">int y = Y % MAP_SIZE;</p>
<p></p>
<p class="src1">if(!pHeightMap)<span class="kom">// Obsahuje pamì» data?</span></p>
<p class="src1">{</p>
<p class="src2">return 0;</p>
<p class="src1">}</p>

<p>Aby se jednorozmìrné pole chovalo jako dvojrozmìrné, musíme zapojit trochu matematiky. Index do 1D pole na 2D souøadnicích získáme tak, ¾e vynásobíme øádek (y) jeho ¹íøkou (MAP_SIZE) a pøièteme konkrétní pozici na øádku (x).</p>

<p class="src1">return pHeightMap[(y * MAP_SIZE) + x];<span class="kom">// Vrátí hodnotu z pole</span></p>
<p class="src0">}</p>

<p>Na tomto místì nastavujeme barvu vertexu podle aktuální vý¹ky nad height mapou. Získáme hodnotu na indexu pole a dìlením 256.0f ji zmen¹íme do rozmezí 0.0f a¾ 1.0f. Abychom ji je¹tì trochu ztmavili, odeèteme -0.15f. Výsledek pøedáme funkci glColor3f() jako modrou slo¾ku barvy.</p>

<p class="src0">void SetVertexColor(BYTE *pHeightMap, int x, int y)<span class="kom">// Získá barvu v závislosti na vý¹ce</span></p>
<p class="src0">{</p>
<p class="src1">if(!pHeightMap)<span class="kom">// Obsahuje pamì» data?</span></p>
<p class="src1">{</p>
<p class="src2">return;</p>
<p class="src1">}</p>
<p></p>
<p class="src1"><span class="kom">// Získání hodnoty, pøepoèet do rozmezí 0.0f a¾ 1.0f, ztmavení</span></p>
<p class="src1">float fColor = (Height(pHeightMap, x, y) / 256.0f) - 0.15f;</p>
<p></p>
<p class="src1">glColor3f(0, 0, fColor);<span class="kom">// Odstíny modré barvy</span></p>
<p class="src0">}</p>

<p>Dostáváme se k nejpodstatnìj¹í èásti celého tutoriálu - renderování terénu. Promìnné X, Y slou¾í k procházejí vý¹kové mapy a x, y, z jsou 3D souøadnicemi vertexu.</p>

<p class="src0">void RenderHeightMap(BYTE pHeightMap[])<span class="kom">// Renderuje terén</span></p>
<p class="src0">{</p>
<p class="src1">int X = 0, Y = 0;<span class="kom">// Pro procházení polem</span></p>
<p class="src1">int x, y, z;<span class="kom">// Souøadnice vertexù</span></p>
<p></p>
<p class="src1">if(!pHeightMap)<span class="kom">// Obsahuje pamì» data?</span></p>
<p class="src1">{</p>
<p class="src2">return;</p>
<p class="src1">}</p>

<p>Podle logické hodnoty bRender pøipínáme mezi vykreslováním obdélníkù a linek.</p>

<p class="src1">if(bRender)<span class="kom">// Co chce u¾ivatel renderovat?</span></p>
<p class="src1">{</p>
<p class="src2">glBegin(GL_QUADS);<span class="kom">// Polygony</span></p>
<p class="src1">}</p>
<p class="src1">else</p>
<p class="src1">{</p>
<p class="src2">glBegin(GL_LINES);<span class="kom">// Drátìný model</span></p>
<p class="src1">}</p>

<p>Zalo¾íme dva vnoøené cykly, které procházejí jednotlivé pixely vý¹kové mapy. Vnìj¹í se stará o osu x a vnitøní o osu y, z èeho¾ plyne, ¾e vykreslujeme po sloupcích a ne po øádcích. V¹imnìte si, ¾e po ka¾dém prùchodu nezvìt¹ujeme øídící promìnnou o jeden pixel, ale hned o nìkolik najednou. Sice výsledný terén nebude tak hladký a pøesný, ale díky men¹ímu poètu polygonù se rendering urychlí. Pokud by se STEP_SIZE rovnalo jedné, ka¾dému pixelu by se pøiøadil jeden polygon. Myslím, ¾e èíslo ¹estnáct bude vyhovující, ale pokud zapnete svìtla, které zvýrazòují hranatost povrchu, mìli byste ho sní¾it.</p>

<p>Pøekl.: Úplnì nejlep¹í by bylo, kdyby se velikost kroku urèovala pøed vstupem do cyklù podle aktuálního FPS. Následující ukázkový kód zavádí zpìtnovazební regulaèní smyèku.</p>

<p class="src1"><span class="kom">// Pøekl.: Regulace poètu polygonù</span></p>
<p class="src1"><span class="kom">// if(FPS &lt; 30)// Ni¾¹í hodnoty =&gt; viditelné trhání pohybù animace</span></p>
<p class="src1"><span class="kom">// {</span></p>
<p class="src2"><span class="kom">// if(STEP_SIZE &gt; 1)// Dolní mez (1 pixel)</span></p>
<p class="src2"><span class="kom">// {</span></p>
<p class="src3"><span class="kom">// STEP_SIZE--;// Musí být promìnnou a ne symbolickou konstantou</span></p>
<p class="src2"><span class="kom">// }</span></p>
<p class="src1"><span class="kom">// }</span></p>
<p class="src1"><span class="kom">// else</span></p>
<p class="src1"><span class="kom">// {</span></p>
<p class="src2"><span class="kom">// if(STEP_SIZE &lt; MAP_SIZE-1)// Horní mez (velikost vý¹kové mapy)</span></p>
<p class="src2"><span class="kom">// {</span></p>
<p class="src3"><span class="kom">// STEP_SIZE++;// Musí být promìnnou a ne symbolickou konstantou</span></p>
<p class="src2"><span class="kom">// }</span></p>
<p class="src1"><span class="kom">// }</span></p>
<p></p>
<p class="src1">for (X = 0; X &lt; MAP_SIZE; X += STEP_SIZE)<span class="kom">// Øádky vý¹kové mapy</span></p>
<p class="src1">{</p>
<p class="src2">for (Y = 0; Y &lt; MAP_SIZE; Y += STEP_SIZE)<span class="kom">// Sloupce vý¹kové mapy</span></p>
<p class="src2">{</p>

<p>Pøepokládám, ¾e to, jak urèit pozici vertexu, jste u¾ dávno vytu¹ili. Hodnota na ose x odpovídá x-ové souøadnici vý¹kové mapy a na ose z y-ové. Získali jsme umístìní bodu na rovinì, potøebujeme ho je¹tì vyzdvihnout do vý¹ky, které v OpenGL odpovídá osa y. Tato vý¹ka je definována hodnotou ulo¾enou na daném prvku pole (svìtlostí obrázku). Opravdu nic slo¾itého...</p>

<p class="src3"><span class="kom">// Souøadnice levého dolního vertexu</span></p>
<p class="src3">x = X;</p>
<p class="src3">y = Height(pHeightMap, X, Y );</p>
<p class="src3">z = Y;</p>

<p>Urèíme barvu bodu podle vý¹ky nad rovinou. Èím vý¹e se nachází, tím bude svìtlej¹í. Potom pomocí funkce glVertex3i() pøedáme OpenGL souøadnice vertexu.</p>

<p class="src3">SetVertexColor(pHeightMap, x, z);<span class="kom">// Barva vertexu</span></p>
<p class="src3">glVertex3i(x, y, z);<span class="kom">// Definování vertexu</span></p>

<p>Druhý vertex urèíme pøiètením STEP_SIZE k ose z. Na tomto místì se budeme nacházet pøi pøí¹tím prùchodu cyklem, tak¾e se mezi jednotlivými polygony nebudou vyskytovat mezery. Analogicky získáme i dal¹í dva body obdélníku. Nyní mi u¾ vìøíte, kdy¾ jsem na zaèátku tutoriálu psal, ¾e slo¾itì vypadající vìci bývají èasto velice jednoduché?</p>

<p class="src3"><span class="kom">// Souøadnice levého horního vertexu</span></p>
<p class="src3">x = X;</p>
<p class="src3">y = Height(pHeightMap, X, Y + STEP_SIZE );  </p>
<p class="src3">z = Y + STEP_SIZE ;</p>
<p></p>
<p class="src3">SetVertexColor(pHeightMap, x, z);<span class="kom">// Barva vertexu</span></p>
<p class="src3">glVertex3i(x, y, z);<span class="kom">// Definování vertexu</span></p>
<p></p>
<p class="src3"><span class="kom">// Souøadnice pravého horního vertexu</span></p>
<p class="src3">x = X + STEP_SIZE; </p>
<p class="src3">y = Height(pHeightMap, X + STEP_SIZE, Y + STEP_SIZE ); </p>
<p class="src3">z = Y + STEP_SIZE ;</p>
<p></p>
<p class="src3">SetVertexColor(pHeightMap, x, z);<span class="kom">// Barva vertexu</span></p>
<p class="src3">glVertex3i(x, y, z);<span class="kom">// Definování vertexu</span></p>
<p></p>
<p class="src3"><span class="kom">// Souøadnice pravého dolního vertexu</span></p>
<p class="src3">x = X + STEP_SIZE; </p>
<p class="src3">y = Height(pHeightMap, X + STEP_SIZE, Y ); </p>
<p class="src3">z = Y;</p>
<p></p>
<p class="src3">SetVertexColor(pHeightMap, x, z);<span class="kom">// Barva vertexu</span></p>
<p class="src3">glVertex3i(x, y, z);<span class="kom">// Definování vertexu</span></p>
<p class="src2">}</p>
<p class="src1">}</p>
<p></p>
<p class="src1">glEnd();<span class="kom">// Konec kreslení</span></p>

<p>Po vykreslení terénu reinicializujeme barvu na bílou, abychom nemìli starosti s barvou ostatních objektù ve scénì (netýká se tohoto dema).</p>

<p class="src1">glColor4f(1.0f, 1.0f, 1.0f, 1.0f);<span class="kom">// Reset barvy</span></p>
<p class="src0">}</p>

<p>Na zaèátku DrawGLScene() zaèneme klasicky smazáním bufferù a resetem matice.</p>

<p class="src0">int DrawGLScene(GLvoid)<span class="kom">// Vykreslení OpenGL scény</span></p>
<p class="src0">{</p>
<p class="src1">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);<span class="kom">// Vyma¾e buffery</span></p>
<p class="src1">glLoadIdentity();<span class="kom">// Reset matice</span></p>

<p>Pomocí funkce gluLookAt() umístíme a natoèíme kameru tak, aby byl renderovaný terén v zábìru. První tøi parametry urèují její pozici vzhledem k poèátku souøadnicového systému, dal¹í tøi body reprezentují místo, kam je natoèená a poslední tøi pøedstavují vektor vzhùru. V na¹em pøípadì se nacházíme nad sledovaným terénem a díváme se na nìj trochu dolù (55 je men¹í ne¾ 60) spí¹e doleva (186 je men¹í ne¾ 212). Hodnota 171 pøedstavuje vzdálenost od kamery na ose z. Proto¾e se hory zvedají od zdola nahoru, nastavíme u vektoru vzhùru jednièku na ose y. Ostatní dvì hodnoty zùstanou na nule.</p>

<p>Pøi prvním pou¾ití mù¾e být gluLookAt() trochu odstra¹ující, asi jste zmateni. Nejlep¹í radou je pohrát si se v¹emi hodnotami, abyste vidìli, jak se pohled na scénu postupnì mìní. Pokud byste napøíklad pøepsal pozici z 60 na 120, vidìli byste terén spí¹e seshora ne¾ z boku, proto¾e se stále díváte na souøadnice 55.</p>

<p>Praktický pøíklad: Øeknìme, ¾e jste vysoký kolem 1,8 m. Oèi, které reprezentují kameru, jsou trochu ní¾e - 1,7 m. Stojíte pøed stìnou, která je vysoká pouze 1 m, tak¾e bez problémù vidíte její horní stranu. Pokud ale zedníci dostaví stìnu do vý¹ky tøí metrù, budete se muset dívat VZHÙRU, ale její vrch u¾ NEUVIDÍTE. Výhled se zmìnil podle toho, jestli se díváte dolù nebo vzhùru (respektive jestli jste nad nebo pod objektem).</p>

<p class="src1"><span class="kom">// Umístìní a natoèení kamery</span></p>
<p class="src1">gluLookAt(212,60,194, 186,55,171, 0,1,0);<span class="kom">// Pozice, smìr, vektor vzhùru</span></p>

<p>Aby byl výsledný terén ponìkud men¹í, zmìníme mìøítko souøadnicových os. Proto¾e navíc násobíme y-ovou hodnotu, budou se hory jevit vy¹¹í. Mohli bychom také pou¾ít translace a rotace, ale to u¾ nechám na vás.</p>

<p class="src1">glScalef(scaleValue, scaleValue * HEIGHT_RATIO, scaleValue);<span class="kom">// Zoom terénu</span></p>

<p>Pomocí døíve napsané funkce vyrenderujeme terén.</p>

<p class="src1">RenderHeightMap(g_HeightMap);<span class="kom">// Renderování terénu</span></p>
<p></p>
<p class="src1">return TRUE;<span class="kom">// V¹e v poøádku</span></p>
<p class="src0">}</p>

<p>Kliknutím levého tlaèítka my¹i mù¾e u¾ivatel pøepnout mezi renderováním polygonù a linek (drátìný model).</p>

<p class="src0"><span class="kom">// Funkce WndProc()</span></p>
<p class="src2">case WM_LBUTTONDOWN:<span class="kom">// Levé tlaèítko my¹i</span></p>
<p class="src2">{</p>
<p class="src3">bRender = !bRender;<span class="kom">// Pøepne mezi polygony a drátìným modelem</span></p>
<p class="src3">return 0;<span class="kom">// Konec funkce</span></p>
<p class="src2">}</p>

<p>©ipkami nahoru a dolù zvìt¹ujeme/zmen¹ujeme mìøítko scény a tím i velikost terénu.</p>

<p class="src0"><span class="kom">// Funkce WinMain()</span></p>
<p class="src3">if (keys[VK_UP])<span class="kom">// ©ipka nahoru</span></p>
<p class="src3">{</p>
<p class="src4">scaleValue += 0.001f;<span class="kom">// Vyvý¹í hory</span></p>
<p class="src3">}</p>
<p></p>
<p class="src3">if (keys[VK_DOWN])<span class="kom">// ©ipka dolù</span></p>
<p class="src3">{</p>
<p class="src4">scaleValue -= 0.001f;<span class="kom">// Sní¾í hory</span></p>
<p class="src3">}</p>

<p>Tak to je v¹echno, vý¹kovým mapováním textur jsme naprogramovali nádherou krajinu, která je ale zabarvená do modra. Zkuste si nakreslit texturu (letecký pohled), která reprezentuje zasnì¾ené vrcholy hor, louky, jezera a podobnì a namapujte ji na terén. Texturovací koordináty získáte vydìlením pozice na rovinì rozmìrem obrázku (zmen¹ení hodnot do rozsahu 0.0f a¾ 1.0f). Plazmovými efekty a rolováním se mù¾e krajina dynamicky mìnit. Dé¹» a sníh zajistí èásticové systémy, které u¾ také znáte. Vlo¾íte-li krajinu do skyboxu, nikdo nepozná, ¾e se jedná o poèítaèový model a ne o video animaci.</p>

<p>Nebo mù¾ete vytvoøit moøskou hladinu s vlnami, na kterých se pohupuje uplavaný míè (vý¹ku nad moøským dnem pøece znáte - hodnota na indexu v poli). Nechte u¾ivatele, a» ho mù¾e ovládat. Mo¾nosti jsou bez hranic...</p>

<p class="autor">napsal: Ben Humphrey - DigiBen<br />
pøelo¾il: Michal Turek - Woq <span class="transform_email">&lt;WOQ (zavináè) seznam.cz&gt;</span></p>

<h3 class="zdroj_kody_nadpis">Zdrojové kódy</h3>

<ul class="zdroj_kody">
<li><a href="http://nehe.gamedev.net/data/lessons/vc/lesson34.zip">Visual C++</a> kód této lekce.</li>
<li><a href="http://nehe.gamedev.net/data/lessons/bcb6/lesson34_bcb6.zip">Borland C++ Builder 6</a> kód této lekce. ( <a href="mailto:christian@tugzip.com">Christian Kindahl</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/cwarrior/lesson34.zip">Code Warrior 5.3</a> kód této lekce. ( <a href="mailto:DelusionalBeing@hotmail.com">Scott Lupton</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/delphi/lesson34.zip">Delphi</a> kód této lekce. ( <a href="mailto:webmaster@joachimrohde.de">Joachim Rohde (aka Marilyn)</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/devc/lesson34.zip">Dev C++</a> kód této lekce. ( <a href="mailto:danprogram@hotmail.com">Dan</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/jogl/lesson34.jar">JoGL</a> kód této lekce. ( <a href="mailto:abezrati@hotmail.com">Abdul Bezrati</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/lccwin32/lccwin32_lesson34.zip">LCC Win32</a> kód této lekce. ( <a href="mailto:rwishlaw@shaw.ca">Robert Wishlaw</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/linuxglx/lesson34.tar.gz">Linux/GLX</a> kód této lekce. ( <a href="mailto:Schubert_P@Yahoo.de">Patrick Schubert</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/macosxcocoa/lesson34.zip">Mac OS X/Cocoa</a> kód této lekce. ( <a href="mailto:blb@pobox.com">Bryan Blackburn</a> )</li>
<li><a href="http://nehe.gamedev.net/data/lessons/vs_net/lesson34.zip">Visual Studio .NET</a> kód této lekce. ( <a href="mailto:ultimatezeus@hotmail.com">Grant James</a> )</li>
</ul>

<div class="okolo_img"><img src="images/nehe_tut/tut_34_big.jpg" class="nehe_velky" alt="Lekce 34" /></div>
<p class="okolni_lekce"><a href="tut_33.php">&lt;&lt;&lt; Lekce 33</a> | <a href="tut_35.php">Lekce 35 &gt;&gt;&gt;</a></p>


<div class="netisk">
<h3 class="d_nadpis">Diskuze ke èlánku</h3>

<form action="d_view.php" method="post" class="d_o_obsah">

<div class="d_o_zprava">
<div class="d_o_jmeno">Tomá¹</div>
<div class="d_o_datumcas">21.11.2004 - 18:43:51</div>
<div>
<input type="checkbox" name="id_0" id="id_0" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_34.php&j=0">Jaký editor?</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Woq</div>
<div class="d_o_datumcas">23.11.2004 - 19:30:50</div>
<div>
<input type="checkbox" name="id_1" id="id_1" value="1" />
<span class="d_o_nadpis" style="margin-left: 20px;"><a href="d_view.php?f=tut_34.php&j=1">Re: Jaký editor?</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">MP</div>
<div class="d_o_datumcas">06.07.2005 - 09:39:36</div>
<div>
<input type="checkbox" name="id_2" id="id_2" value="1" />
<span class="d_o_nadpis" style="margin-left: 0px;"><a href="d_view.php?f=tut_34.php&j=2">Kolize?</a></span>
</div>
</div>

<div class="d_o_zprava">
<div class="d_o_jmeno">Woq</div>
<div class="d_o_datumcas">08.07.2005 - 14:42:40</div>
<div>
<input type="checkbox" name="id_3" id="id_3" value="1" />
<span class="d_o_nadpis" style="margin-left: 20px;"><a href="d_view.php?f=tut_34.php&j=3">Re: Kolize?</a></span>
</div>
</div>

<div class="okolo_img" style="margin-top: 20px;">
<input type="submit" name="zobrazit_vybrane" id="zobrazit_vybrane" value="Zobrazit vybrané" class="tlacitko" />
<input type="submit" name="zobrazit_vse" id="zobrazit_vse" value="Zobrazit v¹e" class="tlacitko" />
<input type="submit" name="vlozit_novy" id="vlozit_novy" value="Vlo¾it nový" class="tlacitko" />
<input type="hidden" name="f" id="f" value="tut_34.php" />
</div>
</form>
</div>
<!-- Informace o webu -->
<center><div id="informace">
<img src="images/my/woq.gif" width="60" height="60" align="left" alt="Woq logo" />
<div style="margin-left: 70px">
<div><strong>CZ NeHe OpenGL, v¹e o programování 3D grafiky</strong></div>
<div>Copyright &copy; 2002-2007 Michal Turek <span class="transform_email">&lt;WOQ (zavináè) seznam.cz&gt;</span></div>
<div style="margin-top: 5px">Komerèní publikování v ti¹tìné, elektronické nebo jiné podobì je bez výslovného souhlasu zakázáno. Redistribuce pro výukové úèely nebo osobní pou¾ití je v¹ak povolena.</div>
</div>
</div></center>
<!-- Informace o webu (konec) -->

</div>
<!-- Vlastní obsah stránky (konec) -->

<script src="http://c1.navrcholu.cz/code?site=56575;t=b14"
type="text/javascript"></script><noscript><div><a
href="http://navrcholu.cz/"><img
src="http://c1.navrcholu.cz/hit?site=56575;t=b14;ref=;jss=0"
width="14" height="14" alt="NAVRCHOLU.cz"
style="border:none" /></a></div></noscript>

</body>
</html>
