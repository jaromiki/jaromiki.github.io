From: <Uloženo v aplikaci Windows Internet Explorer 7>
Subject: =?windows-1250?Q?Pokro=E8il=E9_program=E1torsk=E9_techniky_=5B1._Opakov?=
	=?windows-1250?Q?anie=5D?=
Date: Thu, 31 May 2007 16:20:25 +0200
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_001C_01C7A39F.9825CC50"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028

This is a multi-part message in MIME format.

------=_NextPart_000_001C_01C7A39F.9825CC50
Content-Type: text/html;
	charset="windows-1250"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://edi.fmph.uniba.sk/salanci/PPT/01/

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Pokro=E8il=E9 program=E1torsk=E9 techniky [1. =
Opakovanie]</TITLE>
<META http-equiv=3DContent-Language content=3Dsk>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1250"><LINK=20
href=3D"http://edi.fmph.uniba.sk/salanci/PPT/styles.css" type=3Dtext/css =

rel=3Dstylesheet>
<STYLE fprolloverstyle>A:hover {
	COLOR: #ff0000
}
</STYLE>

<SCRIPT language=3Djavascript><!--=0A=
=0A=
function Flip(Name, State) {=0A=
  document.images[Name].src=3DState;=0A=
}=0A=
=0A=
--></SCRIPT>

<META content=3D"MSHTML 6.00.6000.16441" name=3DGENERATOR></HEAD>
<BODY>
<TABLE cellSpacing=3D0 cellPadding=3D0 align=3Dright border=3D0>
  <TBODY>
  <TR>
    <TD width=3D20><A=20
      onmouseover=3D"Flip('_Hlavna', '../../Zahlavie/Hlavna.b.png')"=20
      onmouseout=3D"Flip('_Hlavna', '../../Zahlavie/Hlavna.a.png')"=20
      href=3D"http://edi.fmph.uniba.sk/salanci/index.html"><IMG =
height=3D20=20
      alt=3D"Domovsk=E1 str=E1nka"=20
      src=3D"http://edi.fmph.uniba.sk/salanci/Zahlavie/Hlavna.a.png" =
width=3D20=20
      border=3D0 name=3D_Hlavna></A></TD>
    <TD width=3D20><A onmouseover=3D"Flip('_C', =
'../../Zahlavie/C.b.png')"=20
      onmouseout=3D"Flip('_C', '../../Zahlavie/C.a.png')"=20
      href=3D"http://edi.fmph.uniba.sk/salanci/PPT/Index.html"><IMG =
height=3D20=20
      alt=3D"Programovanie v C++"=20
      src=3D"http://edi.fmph.uniba.sk/salanci/Zahlavie/C.a.png" =
width=3D20 border=3D0=20
      name=3D_C></A></TD>
    <TD width=3D20><A=20
      onmouseover=3D"Flip('_Kontakt', '../../Zahlavie/Kontakt.b.png')"=20
      onmouseout=3D"Flip('_Kontakt', '../../Zahlavie/Kontakt.a.png')"=20
      href=3D"http://edi.fmph.uniba.sk/salanci/Kontakt/Index.html"><IMG =
height=3D20=20
      alt=3DKontakt =
src=3D"http://edi.fmph.uniba.sk/salanci/Zahlavie/Kontakt.a.png"=20
      width=3D20 border=3D0 =
name=3D_Kontakt></A></TD></TR></TBODY></TABLE>
<TABLE class=3DTitle>
  <TBODY>
  <TR>
    <TD width=3D20>&nbsp;</TD>
    <TD width=3D400=20
    =
background=3Dhttp://edi.fmph.uniba.sk/salanci/Zahlavie/HCiaraModra.png>1.=
=20
      Opakovanie</TD></TR></TBODY></TABLE>
<P>Vytvor=EDme objektov=FA triedu<SPAN class=3Dprogram> TTree</SPAN>, =
pomocou ktorej=20
budeme vytv=E1ra=9D n-=E1rne stromy. Odvoden=E1 objektov=E1 trieda n=E1m =
navy=9Ae umo=9En=ED=20
vykres=BEova=9D cel=FD strom . Pritom si zopakujeme:</P>
<UL>
  <LI>definovanie tried,=20
  <LI>definovanie vlastnost=ED,=20
  <LI>vytv=E1ranie, pou=9E=EDvanie a ru=9Aenie objektov. </LI></UL>
<H2>=DAvahy o stromoch</H2>
<P>Ve=BEa objektov je organizovan=FDch, usporiadan=FDch v rozmanit=FDch =
stromov=FDch=20
=9Atrukt=FArach:</P>
<UL>
  <LI>adres=E1re na diskoch,=20
  <LI>=9Atrukt=FAra s=FAborov (HTML, XML),=20
  <LI>okn=E1 vo Windows, ktor=E9 obsahuj=FA vnoren=E9 komponenty a tie =
obsahuj=FA =EFal=9Aie=20
  vnoren=E9 komponenty...,=20
  <LI>grafick=E9 objekty v hr=E1ch - r=F4zne potvorky, ktor=E9 maj=FA =
samostatne funguj=FAce=20
  kon=E8atiny, =E8asti tela. </LI></UL>
<P>Zjednodu=9A=EDme postavu =E8loveka a v=9A=EDmame si iba niektor=E9 =
=E8asti - hlava, krk,=20
ruky, trup, nohy:</P>
<P align=3Dcenter><IMG height=3D100=20
src=3D"http://edi.fmph.uniba.sk/salanci/PPT/01/Postava1.png" width=3D200 =
border=3D0>=20
</P>
<P>Vznikne kostra, ktor=FA vieme reprezentova=9D ako stromu:</P>
<P align=3Dcenter><IMG height=3D160=20
src=3D"http://edi.fmph.uniba.sk/salanci/PPT/01/Postava2.png" width=3D99=20
border=3D0></P>
<P>Ako by sme mohli tak=FAto kostru vytvori=9D - zapam=E4ta=9D, =
kresli=9D, pres=FAva=9D alebo=20
animova=9D (kr=FA=9Eenie niektorou kon=E8atinou)?</P>
<H2>=DAdajov=E1 =9Atrukt=FAra N-=E1rny strom</H2>
<P>Chceme navrhn=FA=9D objektov=FA triedu<SPAN class=3Dprogram> =
TTree</SPAN>, ktor=E1=20
umo=9En=ED:</P>
<UL>
  <LI>pracova=9D s n-=E1rnymi stromami,=20
  <LI>zobrazi=9D, nakresli=9D strom do grafickej plochy,=20
  <LI>meni=9D polohu vrcholov, pr=EDpadne animova=9D vrcholy stromu. =
</LI></UL>
<P>Na za=E8iatku m=E1me nejasn=FA predstavu. Postupnou anal=FDzou budeme =
o triede a o=20
vz=9Dahoch medzi objektmi z=EDskava=9D konkr=E9tnej=9Aiu predstavu, =
ktor=FA postupne=20
naprogramujeme.</P>
<P>Chceli by sme vykon=E1va=9D nie=E8o tak=E9to:</P>
<TABLE class=3DProgram id=3Dtable8>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>var</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; Root: TTree;<BR>&nbsp; I:=20
      Integer;<BR></SPAN><SPAN =
class=3Dreserverword>begin<BR></SPAN><SPAN=20
      class=3Dprogram>&nbsp; Root:=3DTTree.Create(</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram>);<BR>&nbsp;=20
      TTree.Create(Root);<BR>&nbsp; TTree.Create(Root);<BR>&nbsp;=20
      </SPAN>...<SPAN class=3Dprogram><BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>for </SPAN><SPAN class=3Dprogram>I:=3D0 =
</SPAN><SPAN=20
      class=3Dreserverword>to</SPAN><SPAN class=3Dprogram> =
Root.ItemCount-1=20
      </SPAN><SPAN class=3Dreserverword>do</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; Root[I] </SPAN>...<SPAN=20
      class=3Dprogram>&nbsp;&nbsp;&nbsp; // </SPAN>vykonaj nie=E8o so =
synom<BR><SPAN=20
      class=3Dprogram>&nbsp; </SPAN>...<SPAN class=3Dprogram><BR>&nbsp;=20
      Root[0].Free;&nbsp; // </SPAN>zru=9Aenie syna<SPAN =
class=3Dprogram><BR>&nbsp;=20
      </SPAN>...<SPAN class=3Dprogram><BR>&nbsp; =
Root.Free;<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN=20
class=3Dprogram>;</SPAN></TD></TR></TBODY></TABLE>
<P>=DAdajov=FA =9Atrukt=FAry strom m=F4=9Eeme reprezentova=9D =
napr=EDklad t=FDmto sp=F4sobom:</P>
<UL>
  <LI>referenciu na rodi=E8a (ak objekt nie je kore=F2om stromu),=20
  <LI>zoznam prvkov - synov,=20
  <LI>prid=E1vanie prvky k vrcholu a odstra=F2ovanie prvkov. </LI></UL>
<P><U>ND=DA:</U> Porozm=FD=9A=BEajte aj o in=FDch =
reprezent=E1ci=E1ch.</P>
<P>=DAvaha, ako by mala vyzera=9D trieda - 1.verzia:</P>
<TABLE class=3DProgram id=3Dtable6>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>type</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; TTree=3D</SPAN><SPAN=20
      class=3Dreserverword>class</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>private</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; FParent: </SPAN>...<SPAN=20
      class=3Dprogram>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
</SPAN>rodi=E8<SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; FItems: </SPAN>...<SPAN=20
      class=3Dprogram>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // =
</SPAN>zoznam synov=20
      - pole<SPAN class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; FItemCount:=20
      </SPAN>...<SPAN class=3Dprogram>&nbsp;&nbsp; // </SPAN>zoznam =
synov - po=E8et=20
      prvkov<SPAN class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; <SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
Add(Item:=20
      TTree);<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
Remove(Item:=20
      TTree);<BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>public</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>&nbsp;=20
      constructor</SPAN><SPAN class=3Dprogram> Create(Parent:=20
      TTree);<BR>&nbsp;&nbsp;&nbsp; </SPAN>...<SPAN =
class=3Dprogram><BR>&nbsp;=20
      </SPAN><SPAN class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;</SPAN></SPAN></TD></TR></TBODY></TABLE>
<H2>=DAvahy o kreslen=ED a s=FAradniciach</H2>
<P>Chceme, aby sa cel=FD strom dok=E1zal nakresli=9D, pritom ka=9Ed=FD =
vrchol m=E1 svoje=20
s=FAradnice - chcem nie=E8o tak=E9to:</P>
<TABLE class=3DProgram id=3Dtable11>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dprogram>&nbsp;=20
      =
Root.X:=3D100;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=20
      // </SPAN>s=FAradnice<SPAN class=3Dprogram> </SPAN>kore=F2a<SPAN=20
      class=3Dprogram><BR>&nbsp; Root.Y:=3D50;<BR>&nbsp;=20
      Root.Items[0].X:=3DRoot.X-50;&nbsp;&nbsp; // </SPAN>s=FAradnice =
prv=E9ho=20
      syna<SPAN class=3Dprogram><BR>&nbsp; =
Root.Items[0].Y:=3DRoot.Y+100;<BR>&nbsp;=20
      </SPAN>...<SPAN class=3Dprogram><BR>&nbsp;=20
      =
Root.Paint(Canvas);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;=20
      // </SPAN>nakresl=ED cel=FD strom</TD></TR></TBODY></TABLE>
<P>Dopredu nevieme, ako sa bud=FA jednotliv=E9 vrcholy kresli=9D. =
Kreslenie vrcholu=20
budeme ch=E1pa=9D ako algoritmus (nakresl=ED sa kr=FA=9Eok, bitmapa...). =
Chceme umo=9Eni=9D,=20
aby sa mohol teoreticky ka=9Ed=FD vrchol vykresli=9D vlastn=FDm =
algoritmom. Objektov=E1=20
trieda<SPAN class=3Dprogram> TTree </SPAN>bude e=9Ate obsahova=9D dve =
met=F3dy:</P>
<UL>
  <LI><SPAN class=3Dprogram>Paint&nbsp;&nbsp; </SPAN>... zabezpe=E8=ED =
prech=E1dzanie po=20
  jednotliv=FDch vrcholoch stromu,=20
  <LI><SPAN class=3Dprogram>DoPaint </SPAN>... zrealizuje kreslenie =
jedn=E9ho=20
  vrcholu,=20
  <LI>met=F3da <SPAN class=3Dprogram>Paint </SPAN>bude postupne, pre =
jednotliv=E9=20
  vrcholy, vola=9D met=F3dy<SPAN class=3Dprogram> DoPaint</SPAN>. =
</LI></UL>
<TABLE class=3DProgram id=3Dtable12>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>type</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; TTree=3D</SPAN><SPAN=20
      class=3Dreserverword>class</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>private</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN>...<SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; FX: =
Integer;<BR>&nbsp;&nbsp;&nbsp;=20
      FY: Integer;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
DoPaint(Canvas:=20
      TCanvas); </SPAN><SPAN class=3Dreserverword>virtual</SPAN><SPAN=20
      class=3Dprogram>;<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>public</SPAN><SPAN =
class=3Dprogram><BR>&nbsp;&nbsp;&nbsp;=20
      </SPAN><SPAN class=3Dreserverword>procedure</SPAN><SPAN =
class=3Dprogram>=20
      Paint(Canvas: TCanvas);<BR>&nbsp;&nbsp;&nbsp; </SPAN>...<SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> X: =
Integer=20
      </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =
class=3Dprogram> FX=20
      </SPAN><SPAN class=3Dreserverword>write</SPAN><SPAN =
class=3Dprogram>=20
      FX;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> Y: =
Integer=20
      </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =
class=3Dprogram> FY=20
      </SPAN><SPAN class=3Dreserverword>write</SPAN><SPAN =
class=3Dprogram>=20
      FY;<BR>&nbsp; </SPAN><SPAN class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;</SPAN></TD></TR></TBODY></TABLE>
<P>Ak potrebujeme in=FD algoritmus pre kreslenie vrchola, odvod=EDme =
nov=FA triedu a v=20
nej inak naprogramujeme virtu=E1lnu met=F3du<SPAN class=3Dprogram> =
DoPaint</SPAN>.</P>
<P>Vizu=E1lny tvar stromu si m=F4=9Eeme zapam=E4ta=9D tak, =9Ee o =
ka=9Edom vrchole=20
pozn=E1me:</P>
<UL>
  <LI><SPAN class=3Dterm>absol=FAtnu polohu</SPAN> - v obrazovkov=FDch =
s=FAradniciach:
  <UL>
    <LI>pomocou premenn=FDch<SPAN class=3Dprogram> X</SPAN>,<SPAN =
class=3Dprogram>=20
    Y</SPAN>, </LI></UL>
  <LI><SPAN class=3Dterm>relat=EDvnu polohu</SPAN> - vzh=BEadom na =
rodi=E8a (ak=20
  existuje):
  <UL>
    <LI>m=F4=9Eeme ju reprezentova=9D ako<SPAN class=3Dprogram> =
dX</SPAN>,<SPAN=20
    class=3Dprogram> dY </SPAN>- relat=EDvne s=FAradnice vzh=BEadom na =
rodi=E8a,=20
    <LI>alebo ju m=F4=9Eeme reprezentova=9D ako<SPAN class=3Dprogram> A, =
D</SPAN>,=20
    <LI>alebo ju m=F4=9Eeme vypo=E8=EDta=9D pod=BEa nejak=E9ho algoritmu =
(pri animovan=ED -=20
    napr=EDklad, kr=FA=9Eenie rukou). </LI></UL></LI></UL>
<P>Probl=E9my s polohou:</P>
<UL>
  <LI>absol=FAtna:
  <UL>
    <LI>v=FDhodn=E1 pri kreslen=ED alebo testovan=ED kol=EDzi=ED =
(napr=EDklad na kliknutie=20
    my=9Ai),=20
    <LI>zmena polohy bude n=E1ro=E8n=E1 na =E8as - pri zmene polohy =
hociktor=E9ho=20
    rodi=E8ovsk=E9ho vrcholu mus=EDme aktualizova=9D polohy v=9Aetk=FDch =
synov,=20
    <LI>pri pohybe m=E1me probl=E9m s integritou - mus=EDme spr=E1vne =
meni=9D polohy=20
    v=9Aetk=FDch synov aby sa zachoval tvar stromu. </LI></UL>
  <LI>relat=EDvna: </LI></UL>
<BLOCKQUOTE>
  <UL>
    <LI>pri kreslen=ED n=E1ro=E8n=E1 na =E8as - od syna sa mus=EDme =
vr=E1ti=9D a=9E ku kore=F2u, aby=20
    sme zistili synove absol=FAtne s=FAradnice,=20
    <LI>zmena polohy bude r=FDchla - nemus=EDme aktualizova=9D =
relat=EDvne polohy synov,=20

    <LI>nehroz=ED strata tvaru. </LI></UL></BLOCKQUOTE>
<P>Vid=EDme, =9Ee relat=EDvna poloha je v=FDhodn=E1 pri animovan=ED a =
m=F4=9Ee by=9D d=F4sledkom=20
v=FDpo=E8tu nejak=E9ho algoritmu. Pritom absol=FAtna poloha - =
absol=FAtne s=FAradnice s=FA=20
u=9Eito=E8n=E9 pri kreslen=ED. Skombinujeme oba pr=EDstupy a v=FDpo=E8et =
absol=FAtnych s=FAradn=EDc=20
z relat=EDvnej polohy ponech=E1me na ka=9Edom objekte. Objektov=E1 =
trieda<SPAN=20
class=3Dprogram> TTree </SPAN>bude obsahova=9D e=9Ate dve met=F3dy:</P>
<UL>
  <LI><SPAN class=3Dprogram>Update&nbsp;&nbsp;&nbsp; </SPAN>... =
zabezpe=E8=ED=20
  prech=E1dzanie po jednotliv=FDch vrcholoch stromu,=20
  <LI><SPAN class=3Dprogram>DoUpdate</SPAN><SPAN class=3Dprogram>&nbsp; =
</SPAN>...=20
  vypo=E8=EDta absol=FAtne s=FAradnice,=20
  <LI>met=F3da<SPAN class=3Dprogram> Update </SPAN>bude postupne, pre =
jednotliv=E9=20
  vrcholy, vola=9D virtu=E1lnu met=F3du<SPAN class=3Dprogram> =
DoUpdate</SPAN>. </LI></UL>
<TABLE class=3DProgram id=3Dtable14>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>type</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; TTree=3D</SPAN><SPAN=20
      class=3Dreserverword>class</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>private</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN>...<SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
Do<SPAN=20
      lang=3Den-gb>Update</SPAN>; </SPAN><SPAN=20
      class=3Dreserverword>virtual</SPAN><SPAN =
class=3Dprogram>;<BR>&nbsp;=20
      </SPAN><SPAN class=3Dreserverword>public</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN>...<SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> <SPAN=20
      lang=3Den-gb>Update</SPAN>;<BR>&nbsp;&nbsp;&nbsp; </SPAN>...<SPAN=20
      class=3Dprogram><BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;</SPAN></TD></TR></TBODY></TABLE>
<H2>Implement=E1cia</H2>
<P>Kompletn=E1 implement=E1cia triedy<SPAN class=3Dprogram> =
TTree</SPAN>:</P>
<TABLE class=3DProgram>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>unit</SPAN><SPAN =
class=3Dprogram>=20
      Tree;<BR><BR></SPAN><SPAN =
class=3Dreserverword>interface</SPAN><SPAN=20
      class=3Dprogram><BR><BR></SPAN><SPAN =
class=3Dreserverword>type</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; TTree=3D</SPAN><SPAN=20
      class=3Dreserverword>class</SPAN><SPAN =
class=3Dprogram>;</SPAN><SPAN=20
      class=3Dreserverword><BR></SPAN><SPAN class=3Dprogram>&nbsp;=20
      TTreeItems=3D</SPAN><SPAN class=3Dreserverword>array</SPAN><SPAN=20
      class=3Dprogram> </SPAN><SPAN class=3Dreserverword>of</SPAN><SPAN=20
      class=3Dprogram> TTree;<BR><BR>&nbsp; TTree=3D</SPAN><SPAN=20
      class=3Dreserverword>class</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>private</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; FParent: =
TTree;<BR>&nbsp;&nbsp;&nbsp;=20
      FItems: TTreeItems;<BR>&nbsp;&nbsp;&nbsp; FItemCount:=20
      Integer;<BR>&nbsp;&nbsp;&nbsp; FX: Integer;<BR>&nbsp;&nbsp;&nbsp; =
FY:=20
      Integer;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
Add(Item:=20
      TTree);<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
Remove(Item:=20
      TTree);<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>function</SPAN><SPAN class=3Dprogram> =
GetItem(Index:=20
      Integer): TTree;<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>protected</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
DoPaint(Canvas:=20
      TCanvas); </SPAN><SPAN class=3Dreserverword>virtual</SPAN><SPAN=20
      class=3Dprogram>;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
DoUpdate;=20
      </SPAN><SPAN class=3Dreserverword>virtual</SPAN><SPAN=20
      class=3Dprogram>;<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>public</SPAN><SPAN =
class=3Dprogram><BR>&nbsp;&nbsp;&nbsp;=20
      </SPAN><SPAN class=3Dreserverword>constructor</SPAN><SPAN =
class=3Dprogram>=20
      Create(Parent: TTree);<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>destructor</SPAN><SPAN class=3Dprogram> =
Destroy;=20
      </SPAN><SPAN class=3Dreserverword>override</SPAN><SPAN=20
      class=3Dprogram>;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>function</SPAN><SPAN class=3Dprogram> =
IndexOf(Item:=20
      TTree): Integer;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
Paint(Canvas:=20
      TCanvas);<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram>=20
      Update;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> Parent: =
TTree=20
      </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =
class=3Dprogram>=20
      FParent;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> =
Items[Index:=20
      Integer]: TTree </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =

      class=3Dprogram> GetItem; </SPAN><SPAN=20
      class=3Dreserverword>default</SPAN><SPAN=20
      class=3Dprogram>;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> =
ItemCount: Integer=20
      </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =
class=3Dprogram>=20
      FItemCount;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> X: =
Integer=20
      </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =
class=3Dprogram> FX=20
      </SPAN><SPAN class=3Dreserverword>write</SPAN><SPAN =
class=3Dprogram>=20
      FX;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> Y: =
Integer=20
      </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =
class=3Dprogram> FY=20
      </SPAN><SPAN class=3Dreserverword>write</SPAN><SPAN =
class=3Dprogram>=20
      FY;<BR>&nbsp; </SPAN><SPAN class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>implementation</SPAN><SPAN =
class=3Dprogram><BR><BR>//=20
      TTree - public:<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>constructor</SPAN><SPAN class=3Dprogram>=20
      TTree.Create(Parent: TTree);<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN =
class=3Dprogram><BR></SPAN><SPAN=20
      class=3Dreserverword>&nbsp; inherited</SPAN><SPAN class=3Dprogram> =

      Create;<BR>&nbsp; </SPAN><SPAN class=3Dreserverword>if</SPAN><SPAN =

      class=3Dprogram> Parent&lt;&gt;</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram>=20
      Parent.Add(Self);<BR></SPAN><SPAN =
class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>destructor</SPAN><SPAN class=3Dprogram>=20
      TTree.Destroy;<BR></SPAN><SPAN =
class=3Dreserverword>begin</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>if</SPAN><SPAN=20
      class=3Dprogram> FParent&lt;&gt;</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram>=20
      FParent.Remove(Self);<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>while</SPAN><SPAN class=3Dprogram> =
FItemCount&gt;0=20
      </SPAN><SPAN class=3Dreserverword>do</SPAN><SPAN class=3Dprogram> =
</SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN =
class=3Dprogram><BR>&nbsp;&nbsp;&nbsp;=20
      Dec(FItemCount);<BR>&nbsp;&nbsp;&nbsp;=20
      FItems[FItemCount].FParent:=3D</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN =
class=3Dprogram>;<BR>&nbsp;&nbsp;&nbsp;=20
      FItems[FItemCount].Free;<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN class=3Dprogram>;<BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>inherited</SPAN><SPAN =
class=3Dprogram>;<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN =
class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>function</SPAN><SPAN class=3Dprogram> =
TTree.IndexOf(Item:=20
      TTree): Integer;<BR></SPAN><SPAN =
class=3Dreserverword>begin</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; Result:=3DFItemCount-1;<BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>while </SPAN><SPAN =
class=3Dprogram>(Result&gt;=3D0)=20
      </SPAN><SPAN class=3Dreserverword>and</SPAN><SPAN class=3Dprogram> =

      (FItems[Result]&lt;&gt;Item) </SPAN><SPAN=20
      class=3Dreserverword>do</SPAN><SPAN class=3Dprogram>=20
      Dec(Result);<BR></SPAN><SPAN class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram>=20
      TTree.Paint(Canvas: TCanvas);<BR></SPAN><SPAN=20
      class=3Dreserverword>var</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
Index:=20
      Integer;<BR></SPAN><SPAN class=3Dreserverword>begin</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; DoPaint(Canvas);<BR>&nbsp; </SPAN><SPAN =

      class=3Dreserverword>for</SPAN><SPAN class=3Dprogram> Index:=3D0 =
</SPAN><SPAN=20
      class=3Dreserverword>to</SPAN><SPAN class=3Dprogram> ItemCount-1 =
</SPAN><SPAN=20
      class=3Dreserverword>do</SPAN><SPAN class=3Dprogram>=20
      Items[Index].Paint(Canvas);<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN =
class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram>=20
      TTree.Update;<BR></SPAN><SPAN class=3Dreserverword>var</SPAN><SPAN =

      class=3Dprogram><BR>&nbsp; Index: Integer;<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp;=20
      DoUpdate;<BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>for</SPAN><SPAN=20
      class=3Dprogram> Index:=3D0 </SPAN><SPAN =
class=3Dreserverword>to</SPAN><SPAN=20
      class=3Dprogram> ItemCount-1 </SPAN><SPAN class=3Dreserverword>do =
</SPAN><SPAN=20
      class=3Dprogram>Items[Index].Update;<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN class=3Dprogram>;<BR><BR>// =
TTree -=20
      protected:<BR><BR></SPAN><SPAN =
class=3Dreserverword>procedure</SPAN><SPAN=20
      class=3Dprogram> TTree.DoPaint(Canvas: TCanvas);<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp;=20
      Canvas.Brush.Color:=3DclBlack;<BR>&nbsp; Canvas.Ellipse(X-4, Y-4, =
X+4,=20
      Y+4);<BR>&nbsp; </SPAN><SPAN class=3Dreserverword>if</SPAN><SPAN=20
      class=3Dprogram> Parent&lt;&gt;</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram> =
</SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN =
class=3Dprogram><BR>&nbsp;&nbsp;&nbsp;=20
      Canvas.MoveTo(Parent.X, Parent.Y);<BR>&nbsp;&nbsp;&nbsp; =
Canvas.LineTo(X,=20
      Y);<BR>&nbsp; </SPAN><SPAN class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR></SPAN><SPAN =
class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram>=20
      TTree.DoUpdate;<BR></SPAN><SPAN =
class=3Dreserverword>var</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; N: Integer;<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>if</SPAN><SPAN class=3Dprogram> =
Parent=3D</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram> =
Exit;<BR>&nbsp;=20
      N:=3DParent.ItemCount;<BR>&nbsp;=20
      X:=3DParent.X+50*Parent.IndexOf(Self)-25*(N-1);<BR>&nbsp;=20
      Y:=3DParent.Y+50*(1+N div 2);<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN class=3Dprogram>;<BR><BR>// =
TTree -=20
      private:<BR><BR></SPAN><SPAN =
class=3Dreserverword>function</SPAN><SPAN=20
      class=3Dprogram> TTree.GetItem(Index: Integer): =
TTree;<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp;=20
      Result:=3DFItems[Index];<BR></SPAN><SPAN =
class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
TTree.Add(Item:=20
      TTree);<BR></SPAN><SPAN class=3Dreserverword>begin</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>if</SPAN><SPAN=20
      class=3Dprogram> Length(FItems)&lt;=3DFItemCount </SPAN><SPAN=20
      class=3Dreserverword>then</SPAN><SPAN =
class=3Dprogram><BR>&nbsp;&nbsp;&nbsp;=20
      </SPAN><SPAN class=3Dreserverword>if</SPAN><SPAN class=3Dprogram> =
FItemCount=3D0=20
      </SPAN><SPAN class=3Dreserverword>then</SPAN><SPAN =
class=3Dprogram>=20
      SetLength(FItems, 1)<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>else </SPAN><SPAN =
class=3Dprogram>SetLength(FItems,=20
      2*FItemCount);<BR>&nbsp; FItems[FItemCount]:=3DItem;<BR>&nbsp;=20
      Inc(FItemCount);<BR>&nbsp; Item.FParent:=3DSelf;<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN =
class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
TTree.Remove(Item:=20
      TTree);<BR></SPAN><SPAN class=3Dreserverword>var</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; Index: Integer;<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp;=20
      Index:=3DIndexOf(Item);<BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>if=20
      </SPAN><SPAN class=3Dprogram>Index&lt;0 </SPAN><SPAN=20
      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram> =
Exit;<BR>&nbsp;=20
      Dec(FItemCount);<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>while</SPAN><SPAN class=3Dprogram> =
Index&lt;FItemCount=20
      </SPAN><SPAN class=3Dreserverword>do</SPAN><SPAN class=3Dprogram> =
</SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN =
class=3Dprogram><BR>&nbsp;&nbsp;&nbsp;=20
      FItems[Index]:=3DFItems[Index+1];<BR>&nbsp;&nbsp;&nbsp;=20
      Inc(Index);<BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR>&nbsp; Item.FParent:=3D</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN =
class=3Dprogram>;<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN =
class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN=20
class=3Dprogram>.</SPAN></TD></TR></TBODY></TABLE>
<P>Uk=E1=9Eka pou=9Eitia:</P>
<TABLE class=3DProgram id=3Dtable13>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>procedure </SPAN><SPAN =

      class=3Dprogram>TForm1.FormCreate(Sender: =
TObject);<BR></SPAN><SPAN=20
      class=3Dreserverword>var</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
Hlava, Krk,=20
      Trup: TTree;<BR></SPAN><SPAN =
class=3Dreserverword>begin</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; Hlava:=3DTTree.Create(</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram>);<BR>&nbsp;=20
      Krk:=3DTTree.Create(Hlava);<BR>&nbsp; TTree.Create(Krk);<BR>&nbsp; =

      Trup:=3DTTree.Create(Krk);<BR>&nbsp; TTree.Create(Krk);<BR>&nbsp;=20
      TTree.Create(Trup);<BR>&nbsp; TTree.Create(Trup);<BR>&nbsp;=20
      Hlava.X:=3D100;<BR>&nbsp; Hlava.Y:=3D100;<BR><FONT =
color=3D#0044ff>&nbsp;=20
      Hlava.Update;<BR></FONT>&nbsp; =
Hlava.Paint(Image1.Canvas);<BR>&nbsp;=20
      Hlava.Free;</SPAN><BR><SPAN class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;</SPAN></TD></TR></TBODY></TABLE>
<H2>=DAvahy o algoritmoch a o efekt=EDvnosti</H2>
<P>Zamyslime sa, pre=E8o met=F3da<SPAN class=3Dprogram> Destroy =
</SPAN>nem=F4=9Ee vyzera=9D=20
nasledovne:</P>
<TABLE class=3DProgram id=3Dtable5>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>destructor</SPAN><SPAN =

      class=3Dprogram> TTree.Destroy;<BR></SPAN><SPAN=20
      class=3Dreserverword>var<BR></SPAN><SPAN class=3Dprogram>&nbsp; =
Index:=20
      Integer;<BR></SPAN><SPAN class=3Dreserverword>begin</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; </SPAN><SPAN class=3Dreserverword>if =
</SPAN><SPAN=20
      class=3Dprogram>FParent&lt;&gt;</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram>=20
      FParent.Remove(Self);<BR></SPAN><SPAN class=3Dreserverword>&nbsp; =
for=20
      </SPAN><SPAN class=3Dprogram>Index:=3D0 </SPAN><SPAN =
class=3Dreserverword>to=20
      </SPAN><SPAN class=3Dprogram>FItemCount-1 </SPAN><SPAN=20
      class=3Dreserverword>do</SPAN><SPAN class=3Dprogram>=20
      FItems[Index].Free;&nbsp;&nbsp; // </SPAN><FONT =
color=3D#ff0000><B>zl=E9=20
      !!!</B></FONT><SPAN class=3Dprogram><BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>inherited</SPAN><SPAN =
class=3Dprogram>;<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN=20
class=3Dprogram>;</SPAN></TD></TR></TBODY></TABLE>
<P>Zamyslime sa, ak=FD vplyv by mali zmeny v met=F3dach<SPAN =
class=3Dprogram> Destroy=20
</SPAN>a<SPAN class=3Dprogram> Add </SPAN>na r=FDchlos=9D a =
pam=E4=9D:</P>
<P>In=E1 verzia met=F3dy<SPAN class=3Dprogram> Destroy </SPAN>- v =E8om =
spo=E8=EDva jej=20
neefekt=EDvnos=9D?</P>
<TABLE class=3DProgram id=3Dtable3>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>destructor</SPAN><SPAN =

      class=3Dprogram> TTree.Destroy;<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>if </SPAN><SPAN=20
      class=3Dprogram>FParent&lt;&gt;</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram>=20
      FParent.Remove(Self);<BR></SPAN><SPAN class=3Dreserverword>&nbsp;=20
      while</SPAN><SPAN class=3Dprogram> FItemCount&gt;0 </SPAN><SPAN=20
      class=3Dreserverword>do</SPAN><SPAN class=3Dprogram> =
FItems[0].Free;<BR>&nbsp;=20
      </SPAN><SPAN class=3Dreserverword>inherited</SPAN><SPAN=20
      class=3Dprogram>;<BR></SPAN><SPAN =
class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;</SPAN></TD></TR></TBODY></TABLE>
<P>In=E1 verzia met=F3dy<SPAN class=3Dprogram> Add </SPAN>- v =E8om =
spo=E8=EDva jej=20
nev=FDhoda? Viete vymyslie=9D in=FA strat=E9giu pre zmenu ve=BEkosti =
po=BEa?</P>
<TABLE class=3DProgram id=3Dtable4>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>procedure</SPAN><SPAN=20
      class=3Dprogram> TTree.Add(Item: TTree);<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp;=20
      SetLength(FItems, FItemCount+1);<BR>&nbsp;=20
      FItems[FItemCount]:=3DItem;<BR>&nbsp; Inc(FItemCount);<BR>&nbsp;=20
      Item.FParent:=3DSelf;<BR></SPAN><SPAN =
class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;</SPAN></TD></TR></TBODY></TABLE>
<P>ND=DA: N=E1mety na =EFal=9Aie vylep=9Aenia... Napr=EDklad, <SPAN =
class=3Dprogram>Update=20
</SPAN>sa vol=E1 automaticky pri nastaven=ED alebo zmene =
vlastnost=ED<SPAN=20
class=3Dprogram> X</SPAN>,<SPAN class=3Dprogram> Y </SPAN>- ak=FD bude =
vplyv na=20
efekt=EDvnos=9D, keby sme menili ka=9Ed=FD vrchol?</P>
<H2>Dedi=E8nos=9D</H2>
<P>V predch=E1dzaj=FAcej triede sme naprogramovali nejak=FD z=E1kladn=FD =
algoritmus, ktor=FD=20
po=E8=EDtal absol=FAtne s=FAradnice. Tak=FDto algoritmus nemus=ED v=9Edy =
dobre dopadn=FA=9D a=20
objekty "vhodne umiestni=9D". Z=E1rove=F2 uk=E1=9Eeme, ako sa d=E1 =
vyu=9Ei=9D met=F3da<SPAN=20
class=3Dprogram> DoUpdate</SPAN>.</P>
<P>Objekt triedy<SPAN class=3Dprogram> TXYTree </SPAN>si pam=E4t=E1 =
relat=EDvne=20
s=FAradnice<SPAN class=3Dprogram> dX</SPAN>,<SPAN class=3Dprogram> dY =
</SPAN>vzh=BEadom=20
na rodi=E8a:</P>
<TABLE class=3DProgram id=3Dtable10>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>unit</SPAN><SPAN =
class=3Dprogram>=20
      XYTree;<BR><BR></SPAN><SPAN =
class=3Dreserverword>interface</SPAN><SPAN=20
      class=3Dprogram><BR><BR></SPAN><SPAN =
class=3Dreserverword>uses</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp; Windows, Messages, SysUtils, Classes,=20
      Graphics,<BR>&nbsp; Tree;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>type</SPAN><SPAN class=3Dprogram><BR>&nbsp;=20
      TXYTree=3D</SPAN><SPAN class=3Dreserverword>class</SPAN><SPAN=20
      class=3Dprogram>(TTree)<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>private</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; FdX: =
Integer;<BR>&nbsp;&nbsp;&nbsp;=20
      FdY: Integer;<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>protected</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
DoUpdate;=20
      </SPAN><SPAN class=3Dreserverword>override</SPAN><SPAN=20
      class=3Dprogram>;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> dX: =
Integer=20
      </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =
class=3Dprogram> FdX=20
      </SPAN><SPAN class=3Dreserverword>write</SPAN><SPAN =
class=3Dprogram>=20
      FdX;<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>property</SPAN><SPAN class=3Dprogram> dY: =
Integer=20
      </SPAN><SPAN class=3Dreserverword>read</SPAN><SPAN =
class=3Dprogram> FdY=20
      </SPAN><SPAN class=3Dreserverword>write</SPAN><SPAN =
class=3Dprogram>=20
      FdY;<BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>public</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>constructor</SPAN><SPAN class=3Dprogram> =
Create(Parent:=20
      TTree; <SPAN lang=3Den-gb>Sur</SPAN>X, <SPAN =
lang=3Den-gb>Sur</SPAN>Y:=20
      Integer);<BR>&nbsp;&nbsp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram> =
AfterConstruction;=20
      </SPAN><SPAN class=3Dreserverword>override</SPAN><SPAN=20
      class=3Dprogram>;;<BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>implementation</SPAN><SPAN =
class=3Dprogram><BR><BR>//=20
      TXYTree - public:<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>constructor</SPAN><SPAN class=3Dprogram>=20
      TXYTree.Create(Parent: TTree; <SPAN lang=3Den-gb>Sur</SPAN>X, =
<SPAN=20
      lang=3Den-gb>Sur</SPAN>Y: Integer);<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN =
class=3Dprogram><BR></SPAN><SPAN=20
      class=3Dreserverword>&nbsp; inherited</SPAN><SPAN class=3Dprogram> =

      Create(Parent);<BR>&nbsp; </SPAN><SPAN =
class=3Dreserverword>if</SPAN><SPAN=20
      class=3Dprogram> Parent=3D</SPAN><SPAN =
class=3Dreserverword>nil</SPAN><SPAN=20
      class=3Dprogram> </SPAN><SPAN =
class=3Dreserverword>then</SPAN><SPAN=20
      class=3Dprogram> </SPAN><SPAN =
class=3Dreserverword>begin</SPAN><SPAN=20
      class=3Dprogram><BR>&nbsp;&nbsp;&nbsp; FX</SPAN><SPAN=20
      class=3Dreserverword>:</SPAN><SPAN class=3Dprogram>=3D<SPAN=20
      lang=3Den-gb>Sur</SPAN>X;<BR>&nbsp;&nbsp;&nbsp; FY:=3D<SPAN=20
      lang=3Den-gb>Sur</SPAN>Y;<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>else</SPAN><SPAN class=3Dprogram> =
</SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN =
class=3Dprogram><BR>&nbsp;&nbsp;&nbsp;=20
      FdX</SPAN><SPAN class=3Dreserverword>:</SPAN><SPAN =
class=3Dprogram>=3D<SPAN=20
      lang=3Den-gb>Sur</SPAN>X;<BR>&nbsp;&nbsp;&nbsp; FdY:=3D<SPAN=20
      lang=3Den-gb>Sur</SPAN>Y;<BR>&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>end;<BR>end</SPAN><SPAN=20
      class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram>=20
      TXYTree.AfterConstruction;<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp;=20
      Update;<BR></SPAN><SPAN class=3Dreserverword>end</SPAN><SPAN=20
      class=3Dprogram>;<BR><BR>// TXYTree - =
protected:<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>procedure</SPAN><SPAN class=3Dprogram>=20
      TXYTree.DoUpdate;<BR></SPAN><SPAN =
class=3Dreserverword>begin</SPAN><SPAN=20
      class=3Dprogram><BR>&amp;&nbsp; </SPAN><SPAN=20
      class=3Dreserverword>if</SPAN><SPAN class=3Dprogram> =
Parent=3D</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram> =
Exit;<BR>&nbsp;=20
      X:=3DParent.X+dX;<BR>&nbsp; Y:=3DParent.Y+dY;<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN =
class=3Dprogram>;<BR><BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN=20
class=3Dprogram>.</SPAN></TD></TR></TBODY></TABLE>
<P>In=E1 verzia met=F3dy<SPAN class=3Dprogram> DoUpdate</SPAN>:</P>
<TABLE class=3DProgram id=3Dtable15>
  <TBODY>
  <TR>
    <TD width=3D"100%"><SPAN class=3Dreserverword>procedure</SPAN><SPAN=20
      class=3Dprogram> TXYTree.DoUpdate;<BR></SPAN><SPAN=20
      class=3Dreserverword>begin</SPAN><SPAN class=3Dprogram><BR>&nbsp; =
</SPAN><SPAN=20
      class=3Dreserverword>if</SPAN><SPAN class=3Dprogram> =
Parent=3D</SPAN><SPAN=20
      class=3Dreserverword>nil</SPAN><SPAN class=3Dprogram> </SPAN><SPAN =

      class=3Dreserverword>then</SPAN><SPAN class=3Dprogram> =
Exit;<BR>&nbsp;=20
      X:=3D(9*X+TXYTree(Parent).X+dX) </SPAN><SPAN=20
      class=3Dreserverword>div</SPAN><SPAN class=3Dprogram> =
10;<BR>&nbsp;=20
      Y:=3D(9*Y+TXYTree(Parent).Y+dY) </SPAN><SPAN=20
      class=3Dreserverword>div</SPAN><SPAN class=3Dprogram> =
10;<BR></SPAN><SPAN=20
      class=3Dreserverword>end</SPAN><SPAN=20
class=3Dprogram>;</SPAN></TD></TR></TBODY></TABLE>
<P>ND=DA: Objekt triedy <SPAN class=3Dprogram>TXYTree </SPAN>si =
pam=E4t=E1 relat=EDvnu=20
poz=EDciu ako posunutie<SPAN class=3Dprogram> dX</SPAN>,<SPAN =
class=3Dprogram> dY=20
</SPAN>vzh=BEadom k rodi=E8ovi. Porozm=FD=9A=BEajte, akoby ste vytvorili =
in=FA triedu,=20
potomka triedy<SPAN class=3Dprogram> TTree</SPAN>, ktor=E1 by si =
pam=E4tala relat=EDvnu=20
poz=EDciu vzh=BEadom na rodi=E8a pomocou uhla a vzdialenosti od =
rodi=E8a.</P>
<H2>S=FAbory na stiahnutie</H2>
<UL>
  <LI><A =
href=3D"http://edi.fmph.uniba.sk/salanci/PPT/01/Tree.pas">Tree.pas</A>=20
  <LI><A=20
  =
href=3D"http://edi.fmph.uniba.sk/salanci/PPT/01/XYTree.pas">XYTree.pas</A=
>=20
  <LI><A =
href=3D"http://edi.fmph.uniba.sk/salanci/PPT/01/Ukazka.zip">Uk=E1=9Eka=20
  pou=9Eitia</A> </LI></UL>
<P align=3Dright><FONT face=3DArial color=3D#c0c0c0 size=3D1>=A9 2007 =
=BC.=20
SALANCI</FONT></P></BODY></HTML>

------=_NextPart_000_001C_01C7A39F.9825CC50
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://edi.fmph.uniba.sk/salanci/Zahlavie/Hlavna.a.png

iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAIAAAAC64paAAAA10lEQVR4nGP4TwFgoJnmTnMQIkdz
jw0C4QCMIAMwwQQndJGCfZiqsGme7I7FOCDI3UlI8zQf7DohIGsLbs0zAvHphICM9dg0zwkjrBMC
UlZhs/m8BWGdhifgTBYUCUZWIPFb+zCEx3rVFpOLDLBoZmDEy8WpmYmdBC66n6/4MxAEOhtx2cxG
WDMSgGo+8GTX59+feL5DNX/+x8DLxICVzfdkF5DhIOMG4kOS+KEne7beX3fwXMKWMwn4SYhKlIxx
9Nl+iNlffn/mYeUlyHaX90PYTB6gSDMAKlvVMcFxxi4AAAAASUVORK5CYII=

------=_NextPart_000_001C_01C7A39F.9825CC50
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://edi.fmph.uniba.sk/salanci/Zahlavie/C.a.png

iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAIAAAAC64paAAABWklEQVR4nGP4TwFgGDyaf3z6++jY
n3Nzfx/tBiIgA8gFChLS/O/f/z8//9ze/nOJ5/dJqt97JEFokiqQCxQESoEU4NL87/uHv3f3fO+X
/7W74u/zC////AIiIAPIBQoCpYAKcGj++fnPra3fJ6n9fXGJZD//fXrm5+qIX/vrideJ0Pznyqof
82z/vryCLNe/AF01mggLAwT8+szw9zeTiDoDEmBmYkADaCKMINsZGP5eWPjn/Fz2+H0MTCDjpi1D
UZQVhUUEBKDOvrHx51Kff6+vI7tq+nJ0Z6OJwALs5eVf2/N/n5iILDd7FbpmNBFYVP36+vfh4Z/L
/f+9vY2uAzdASmE/P/99dvbnqtDfp2eAjPj7G4iADCAXKAiUAirArRmY+v7+Bkb4r321vzam/Fwb
DURABpALFASZhSd5wtz/7d+bm3/v7f1zYxMQARlALlCQkLNJBwOnGQCTFRaQlnBkBwAAAABJRU5E
rkJggg==

------=_NextPart_000_001C_01C7A39F.9825CC50
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://edi.fmph.uniba.sk/salanci/Zahlavie/Kontakt.a.png

iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAIAAAAC64paAAABMElEQVR4nGP4TwFgGGjNh29vAyII
49yjI7hU33p5CUhuvbTkyJ3tCM3rzs1ZenISkLHhwvyjd3bi0nzu4eEbz8/PPty6/8ZGhObLT08B
9R+6taVvdykedwJ1br64eO/19SjOhjgGaOSkvVXuE+Tx6D9yezucjdAM1Dl1fx0Q+U1RAyI0PUCR
+Ue7gLLbLi/DohkoN/1AAwQB2cg6Q2boAdHCY71AtOzUZCyagWDl6WlA+1ecmopm7aozM5aemAhB
QDZ2zUAw90gHMvvqszMQ9qaLC4F2AklkxSiaga5FdjCEDRdB8wuK5gl7KoDkouN9cASXgrCRRdA1
T95XAySXnZz8HxsAigMRRA12Z/8HhxlWzRCpGQcb8WlefXYmLs2YUgjNwOQJRMgMglIDnp/JAwAv
v1IBWg6uPwAAAABJRU5ErkJggg==

------=_NextPart_000_001C_01C7A39F.9825CC50
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://edi.fmph.uniba.sk/salanci/PPT/01/Postava1.png

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

------=_NextPart_000_001C_01C7A39F.9825CC50
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://edi.fmph.uniba.sk/salanci/PPT/01/Postava2.png

iVBORw0KGgoAAAANSUhEUgAAAGMAAACgCAIAAACXJUXYAAAE0UlEQVR42u2dzVUcMRCEZ+PwARKB
FDhzdRQQAUThK2dSgETg4Djwgu1hl52fklStruFVHfzwop4pfcxotFp17+7t7W2wAO3SSP3+VRn4
42eK31RSFX2ui2LIpFCZFCqTQqVF6vb29uHh4fX19ezs7Pr6+u7uDonqIyFSl5eXz8/Ph69cXFw8
PT0tR3WTCqn91XR/f3/a6ubm5ujKMqnz8/P9TXfaan8bvry8zEX1lAqp3W431/DIoUn5mpqXxylU
fvah8nwKlefosX02qdgohkwKldc8UeWR2pokSe3f2ei5MinYlEmhpkwKNWVSqCmTQk2ZFGrKpFBT
KqQO6cz9nGtQhdRwAOX0BwEpkRr+ozn8V0ZipIYPWH8lZkyP1KB1032aUiQlKQFS4EJV0rLUKA1S
qxTyljpHKZJ6fHy8urpabtNfJoXKpFCZFCqTQmVSqBRJVbYJlhap2b0uJnVIYWn/lEmNFFb25JnU
uz4orOzzNKl3fVBY2TtsUu/yNYXK4xQqP/tQeT6FynN0VF4d/mZSIuXPkDEj3pcAuTjGsfzfLI/5
pE5BIK/0t5lMahIB/mJPp5mk5jpf+nofs2mkFrpd96tovzmkljvc8ts4ywmkVrva3iDCdQ9SyPyo
dD7Vfc7VlxR4W1W3/yakkP6U7vPsuCO0F6kB3rdZus+z6OAtnehHahR4pXCP2d6J/HczG9EJqer0
4Dkh65k9j1PrfIoUcXWRtfLbfwX55GhRpP7t7KnqYeWuoI82E7HKpD7tdic1Ha5J6shoBikOrGhS
Xy0mkSLACiVF6WHscRRITdtKJdUEK4jUrKFsUvWwIkgtWREgVQmLTmrFhAapGlhcUuunlyFVDItI
CjqxEqkyWCxS6CnFSLU4ryHV8pdJJ4X6byfVeLcrkIJ6UURqvQ7pZkmNwvdLzpKCattunFTRHtxp
Umi95C2TKt3XPU0KrcG9ZVKluQLTpNC67lsmVZp/4mtqpo8ep0ZxxqnBzz7Pp76IMJ/iSJ4UfjSN
z5BZbSKdC+xLcC4WKuf3oXLOKCrnIaNybjsqX1OoPE6h8rMPledTqJzbjsq57d9MYqQkc7X/2REi
JZl+/OlFhZRkRu2REQlSkkmiX13kk8Kz03JtKlYBaGwZ5FSxCgCrPdesYhUAehTFr2IVgLjYFsud
SHGnlBkT1O6kWB3rXqOqLylur/p+1VFHUkNAXnWvxPahN6lR7eMU8WjgOfPn6BvRDCn6Z/yTqvs2
8iRj86Si1xhlv7d95hQJpArS3meM0RLYlUmVpb3PGwuEpUCqOO190VgUrHRSNWnva8ZCYOWSon3Z
DjeBXY1Ufdo7ZowMK4tUU9o7HMWElUKqNe29JCqu9k04KULae2FUUO2bWFKctPfyqIjaN4GkaGnv
VVH02jdRpJhp77VR3No3IaTIae8NUcTaN3xS/LT3tihW7RsyqfbCKRFRlNo3TFJEQ/Qo1p+QQIp7
kUdEUYaFVlL0gTMkivGoaSIV8TAOIlXglk4qaIIXRwr1zCUV96YhlBTkvJoUIW9bidSo0nyKFVKc
WgB6pCpydJZI0epLiJGqy/taIkWrWSJGqi6XcIkUrQ6OGKm6/FRfUyf98jg1ij9ODX724aQGz6dw
UlHKJlV6Cu80Q4159yKqP5pwcDmkEJ+WAAAAAElFTkSuQmCC

------=_NextPart_000_001C_01C7A39F.9825CC50
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://edi.fmph.uniba.sk/salanci/Zahlavie/HCiaraModra.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAABCAIAAAB/kG/JAAAA80lEQVR4nG1SWZYEIQgzeMM59FzL
ViEYLH39gQjZqtH+/tvjYP/mGSzafQVi0osxSn9eoYvfTuKYcPFJMZ9brYKnmG/nhroWrbJ8B3Ab
iWOVSJq4ooOAD3bsLBXxYMdOb0VnByqSzElNspWI0D6vp8DmNbSOkGu7MOrNq1kUHlWnS+PMhHSa
NZy6CJVPLsqLzjE4FK9ZzAFPML7AWDKmgE4fnQml4FXzNakTU8WAtSGM66QOp8F0B1l/W66kx9dO
zBNQbe8EBFANqn1VG3R2FjvqVxA7IYbsWV+CVacqufKETHYrkoKUqrLW/5jioCpJuhT/A51XH/0u
Pq1pAAAAAElFTkSuQmCC

------=_NextPart_000_001C_01C7A39F.9825CC50
Content-Type: text/css;
	charset="iso-8859-2"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://edi.fmph.uniba.sk/salanci/PPT/styles.css

BODY {
	FONT-SIZE: 80%; BACKGROUND: #ffffff; FONT-FAMILY: Arial
}
BLOCKQUOTE {
	MARGIN-TOP: 4pt; MARGIN-BOTTOM: 4pt
}
H1 {
	MARGIN-TOP: 24pt; FONT-WEIGHT: bold; FONT-SIZE: 200%; MARGIN-BOTTOM: =
12pt; MARGIN-LEFT: 32pt; FONT-FAMILY: Arial
}
H2 {
	MARGIN-TOP: 16pt; FONT-WEIGHT: bold; FONT-SIZE: 150%; MARGIN-BOTTOM: =
8pt; MARGIN-LEFT: 32pt; FONT-FAMILY: Arial
}
H3 {
	MARGIN-TOP: 12pt; FONT-WEIGHT: bold; FONT-SIZE: 100%; MARGIN-BOTTOM: =
4pt; MARGIN-LEFT: 32pt; FONT-STYLE: italic; FONT-FAMILY: Arial
}
P {
	MARGIN-TOP: 8pt; MARGIN-BOTTOM: 0pt
}
A:hover {
	COLOR: #ff0000
}
BLOCKQUOTE {
	MARGIN-TOP: 0pt; MARGIN-BOTTOM: 0pt
}
UL {
	MARGIN-TOP: 0pt; MARGIN-BOTTOM: 0pt
}
OL {
	MARGIN-TOP: 0pt; MARGIN-BOTTOM: 0pt
}
SPAN.term {
	FONT-WEIGHT: bold; COLOR: #0044ff
}
SPAN.program {
	FONT-SIZE: 100%; FONT-FAMILY: Courier New
}
SPAN.reserverword {
	FONT-WEIGHT: bold; FONT-SIZE: 100%; FONT-FAMILY: Courier New
}
IMG {
	BORDER-RIGHT: 0px; BORDER-TOP: 0px; BORDER-LEFT: 0px; BORDER-BOTTOM: =
0px
}
TABLE {
	FONT-SIZE: 100%; FONT-FAMILY: Arial
}
TABLE.Definition {
	BORDER-RIGHT: #ffdd88 2px solid; BORDER-TOP: #ffdd88 2px solid; =
FONT-SIZE: 100%; BACKGROUND: #ffffee; BORDER-LEFT: #ffdd88 2px solid; =
COLOR: #0044ff; BORDER-BOTTOM: #ffdd88 2px solid; FONT-FAMILY: Arial; =
BORDER-COLLAPSE: collapse
}
TABLE.Program {
	BORDER-RIGHT: #0000aa 2px solid; BORDER-TOP: #0000aa 2px solid; =
BACKGROUND: #ffffdd; BORDER-LEFT: #0000aa 2px solid; WIDTH: 100%; =
BORDER-BOTTOM: #0000aa 2px solid; BORDER-COLLAPSE: collapse
}
TABLE.Title {
	BORDER-RIGHT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: 0px; PADDING-LEFT: =
0px; FONT-WEIGHT: bold; FONT-SIZE: 120%; BACKGROUND: #0052c6; =
PADDING-BOTTOM: 0px; MARGIN: 0px 0px 12px; BORDER-LEFT: 0px; WIDTH: =
420px; COLOR: #ffffff; PADDING-TOP: 0px; BORDER-BOTTOM: 0px; =
FONT-FAMILY: Arial; BORDER-COLLAPSE: collapse; spacing: 0px 0px 0px 0px
}
TABLE.Title TD {
	PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; =
PADDING-TOP: 0px
}

------=_NextPart_000_001C_01C7A39F.9825CC50--
