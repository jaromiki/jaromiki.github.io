<?xml version="1.0" encoding="utf-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='cs'>
<head>
<title>OpenGL (9.) - Generování textur a vylepšení FarClip Distance</title>
<meta http-equiv="content-Type" content="text/html; charset=utf-8"/>
<meta http-equiv="content-language" content="cs"/>
<meta name="description" content="Tak jsem se dal do psaní dalšího článku o OpenGL. Dnes jsem pro vás připravil automatické generování textur, výpočet fps a vylepšený Far-clip distance (omezeni viditelné vzdálenosti). "/>
<meta name="Author" content="Roman Schulz, rschulz@centrum.cz"/>
<meta name="robots" content="index,follow"/>
<meta name="Copyright" content="(C) 2005 Roman Schulz, All rights reserved."/>
<link href="index.php?zobraz=articles&amp;rss=10" rel="alternate" type="application/xml" title="rss články"/>
<link href="index.php?zobraz=blog&amp;rss=10" rel="alternate" type="application/xml" title="rss blog"/>
<link href="index.php?zobraz=discussion&amp;rss=30" rel="alternate" type="application/xml" title="rss komentáře"/>
<link rel="stylesheet" href="/skin/new/styl.css" type="text/css"/>
</head>


<body>
<div id="web">
<div id="celek">
  <div id="top">
    <img src="/skin/new/img/top1.jpg" alt="" width="800" height="115" /> 
		<div id="nadpis"><a href="http://www.pc-guru.cz">PC-guru.cz</a></div>
  </div>
  <div class="menuh">
		<a class="buttonh" href="kontakni-informace">Kontaktní informace</a><a class="buttonh" href="inzerce">Výměna odkazů</a><a class="buttonh" href="historie-serveru">Historie</a>  </div>
  
  <div id="obal">
    <div class="text">
<script type="text/javascript"><!--
google_ad_client = "pub-8453529582371782";
google_alternate_color = "FFFFFF";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
//2007-05-24: top
google_ad_channel = "4038297255";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "4F4F8B";
google_color_text = "000000";
google_color_url = "CCCCF4";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script><a href="http://linkuj.cz/?id=linkuj&amp;url=http://www.pc-guru.cz/generovani-textur-terenu-a-far-clip&amp;title=OpenGL (9.) - Generování textur a vylepšení FarClip Distance" rel="nofollow"><img style="float: right;" src="http://linkuj.cz/img/badge.png" alt="Dejte tomuto článku hlas!" title="Dejte tomuto článku hlas!"/></a><h1>OpenGL (9.) - Generování textur a vylepšení FarClip Distance</h1><i>Tak jsem se dal do psaní dalšího článku o OpenGL. Dnes jsem pro vás připravil automatické generování textur, výpočet fps a vylepšený Far-clip distance (omezeni viditelné vzdálenosti). </i><br/><hr/><br/><H2>Generování textur</H2>	
<P>Na serveru <A class="odkaz" href="http://www.flipcode.com">FlipCode.com</A> jsem narazil na velmi zajímavý článek nazvaný <B>Terrain Texture Generation</B>. Technika je zde pojmenována jako "procedural texture generation" a není vůbec složitá. Máme bitmapu s odstínem šedé pro generování výšky trojůhelníků (černá barva=nížiny, bílá barva=hory). Dále máme několik (v mém případě 3) bitmap, ve kterých je vlastně charakteristika každého prostředí: (nížina: žlutá bitmapa=<B>písky</B>, hory: vrásčitá bílo-šedá bitmapa=<B>skály</B>, střed: nazelenalá barva=<B>vegetace</B>. Teď, když máme nachystány všechny bitmapy, si můžeme spočítat procentuální složku bitmapy pro každý bod. K tomu nám poslouží následující funkce:</P>
	
<PRE><B>function</B> texfactor(h1:TGLFloat; h2:integer): TGLFloat;
    <B>var</B> percent: TGLFloat;
  <B>begin</B>
    percent := (128 - ABS(h2 - h1)) / 128;
    <B>if</B> percent < 0 <B>then</B> percent := 0
      <B>else if</B> percent>1 <B>then</B> percent := 0;
    <B>result</B> := percent;
  <B>end</B>;</PRE>


<CENTER><TABLE class=image CELLPADDING=0 CELLSPACING=0><TR><TD><IMG SRC="articles/glgentext/opengl1.jpg" BORDER=0></TD></TR><TR><TD>Popis obrázku</TD></TR><TABLE></CENTER>

  
<P>Jako první parametr funkce zadáme hlavní výškový bod prostředí, pro které počítáme složku (nížiny=0, střed=128, hory=256), a do druhého parametru dosadíme výšku mapy. Funkce nám "vyhodí" procentní hodnotu každé složky pro dosazený bod. Budeme muset získat všechny bitmapy a postupně si je uložíme do polí buffer1-buffer3:</P>
  
<PRE>  LoadTexture('snow.jpg');        //Funkce nacte texturu snehu
  buffer1:=buffer; 
  LoadTexture('grass.jpg'); 	  //Funkce nacte texturu travy
  buffer2:=buffer;
  LoadTexture('sand.jpg');        //Funkce nacte texturu pisku
  buffer3:=buffer;</PRE>
  
  
  
<P>Teď z těchto tří bitmap vypočteme jednu výslednou bitmapu, která obsahuje složky nížin, vegetace a hor podle výškového uspořádání:</P>
  
<PRE>  for j:=1 to 256 do
    for i:=1 to 256 do begin
      hmap_height := Map[j,i].red;

      tex_fact[1] := texfactor(256, hmap_height);
      tex_fact[2] := texfactor(128, hmap_height);
      tex_fact[3] := texfactor(0, hmap_height);

      old_red[1] := buffer1[i,j].red;
      old_green[1] := buffer1[i,j].green;
      old_blue[1] := buffer1[i,j].blue;

      old_red[2] := buffer2[i,j].red;
      old_green[2] := buffer2[i,j].green;
      old_blue[2] := buffer2[i,j].blue;

      old_red[3] := buffer3[i,j].red;
      old_green[3] := buffer3[i,j].green;
      old_blue[3] := buffer3[i,j].blue;



      new_red := round((tex_fact[1]*old_red[1]) + 
	             (tex_fact[2]*old_red[2]) + (tex_fact[3]*old_red[3]));
      new_green := round((tex_fact[1]*old_green[1]) + 
	             (tex_fact[2]*old_green[2]) + (tex_fact[3]*old_green[3]));
      new_blue := round((tex_fact[1]*old_blue[1]) + 
	             (tex_fact[2]*old_blue[2]) + (tex_fact[3]*old_blue[3]));

     buffer[i,j].red := new_red;
     buffer[i,j].blue := new_blue;
     buffer[i,j].green := new_green;
   end;</PRE>
   
<P>A takto vygenerovanou texturu nastavíme jako texturu 1, která je nastavená jako textura pro krajinu:</P>
   
<PRE>  glGenTextures(1, @textura[1]);
  glBindTexture(GL_TEXTURE_2D, textura[1]);
  glTexParameterf(GL_Texture_2D,GL_Texture_Wrap_S,GL_REPEAT);
  glTexParameterf(GL_Texture_2D,GL_Texture_Wrap_T,GL_REPEAT);
  glTexParameterf(GL_Texture_2D,GL_Texture_Mag_Filter,GL_Linear);
  glTexParameterf(GL_Texture_2D,GL_Texture_Min_Filter,GL_Linear);
  glTexImage2d(GL_Texture_2D,0,3,Velikost+1,Velikost+1,
                  0,GL_RGB,GL_Unsigned_byte,@buffer);</PRE>
   
<P>Teď ukázka jak to funguje ve skutečnosti. Zdroják dnešního snažení si můžete stáhnout dole.

<CENTER><TABLE class=image CELLPADDING=0 CELLSPACING=0><TR><TD><IMG SRC="articles/glgentext/obr1.jpg" BORDER=0></TD><TD><IMG SRC="articles/glgentext/obr2.jpg" BORDER=0></TD><TD><IMG SRC="articles/glgentext/obr3.jpg" BORDER=0></TD></TR><TR><TD>Počáteční bitmapa odstínů šedé</TD><TD>Vygenerovaná textura</TD><TD>Takhle to vypadá nasazené do krajiny</TD></TR></TABLE></CENTER>

<P>Nejlepší na této metodě je, že k tvorbě jednoho levelu potřebujeme pouze jeden obrázek s odstíny šedé, který určuje výšku každého bodu a tím zároveń i texturu, kterou celý "svět" potáhneme.</P>
   
<CENTER><TABLE class=image CELLPADDING=0 CELLSPACING=0><TR><TD><IMG SRC="articles/glgentext/opengl2.jpg" BORDER=0></TD></TR></TABLE></CENTER>


   
<H2>Vylepšení Far-Clip distance</H2>	
	
<P>V proceduře, která zjišŤuje kolize jsem si zároveň vypočítal nejmenší vzdálenost každého trojúhelníku ve scéně ke kameře a tuto hodnotu jsem uchoval pro pozdější rozhodování.</P> 
	
<PRE><B>if</B> i=0 <B>then begin</B>      //Zjisti min. vzdalenost trojuhelnika od kamery
  <B>if</B> (Akamera&lt;Bkamera) <B>AND</B> (Akamera&lt;Ckamera) <B>then</B> Min:=Akamera;
  <B>if</B> (Bkamera&lt;Akamera) <B>AND</B> (Bkamera&lt;Ckamera) <B>then</B> Min:=Bkamera;
  <B>if</B> (Ckamera&lt;Akamera) <B>AND</B> (Ckamera&lt;Bkamera) <B>then</B> Min:=Ckamera;

  
   //Hodnoty o vzdalenosti trojuhelnika od kamery dosadi do pole
   //pro mozne budouci serazeni od nejvzdalenejsiho
  vzdalenost[count].Id:=count;
  vzdalenost[count].Min:=Min;
<B>end</B>;</PRE>
	  

<P>Taky jsem tuto proceduru vylepšil v tom, že se detekce kolizí počítá jen pro trojúhelníky, které jsou vzdáleny od kamery méně než 20 jednotek. Tímto se zvýšila fps alespoň o 30fps.</P> 
	
<PRE>  <B>if</B> vzdalenost[count].Min<30 <B>then begin</B>
    ...
  <B>end</B>;</PRE>
  
<P>A konečně vykreslíme jen ty trojúhelníky, které mají od kamery menší vzdálenost než je hodnota Far-Clip. Tyto příkazy jsou mnohem efektivnější, nežli ořezávání scény pomocí řezů ClipPlane.</P> 
	
	
<PRE>	   //Vykresleni sceny po trojuhelnicich
  <B>for</B> i:=1 <B>to</B> MaxTriangles <B>do</B>  //Vykresli trojuhelniky podle poradoveho cisla
    <B>if</B> vzdalenost[i].min&lt;FarClip <B>then begin</B>
      glBindTexture(GL_TEXTURE_2D, textura[1]);	     //nacte texturu
      glTexCoordPointer(2, GL_FLOAT, 0, @CoordPointer[i]);  //nacte tex. koord.
      glVertexPointer(3, GL_FLOAT, 0, @VertexPointer[i]);   //nacte pole bodu
      glDrawElements(GL_TRIANGLES, 4, GL_UNSIGNED_INT, @Indices[i]);
    <B>end</B>;</PRE>
	
<P>Tenhle příklad je vhodný jen pro omezení viditelné vzdálenosti "do dálky", ale všechny trojúhelníky vzdálené méně než 20 jednotek se vykreslují i přesto, že jsou nakonec mimo obrazovku (za kamerou, vedle kamery). Proto je vhodné (a já to také někdy popíšu) také determinovat zobrazování i těch trojúhelníků které budou ležet mimo viditelnou oblast. To lze (snad) udělat snadno pomocí zjištění toho nejmenšího úhlu, který svírá vektor jednoho ze tří bodů trojúhelníka se směrovým vektorem kamery. Myslím, že to tak půjde...</P>
	
<CENTER><TABLE class=image CELLPADDING=0 CELLSPACING=0><TR><TD><IMG SRC="articles/glgentext/opengl3.jpg" BORDER=0></TD></TR></TABLE></CENTER>


<H2>Výpočet fps</H2>	
	
<P>Pro výpočet obnovovací frekvence nám dobře poslouží následující procedura, kterou jsem objevil kdesi na netu:</P>
	
<PRE><B>procedure</B> TForm1.CalcFPS(CStep: integer);
<B>var</B>
  i: TLargeInteger;
  FrameTime: double;
<B>begin
  if</B> CStep = 1 <B>then begin</B>  //Calculate start Frequency and start Counter
    QueryPerformanceCounter(i);
    StartCount := i;
    QueryPerformanceFrequency(i);
    StartFreq := i;
    StartCount := StartCount / StartFreq;
  <B>end</B>;

  
  <B>if</B> CStep = 2 <B>then begin</B>	 //Calculate Counter before draw scene
    QueryPerformanceCounter(i);
    Count1 := i / StartFreq;
  <B>end</B>;

  
  <B>if</B> CStep = 3 <B>then begin</B>	 //Calculate Counter after draw scene
    QueryPerformanceCounter(i);
    Count2 := i / StartFreq;
    FrameTime := (Count2 / StartCount) - (Count1 / StartCount);   
    FPS :=  1 / FrameTime;                                      //calculate FPS
    FPS := FPS / StartCount;
    Label1.Caption:=inttostr(round(FPS))+'fps / ';
  <B>end</B>; 
<B>end</B>;</PRE>

<P>Musíme také mít nadefinovány tyto nové proměnné:</P>
<PRE>  StartFreq: TLargeInteger;
  StartCount,Count1, Count2, FPS: double;
  FPSi: integer;</PRE>
	
<P>Při inicializaci zavoláme proceduru CalcFPS s parametrem 1...</P>
	
<PRE>CalcFPS(1);</PRE>
	
<P>A poté jen vložíme do místa, kudy program prochází při každém počítání scény, já jsem jej umístil do procedury <B>TForm1.ZobrazitScenu</B>:</P>
	
<PRE>  <B>if</B> FPSi = 2 <B>then begin</B>	  //Vypocet FPS
    CalcFPS(2);
    FPSi := 3;
  <B>end else begin</B>
    CalcFPS(3);
    FPSi := 2;
  <B>end</B>;</PRE>	
  
<P>Už v samotné proceduře je přidáno <B>Label1.caption:=inttostr(round(FPS))+'fps';</B>, takže nemusíme nikterak čekat na výsledek a ten se nám zobrazí v <B>Label1</B>.</P>

<CENTER><TABLE class=image CELLPADDING=0 CELLSPACING=0><TR><TD><IMG SRC="articles/glgentext/opengl4.jpg" BORDER=0></TD></TR><TABLE></CENTER>
  
<P>Celý zdroják včetně obrázků si můžete stáhnout <A HREF="articles/glgentext/opengl.zip"><B>Tady</B></A> (229 kB).</P><br/><script type="text/javascript"><!--
google_ad_client = "pub-8453529582371782";
google_alternate_color = "FFFFFF";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text";
//2007-07-08: bottom
google_ad_channel = "1008048823";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "4F4F8B";
google_color_text = "000000";
google_color_url = "CCCCF4";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script><p>Děkuji, že jste se rozhodl(a) přečíst tento článek. Budu rád i za komentář. Pokud Vás tento článek
zaujal a rádi byste jej doporučili ostatním, podpořte mně prosím tím, že věnujete minutku svého času a uděláte mi reklamu na linkuj.cz, vybrali.sme.sk či jagg.cz. Přeji příjemné čtení</p><h2>Poslední články</h2><ul style="margin-left: 20px"><li><a href="export-do-gif">Zoner Callisto (1.) - Export do GIFu</a></li><li><a href="3d-studio-max-odlesky-na-vodni-hladine">3D Studio MAX (9.) - Vytváření odlesků vodní hladiny</a></li><li><a href="slovnik-pojmu-opengl">OpenGL (8.) - Slovníček pojmů v OpenGL</a></li><li><a href="detekce-kolizi-v-opengl-nacteni-textury-jpg">OpenGL (7.) - Detekce kolizí, načtení mapy a textury v jpg souboru</a></li><li><a href="co-je-to-minigl">OpenGL (6.) - Co je to MiniGL</a></li><li><a href="opengl-vertex-array-gldrawelements">OpenGL (5.) - Urychlení pomocí glDrawElements</a></li><li><a href="system-speaker-a-destrukce-souboru">Delphi (7.) - Syst. repro a autodestrukce souboru</a></li><li><a href="opengl-fullscreen">OpenGL (4.) - FullScreen</a></li><li><a href="3d-studio-max-horici-zapalka-ohen">3D Studio MAX (8.) - Tvorba hořící zápalky</a></li><li><a href="techniky-zobrazeni-3d-doom">'DOOM' 3D Engine techniques</a></li><li><a href="pohyb-ve-3d-scene">OpenGL (3.) - Procházení scénou</a></li><li><a href="3d-studio-max-3d-text">3D Studio MAX (7.) - 3D text</a></li><li><a href="3d-studio-max-dym-smoke">3D Studio MAX (6.) - Vznášející se dým</a></li><li><a href="adobe-photoshop-textura-vodni-hladiny">Adobe Photoshop (3.) - Textura vodní hladiny</a></li><li><a href="grafika-a-zvuky-v-delphi">Delphi (6.) - Grafika a zvuky</a></li><li><a href="3d-studio-max-mlha-fog">3D Studio MAX (5.) - Přízemní mlha ve 3D Studiu MAX</a></li><li><a href="zajimave-zdrojaky-pro-delphi-2">Delphi (5.) - Zajímavé zdrojáky 2.</a></li><li><a href="adobe-photoshop-hvezdna-obloha-deep-stars">Photoshop tutoriály (2.) - Temná hvězdná obloha</a></li><li><a href="opengl-ctverec-s-texturou">OpenGL (2.) - Čtverec s texturou</a></li><li><a href="nastaveni-opengl-zobrazeni-barevneho-ctverce">OpenGL (1.) - Čtverec s interpolací barvy</a></li><li><a href="3d-studio-max-laser">3D Studio MAX (4.) - Jak vytvořit jednoduchý laser</a></li><li><a href="zajimave-zdrojaky-pro-delphi-1">Delphi (4.) - Zajímavé zdrojáky</a></li><li><a href="3d-studio-max-tvorba-krajiny-landscape">3D Studio MAX (3.) - Tvorba 3D krajiny</a></li><li><a href="detekce-typu-procesoru-jeho-frekvence-vytizeni">Delphi (3.) - Detekce typu procesoru, jeho frekvence a využití</a></li><li><a href="adobe-photoshop-ohniva-koule-fireball">Photoshop tutoriály (1.) - Ohnivé koule</a></li></ul><h2>Diskuse ke článku</h2><a id="disc"></a>Zatím nikdo nevložil komentář. Chcete být první?<br/><a href="index.php?zobraz=discussion&amp;add=1&amp;type=1&amp;subtype=10&amp;url=%2Fgenerovani-textur-terenu-a-far-clip" rel="nofollow">Přidání příspěvku </a>    </div>
    <div class="menuv">
		<span class="nadpisv">Hlavní menu</span>
		<a href="/" class="buttonv">Blog</a>
		<a href="index.php?zobraz=ankety" class="buttonv">Ankety</a>
		<a href="index.php?zobraz=articles" class="buttonv">Články</a>

		<span class="nadpisv">Články</span>
		<a class="buttonv" href="programovani">Programování</a><a class="buttonv" href="grafika-2d-3d">Grafika</a>
		<span class="nadpisv">Tip</span>
		<a class="buttonv" href="index.php?zobraz=blog&amp;rss=10">RSS - Blog</a>
		<a class="buttonv" href="index.php?zobraz=articles&amp;rss=10">RSS - Články</a>
		<a class="buttonv" href="index.php?zobraz=discussion&amp;rss=30">RSS - Komentáře</a>
		<a href="index.php?zobraz=search" class="buttonv">Hledej na pc-guru.cz</a>
     
		<div style="margin-left: 5px">   
<br/><script type="text/javascript"><!--
google_ad_client = "pub-8453529582371782";
google_ad_width = 120;
google_ad_height = 90;
google_ad_format = "120x90_0ads_al_s";
//2007-07-07: adsense left
google_ad_channel = "1408597348";
google_color_border = "9C9CE8";
google_color_bg = "9C9CE8";
google_color_link = "4F4F8B";
google_color_text = "000000";
google_color_url = "CCCCF4";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
		
				<span class="nadpisv">Anketa: Jak trávíte léto?</span><a class="buttonv" href="jak-travite-leto?vote=1" rel="nofollow">Pracovně&nbsp;</a><div class="ank_box_count" style="width: 45.7512846865px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=2" rel="nofollow">Budu cestovat&nbsp;</a><div class="ank_box_count" style="width: 122px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=3" rel="nofollow">Budu grilovat&nbsp;</a><div class="ank_box_count" style="width: 45.7512846865px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=4" rel="nofollow">U piva&nbsp;</a><div class="ank_box_count" style="width: 62px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=5" rel="nofollow">Spát s holkama/klukama&nbsp;</a><div class="ank_box_count" style="width: 47.2929085303px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=6" rel="nofollow">Festivaly&nbsp;</a><div class="ank_box_count" style="width: 35.3915724563px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=7" rel="nofollow">Nic z uvedeného&nbsp;</a><div class="ank_box_count" style="width: 46.7687564234px;">&nbsp;</div>12680 hlasů, <a class="box_ank_prisp" href="jak-travite-leto#disc">10 příspěvků</a>
<span class="nadpisv">Počítadlo</span><div style="text-align: center;"><script type="text/javascript"><!--
document.write ('<img src="http://toplist.cz/count.asp?id=28945&amp;logo=mc&amp;http='+escape(document.referrer)+'&amp;wi='+escape(window.screen.width)+'&amp;he='+escape(window.screen.height)+'&amp;cd='+escape(window.screen.colorDepth)+'&amp;t='+escape(document.title)+'" width="88" height="60" alt="TOPlist" />');
//--></script><noscript><div><img src="http://toplist.cz/count.asp?id=28945&amp;logo=bc" alt="TOPlist" width="88" height="60" /></div></noscript></div>    </div>
  </div>
  <!--<div class="novinky">
 	< ?ShowNewsBox($limit = 5);?>
  </div>-->  
</div>
  <div class="paticka"> <strong>&copy;PC-guru.cz 2000-2007</strong> | Optimalizováno pro 1024*768 </div>
</div>

</body>
</html>
