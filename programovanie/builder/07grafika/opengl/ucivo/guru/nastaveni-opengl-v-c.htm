<?xml version="1.0" encoding="utf-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='cs'>
<head>
<title>OpenGL (13.) - Nastavení OpenGL v jazyce C/C++</title>
<meta http-equiv="content-Type" content="text/html; charset=utf-8"/>
<meta http-equiv="content-language" content="cs"/>
<meta name="description" content="V dnešním článku Vám popíši, na co všechno je třeba myslet při psaní kódu využívajícího 
knihoven OpenGL v C++. Pokud jste četli články ze seriálu OpenGL v Delphi tak máte napůl 
vyhráno. Pokud jste je nečetli, tak Vám to také vysvětlím..."/>
<meta name="Author" content="Roman Schulz, rschulz@centrum.cz"/>
<meta name="robots" content="index,follow"/>
<meta name="Copyright" content="(C) 2005 Roman Schulz, All rights reserved."/>
<link href="index.php?zobraz=articles&amp;rss=10" rel="alternate" type="application/xml" title="rss články"/>
<link href="index.php?zobraz=blog&amp;rss=10" rel="alternate" type="application/xml" title="rss blog"/>
<link href="index.php?zobraz=discussion&amp;rss=30" rel="alternate" type="application/xml" title="rss komentáře"/>
<link rel="stylesheet" href="/skin/new/styl.css" type="text/css"/>
</head>


<body>
<div id="web">
<div id="celek">
  <div id="top">
    <img src="/skin/new/img/top1.jpg" alt="" width="800" height="115" /> 
		<div id="nadpis"><a href="http://www.pc-guru.cz">PC-guru.cz</a></div>
  </div>
  <div class="menuh">
		<a class="buttonh" href="kontakni-informace">Kontaktní informace</a><a class="buttonh" href="inzerce">Výměna odkazů</a><a class="buttonh" href="historie-serveru">Historie</a>  </div>
  
  <div id="obal">
    <div class="text">
<script type="text/javascript"><!--
google_ad_client = "pub-8453529582371782";
google_alternate_color = "FFFFFF";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
//2007-05-24: top
google_ad_channel = "4038297255";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "4F4F8B";
google_color_text = "000000";
google_color_url = "CCCCF4";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script><a href="http://linkuj.cz/?id=linkuj&amp;url=http://www.pc-guru.cz/nastaveni-opengl-v-c&amp;title=OpenGL (13.) - Nastavení OpenGL v jazyce C/C++" rel="nofollow"><img style="float: right;" src="http://linkuj.cz/img/badge.png" alt="Dejte tomuto článku hlas!" title="Dejte tomuto článku hlas!"/></a><h1>OpenGL (13.) - Nastavení OpenGL v jazyce C/C++</h1><i>V dnešním článku Vám popíši, na co všechno je třeba myslet při psaní kódu využívajícího 
knihoven OpenGL v C++. Pokud jste četli články ze seriálu OpenGL v Delphi tak máte napůl 
vyhráno. Pokud jste je nečetli, tak Vám to také vysvětlím...</i><br/><hr/><br/><P>O OpenGL v Céčku bylo již na anglickém internetu popsáno hodně stránek, v češtině se ale většinou jedná jen přeložené články ze serveru NeHe Tutorials. Nechci nikoho kritizovat, protože i překládání do češtiny je také velmi záslužná práce.</P>

<P><I>Pozn.: Píši jen o nastavení OpenGL v operačních systémech Windows, protože funkce začínající na wgl pro nastavení render contextu (viz. dále) nejsou podporovány v ostatních operačních systémech!!!</I></P>


<P>Hlavičkové soubory OpenGL knihovny (gl.h, glu.h) jsou umístěny v adresáři s projektem ve složce gl.</P>
<PRE>#include &ltgl/gl.h&gt      //Knihovna OpenGL32
#include &ltgl/glu.h&gt     //Knivona GLu32</PRE>

<P>Musíme deklarovat proměnné:</P>
<PRE>HDC hDC;             //GDI Device Context
HGLRC hRC;           //Rendering Context
HWND hWnd;           //Handle okna</PRE>

<P>Když jsem začínal v Delphi, zahrnoval jsem do programu i hlavičkový soubor glaux.h (glaux.pas). Tato knihovna převážně slouží k vykreslení složitějších geometrických obrazců jako jsou koule, torus, cylindr, 
Icosahedron, Octahedron, Tetrahedron, Dodecahedron, Cone a Teapot. Dokáže je vykreslit jak plné tak i jako drátěný model. Protože jsem ale funkce z této knihovny (GLaux - OpenGL auxiliary library) ještě nikdy nepoužil, neuvádím ji ve výpisu. Pokud ji v projektu potřebujete, můžete ji zahrnout, předpokládám ale že většina čtenářů jsou začátečníci a knihovnu potřebovat nebudou.</P>

<H2>Device context</H2>
<P>Dalším krokem inicializace OpenGL v C++ je získat device context, který obsahuje informace potřebné pro GDI (graphics device interface - součást operačního systému). Pokud vykreslujeme do okna, můžeme použít WinAPI funkce GetDC s parametrem handle okna.</P>
<PRE>
hWnd = Canvas->Handle;
hDC = GetDC( hWnd );
</PRE>

<P>Jakmile budeme chtít ukončit vykreslování, zavoláme jednoduše funkci RelaseDC:</P>
<PRE>
RelaseDC( hWnd, hDC );
</PRE>

<H2>Pixel Format</H2>
<P>Teď, když už máme device context, musíme udělat ještě jednu věc. je 
třeba nastavit pixelový formát získanému device contextu. Tím oznamujeme
systému, jak budeme používat device context. Zde na nejnižší úrovni
specifikujeme vlastnosti jako double buffering, z-buffering, color format,
alpha buffer atd.</P>

<PRE>
  static PIXELFORMATDESCRIPTOR pfd
    ZeroMemory(&pfd, sizeof( pfd ));
    pfd.nSize = sizeof( pfd );         //velikost struktury pixelu
    pfd.nVersion = 1;                  //cislo verze
    pfd.dwFlags = PFD_DRAW_TO_WINDOW | //vykreslovani do okna
                  PFD_SUPPORT_OPENGL | //přes OpenGL
                  PFD_DOUBLEBUFFER;    //double buffer
    pfd.iPixelType = PFD_TYPE_RGBA;    //barevný model RGBA
    pfd.cColorBits = 24;               //24-bit barva
    pfd.cDepthBits = 16;               //16-bit depth buffer
    pfd.iLayerType = PFD_MAIN_PLANE;   //typ vrstvy
	
  int pixelformat;

  if ((pixelformat = ChoosePixelFormat(hDC, &pfd)) == 0)
  {
    MessageBox(NULL, "Špatně zvolený PixelFormat.", "Error", MB_OK);
  }

  if (SetPixelFormat(hDC, pixelformat, &pfd) == false)
  {
    MessageBox(NULL, "Chybně nastavený PixelFormat", "Error", MB_OK);
  }

</PRE>
<P>V tomto případě jsem nastavil podporu pro OpenGL a double buffer s vykreslováním do okna. To stačí pro většinu aplikací využívajících OpenGL. Funkce ChoosePixelFormat a SetPixelFormat vyberou a nastaví
PixelFormat. Obě funkce jsem ošetřil pro případ chyby.</P>

<P><I>Pozn.: Když používáme double buffering, tak OpenGL vše vykresluje na neviditelné místo do paměti (back buffer). Scéna se nezobrazí v okně, dokud my nedáme OpenGL příkaz, který prohodí ukazatel na back a front 
buffer. To je velmi užitečné, protože se scéna vykresluje mimo obrazovku a celý obraz se objeví naráz a nebliká. Po vykreslení celé tedy stačí napsat:</I><P>
<PRE>SwapBuffers( hDC );</PRE>

<H2>Render context</H2>
<P>Už máme device context a také jsme nastavili vhodný pixel format. Můžeme tedy začít inicializovat OpenGL a render context. Render context (hRC) vytvoříme voláním funkce wglCreateContext:</P>
<PRE>hRC = wglCreateContext( hDC );</PRE>

<P>Jakmile už nebudeme pracovat s rendering contextem, měly bysme ho smazat. Šetří se tím paměť systému:</P>
<PRE>wglDeleteContext( hRC );</PRE> 

<P>V některých případech může být spuštěno více render contextů naráz. Musíme tedy OpenGL říct, který render context má být aktivní. K tomu slouží funkce wglMakeCurrent:</P>
<PRE>wglMakeCurrent( hDC, hRC );</PRE>

<P>Teď jsou všechny OpenGL příkazy směřovány do aktivního render contextu. Nakonec je potřeba nastavit render context na neaktivní. Toho docílíme tak, že zavoláme funkci wglMakeCurrent s parametry NULL:</P>
<PRE>wglMakeCurrent( NULL, NULL );</PRE>

<P>Pokud budete chtít uchovat předchozí device context a render contex můžete použít funkce wglGetCurrentDC and wglGetCurrentContext:</P>
<PRE>wglGetCurrentContext.
HDC hOldDC = wglGetCurrentDC();
HGLRC hOldRC = wglGetCurrentContext();
wglMakeCurrent( hDC, hRC );

//OpenGL příkazy

wglMakeCurrent( hOldDC, hOldRC );</PRE>

<H2>Vše v jednom v C:</H2>
<P>Už umíme získat device context, nastavit pixel format, vytvořit a nastavit render context. To vše můžeme dát dohromady ve dvou funkcích, které zapnou a vypnou OpenGL:</P>
<PRE>void EnableOpenGL(HWND hWnd, HDC * hDC, HGLRC * hRC)
{
  PIXELFORMATDESCRIPTOR pfd;
  int pixelformat;
  
  ZeroMemory(&pfd, sizeof( pfd ));
  pfd.nSize = sizeof( pfd );         //velikost struktury pixelu
  pfd.nVersion = 1;                  //cislo verze
  pfd.dwFlags = PFD_DRAW_TO_WINDOW | //vykreslovani do okna
                PFD_SUPPORT_OPENGL | //přes OpenGL
                PFD_DOUBLEBUFFER;    //double buffer
  pfd.iPixelType = PFD_TYPE_RGBA;    //barevný model RGBA
  pfd.cColorBits = 24;               //24-bit barva
  pfd.cDepthBits = 16;               //16-bit depth buffer
  pfd.iLayerType = PFD_MAIN_PLANE;   //typ vrstvy
	
  if ((pixelformat = ChoosePixelFormat(hDC, &pfd)) == 0)
  {
    MessageBox(NULL, "Špatně zvolený PixelFormat.", "Error", MB_OK);
  }

  if (SetPixelFormat(hDC, pixelformat, &pfd) == false)
  {
    MessageBox(NULL, "Chybně nastavený PixelFormat", "Error", MB_OK);
  }

  //Vytvoříme a nastavíme render context 
  *hRC = wglCreateContext( *hDC );
  wglMakeCurrent( *hDC, *hRC );
}

void DisableOpenGL(HWND hWnd, HDC hDC, HGLRC hRC)
{
  wglMakeCurrent( NULL, NULL );
  wglDeleteContext( hRC );
  ReleaseDC( hWnd, hDC );
}</PRE>

<P>Nyní můžeme mezi funkcemi EnableOpenGL a DisableOpenGL volat funkce OpenGL které potřebujeme. Pamatujte ale, že při zapnutém double bufferu musíte volat i funkci SwapBuffers;</P>


<H2>Vše v jednom v C++:</H2>
<P>Zde je ten samý kód pro C++.  Zavoláním funkce Init se v aktuálním okně vytvoří nový render context. Potom můžete volat ostatní funkce OpenGL. Před ukončením okna by se ještě měla zavolat funkce Free. Výhodou je snadná inicializace při vytvoření okna.</P>
<PRE>class GLContext
{
public:
  GLContext()
  {
    reset();
  }
  
  ~GLContext()
  {
    Free();
  }

  void init(HWND mhWnd)
  {
    hWnd = mhWnd;
    hDC = GetDC( hWnd );

    PIXELFORMATDESCRIPTOR pfd;
  
    ZeroMemory(&pfd, sizeof( pfd ));
    pfd.nSize = sizeof( pfd );         //velikost struktury pixelu
    pfd.nVersion = 1;                  //cislo verze
    pfd.dwFlags = PFD_DRAW_TO_WINDOW | //vykreslovani do okna
                  PFD_SUPPORT_OPENGL | //přes OpenGL
                  PFD_DOUBLEBUFFER;    //double buffer
    pfd.iPixelType = PFD_TYPE_RGBA;    //barevný model RGBA
    pfd.cColorBits = 24;               //24-bit barva
    pfd.cDepthBits = 16;               //16-bit depth buffer
    pfd.iLayerType = PFD_MAIN_PLANE;   //typ vrstvy
	
    if ((pixelformat = ChoosePixelFormat(hDC, &pfd)) == 0)
    {
      MessageBox(NULL, "Špatně zvolený PixelFormat.", "Error", MB_OK);
    }

    if (SetPixelFormat(hDC, pixelformat, &pfd) == false)
    {
      MessageBox(NULL, "Chybně nastavený PixelFormat", "Error", MB_OK);
    }
	
    //Vytvoříme a nastavíme render context 
    hRC = wglCreateContext( hDC );
    wglMakeCurrent( hDC, hRC );
  }

  void Free()
  {
    if ( hRC )
    {
      wglMakeCurrent( NULL, NULL );
      wglDeleteContext( hRC );
    }
    if ( hWnd && hDC )
    {
      ReleaseDC( hWnd, hDC );
    }
    reset();
  }

private:
  void reset()
  {
    hWnd = NULL;
    hDC = NULL;
    hRC = NULL;
  }

  HWND hWnd;
  HDC hDC;
  HGLRC hRC;
};
</PRE>

<P>To je pro dnešek vše. V příštím se budeme přepínat do fullscreen módu a také napíšu 
i o jiných zajímavých vlastnostech OpenGL. Pokud máte otázku, komentář nebo připomínku, 
napište ji prosím do diskuse k tomuto článku a podělte se s ostatními o své zkušenosti.
Hodně úspěchů při psaní ;-)</P><br/><script type="text/javascript"><!--
google_ad_client = "pub-8453529582371782";
google_alternate_color = "FFFFFF";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text";
//2007-07-08: bottom
google_ad_channel = "1008048823";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "4F4F8B";
google_color_text = "000000";
google_color_url = "CCCCF4";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script><p>Děkuji, že jste se rozhodl(a) přečíst tento článek. Budu rád i za komentář. Pokud Vás tento článek
zaujal a rádi byste jej doporučili ostatním, podpořte mně prosím tím, že věnujete minutku svého času a uděláte mi reklamu na linkuj.cz, vybrali.sme.sk či jagg.cz. Přeji příjemné čtení</p><h2>Poslední články</h2><ul style="margin-left: 20px"><li><a href="3d-studio-max-modifikacni-funkce">3D Studio MAX (13.) - Popis modifikačních funkcí ve 3D Studiu MAX</a></li><li><a href="knihovna-fmod-zvuky-direct-sound-eax">Delphi (10.) - knihovna FMOD</a></li><li><a href="vizualizacni-plugin-pro-winamp">OpenGL (12.) - visualizační plugin pro WinAMP</a></li><li><a href="3d-engine-mengine">Herní grafické enginy (1.) - MEngine od Mister Group</a></li><li><a href="download-manager-2">Delphi (9.) - Download 2</a></li><li><a href="download-manager-1">Delphi (8.) - Download</a></li><li><a href="3d-studio-max-tvorba-realisticke-jeskyne2">3D Studio MAX (12.) - Tvorba realistické jeskyně 2</a></li><li><a href="3d-studio-max-tvorba-realisticke-jeskyne">3D Studio MAX (11.) - Tvorba realistické jeskyně</a></li><li><a href="jak-na-programovani-her">Jak na tvorbu her - Na co máme myslet při programování hry?</a></li><li><a href="3d-studio-max-izometricky-pohled">3D Studio MAX (10.) - Izometrický pohled ve 3D Studiu MAX</a></li><li><a href="adobe-photoshop-tutorial-chromovy-text">Adobe Photoshop (4.) - Chromový text</a></li><li><a href="export-do-pdf">Zoner Callisto (2.) - Export do PDF</a></li><li><a href="detekce-kolizi-ve-3d">OpenGL (11.) - Nová detekce kolizí</a></li><li><a href="matematicka-knihovna-geometry-pas-delphi">OpenGL (10.) - Nová knihovna geometry.pas</a></li><li><a href="generovani-textur-terenu-a-far-clip">OpenGL (9.) - Generování textur a vylepšení FarClip Distance</a></li><li><a href="export-do-gif">Zoner Callisto (1.) - Export do GIFu</a></li><li><a href="3d-studio-max-odlesky-na-vodni-hladine">3D Studio MAX (9.) - Vytváření odlesků vodní hladiny</a></li><li><a href="slovnik-pojmu-opengl">OpenGL (8.) - Slovníček pojmů v OpenGL</a></li><li><a href="detekce-kolizi-v-opengl-nacteni-textury-jpg">OpenGL (7.) - Detekce kolizí, načtení mapy a textury v jpg souboru</a></li><li><a href="co-je-to-minigl">OpenGL (6.) - Co je to MiniGL</a></li><li><a href="opengl-vertex-array-gldrawelements">OpenGL (5.) - Urychlení pomocí glDrawElements</a></li><li><a href="system-speaker-a-destrukce-souboru">Delphi (7.) - Syst. repro a autodestrukce souboru</a></li><li><a href="opengl-fullscreen">OpenGL (4.) - FullScreen</a></li><li><a href="3d-studio-max-horici-zapalka-ohen">3D Studio MAX (8.) - Tvorba hořící zápalky</a></li><li><a href="techniky-zobrazeni-3d-doom">'DOOM' 3D Engine techniques</a></li></ul><h2>Diskuse ke článku</h2><a id="disc"></a>Zatím nikdo nevložil komentář. Chcete být první?<br/><a href="index.php?zobraz=discussion&amp;add=1&amp;type=1&amp;subtype=3&amp;url=%2Fnastaveni-opengl-v-c" rel="nofollow">Přidání příspěvku </a>    </div>
    <div class="menuv">
		<span class="nadpisv">Hlavní menu</span>
		<a href="/" class="buttonv">Blog</a>
		<a href="index.php?zobraz=ankety" class="buttonv">Ankety</a>
		<a href="index.php?zobraz=articles" class="buttonv">Články</a>

		<span class="nadpisv">Články</span>
		<a class="buttonv" href="programovani">Programování</a><a class="buttonv" href="grafika-2d-3d">Grafika</a>
		<span class="nadpisv">Tip</span>
		<a class="buttonv" href="index.php?zobraz=blog&amp;rss=10">RSS - Blog</a>
		<a class="buttonv" href="index.php?zobraz=articles&amp;rss=10">RSS - Články</a>
		<a class="buttonv" href="index.php?zobraz=discussion&amp;rss=30">RSS - Komentáře</a>
		<a href="index.php?zobraz=search" class="buttonv">Hledej na pc-guru.cz</a>
     
		<div style="margin-left: 5px">   
<br/><script type="text/javascript"><!--
google_ad_client = "pub-8453529582371782";
google_ad_width = 120;
google_ad_height = 90;
google_ad_format = "120x90_0ads_al_s";
//2007-07-07: adsense left
google_ad_channel = "1408597348";
google_color_border = "9C9CE8";
google_color_bg = "9C9CE8";
google_color_link = "4F4F8B";
google_color_text = "000000";
google_color_url = "CCCCF4";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
		
				<span class="nadpisv">Anketa: Jak trávíte léto?</span><a class="buttonv" href="jak-travite-leto?vote=1" rel="nofollow">Pracovně&nbsp;</a><div class="ank_box_count" style="width: 45.6532029843px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=2" rel="nofollow">Budu cestovat&nbsp;</a><div class="ank_box_count" style="width: 122px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=3" rel="nofollow">Budu grilovat&nbsp;</a><div class="ank_box_count" style="width: 45.7149472601px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=4" rel="nofollow">U piva&nbsp;</a><div class="ank_box_count" style="width: 62.0154360689px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=5" rel="nofollow">Spát s holkama/klukama&nbsp;</a><div class="ank_box_count" style="width: 47.227682017px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=6" rel="nofollow">Festivaly&nbsp;</a><div class="ank_box_count" style="width: 35.3419089272px;">&nbsp;</div><a class="buttonv" href="jak-travite-leto?vote=7" rel="nofollow">Nic z uvedeného&nbsp;</a><div class="ank_box_count" style="width: 46.6719835349px;">&nbsp;</div>12653 hlasů, <a class="box_ank_prisp" href="jak-travite-leto#disc">10 příspěvků</a>
<span class="nadpisv">Počítadlo</span><div style="text-align: center;"><script type="text/javascript"><!--
document.write ('<img src="http://toplist.cz/count.asp?id=28945&amp;logo=mc&amp;http='+escape(document.referrer)+'&amp;wi='+escape(window.screen.width)+'&amp;he='+escape(window.screen.height)+'&amp;cd='+escape(window.screen.colorDepth)+'&amp;t='+escape(document.title)+'" width="88" height="60" alt="TOPlist" />');
//--></script><noscript><div><img src="http://toplist.cz/count.asp?id=28945&amp;logo=bc" alt="TOPlist" width="88" height="60" /></div></noscript></div>    </div>
  </div>
  <!--<div class="novinky">
 	< ?ShowNewsBox($limit = 5);?>
  </div>-->  
</div>
  <div class="paticka"> <strong>&copy;PC-guru.cz 2000-2007</strong> | Optimalizováno pro 1024*768 </div>
</div>

</body>
</html>
